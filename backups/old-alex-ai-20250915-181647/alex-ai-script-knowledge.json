[
  {
    "script_id": "script_c9939384_9cef3715",
    "file_path": "scripts/n8n-cicd-sync.sh",
    "file_name": "n8n-cicd-sync.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Synchronization",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "test_n8n_connection",
      "deploy_workflow",
      "test_workflow",
      "validate_workflow",
      "get_workflow_id",
      "backup_workflows",
      "generate_deployment_report"
    ],
    "dependencies": [
      "Monitor",
      "Review",
      "Optimize",
      "+",
      "Collect"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./n8n-cicd-sync.sh",
      "Deploy: ./n8n-cicd-sync.sh --env production",
      "Monitor: ./n8n-cicd-sync.sh --interval 30",
      "Test: ./n8n-cicd-sync.sh --verbose",
      "API: ./n8n-cicd-sync.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.050649",
    "content_summary": "set -e N8N_URL=\"${N8N_URL}\" N8N_API_KEY=\"${N8N_API_KEY}\" WORKFLOWS_DIR=\"workflows\" BACKUP_DIR=\"n8n-backup-$(date +%Y%m%d-%H%M%S)\"",
    "embedding_text": "n8n-cicd-sync.sh data_processing monitoring testing deployment database_operations file_operations security api_integration synchronization test_n8n_connection deploy_workflow test_workflow validate_workflow get_workflow_id backup_workflows generate_deployment_report set -e N8N_URL=\"${N8N_URL}\" N8N_API_KEY=\"${N8N_API_KEY}\" WORKFLOWS_DIR=\"workflows\" BACKUP_DIR=\"n8n-backup-$(date +%Y%m%d-%H%M%S)\"",
    "created_at": "2025-09-08T22:56:32.800992"
  },
  {
    "script_id": "script_a03f14ae_4158ace7",
    "file_path": "scripts/get-and-update-claude-key.sh",
    "file_name": "get-and-update-claude-key.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [
      "Need",
      "Exiting.\"",
      "Sign",
      "~/.zshrc",
      "Go",
      "Error:\"",
      "Name",
      "Copy",
      "Click"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./get-and-update-claude-key.sh",
      "Deploy: ./get-and-update-claude-key.sh --env production",
      "Monitor: ./get-and-update-claude-key.sh --interval 30",
      "Test: ./get-and-update-claude-key.sh --verbose",
      "API: ./get-and-update-claude-key.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.312575",
    "content_summary": "echo \"\ud83e\udde0 Alex AI Claude API Key Setup\" echo \"===============================\" CURRENT_KEY=$(grep 'export ANTHROPIC_API_KEY=' ~/.zshrc | cut -d'\"' -f2) if [ \"$CURRENT_KEY\" != \"YOUR_NEW_ANTHROPIC_API_KEY...",
    "embedding_text": "get-and-update-claude-key.sh monitoring testing deployment database_operations file_operations security api_integration synchronization  echo \"\ud83e\udde0 Alex AI Claude API Key Setup\" echo \"===============================\" CURRENT_KEY=$(grep 'export ANTHROPIC_API_KEY=' ~/.zshrc | cut -d'\"' -f2) if [ \"$CURRENT_KEY\" != \"YOUR_NEW_ANTHROPIC_API_KEY...",
    "created_at": "2025-09-08T22:56:32.800995"
  },
  {
    "script_id": "script_95735204_ce8fd1c7",
    "file_path": "scripts/greg-community-intelligence-dual-milestone-push.sh",
    "file_name": "greg-community-intelligence-dual-milestone-push.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Version Control",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "print_error",
      "print_section",
      "print_success"
    ],
    "dependencies": [
      "Build",
      "Extract",
      "Achieve",
      "Continue"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./greg-community-intelligence-dual-milestone-push.sh",
      "Deploy: ./greg-community-intelligence-dual-milestone-push.sh --env production",
      "Monitor: ./greg-community-intelligence-dual-milestone-push.sh --interval 30",
      "Test: ./greg-community-intelligence-dual-milestone-push.sh --verbose",
      "API: ./greg-community-intelligence-dual-milestone-push.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.166200",
    "content_summary": "set -e  # Exit on any error RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m' BLUE='\\033[0;34m'",
    "embedding_text": "greg-community-intelligence-dual-milestone-push.sh data_processing monitoring testing deployment database_operations file_operations security api_integration synchronization print_error print_section print_success set -e  # Exit on any error RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m' BLUE='\\033[0;34m'",
    "created_at": "2025-09-08T22:56:32.800996"
  },
  {
    "script_id": "script_6ccfedee_526975ac",
    "file_path": "scripts/intelligent-script-discovery.py",
    "file_name": "intelligent-script-discovery.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "generate_javascript_template",
      "load_analysis",
      "create_script_from_recommendation",
      "find_similar_scripts",
      "generate_new_script_template",
      "save_recommendation",
      "calculate_similarity",
      "generate_python_template",
      "use_as_template_recommendation",
      "generate_template_content",
      "generate_bash_template",
      "create_new_script_recommendation",
      "modify_template_for_purpose",
      "discover_script",
      "get_file_extension_for_category",
      "extend_existing_script_recommendation"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "typing",
      "datetime",
      "logging",
      "Dict",
      "sys",
      "dataclass",
      "subprocess",
      "os",
      "argparse"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension"
    ],
    "usage_examples": [
      "Execute: ./intelligent-script-discovery.py",
      "Deploy: ./intelligent-script-discovery.py --env production",
      "Monitor: ./intelligent-script-discovery.py --interval 30",
      "Test: ./intelligent-script-discovery.py --verbose",
      "API: ./intelligent-script-discovery.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.169558",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Intelligent Script Discovery & Extension System ============================================== AI-powered script discovery, extension, and redundan...",
    "embedding_text": "intelligent-script-discovery.py data_processing monitoring testing deployment database_operations file_operations security api_integration synchronization generate_javascript_template load_analysis create_script_from_recommendation find_similar_scripts generate_new_script_template save_recommendation calculate_similarity generate_python_template use_as_template_recommendation generate_template_content generate_bash_template create_new_script_recommendation modify_template_for_purpose discover_script get_file_extension_for_category extend_existing_script_recommendation from scripts.utilities.shared_functions import * \"\"\" Intelligent Script Discovery & Extension System ============================================== AI-powered script discovery, extension, and redundan...",
    "created_at": "2025-09-08T22:56:32.800997"
  },
  {
    "script_id": "script_d182c58c_7645a17d",
    "file_path": "scripts/update-claude-api.sh",
    "file_name": "update-claude-api.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [
      "Create",
      "Go",
      "Update",
      "Navigate",
      "Copy"
    ],
    "complexity_score": 7,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./update-claude-api.sh",
      "Monitor: ./update-claude-api.sh --interval 30",
      "Test: ./update-claude-api.sh --verbose",
      "API: ./update-claude-api.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.312817",
    "content_summary": "echo \"\ud83e\udde0 Alex AI Claude API Key Update Script\" echo \"========================================\" echo \"\ud83d\udcca Current API Key Analysis:\" echo \"Length: ${#ANTHROPIC_API_KEY} characters\" echo \"Starts with: ${AN...",
    "embedding_text": "update-claude-api.sh monitoring testing database_operations file_operations security api_integration synchronization  echo \"\ud83e\udde0 Alex AI Claude API Key Update Script\" echo \"========================================\" echo \"\ud83d\udcca Current API Key Analysis:\" echo \"Length: ${#ANTHROPIC_API_KEY} characters\" echo \"Starts with: ${AN...",
    "created_at": "2025-09-08T22:56:32.800999"
  },
  {
    "script_id": "script_95615b1f_fee522f2",
    "file_path": "scripts/optimize-turborepo-structure.sh",
    "file_name": "optimize-turborepo-structure.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [
      "Create",
      "Test",
      "Move",
      "Update",
      "Commit",
      "-maxdepth",
      "Remove"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./optimize-turborepo-structure.sh",
      "Monitor: ./optimize-turborepo-structure.sh --interval 30",
      "Test: ./optimize-turborepo-structure.sh --verbose"
    ],
    "last_modified": "2025-09-07T02:22:40.073857",
    "content_summary": "set -e echo \"\ud83d\ude80 Alex AI Crew - Turborepo Structure Optimization\" echo \"==================================================\" echo \"\" if [ ! -f \"turbo.json\" ]; then",
    "embedding_text": "optimize-turborepo-structure.sh data_processing monitoring testing database_operations file_operations synchronization  set -e echo \"\ud83d\ude80 Alex AI Crew - Turborepo Structure Optimization\" echo \"==================================================\" echo \"\" if [ ! -f \"turbo.json\" ]; then",
    "created_at": "2025-09-08T22:56:32.801000"
  },
  {
    "script_id": "script_ccc27495_6b9eb143",
    "file_path": "scripts/setup-supabase-with-credentials.sh",
    "file_name": "setup-supabase-with-credentials.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Environment Setup",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "setup_rls",
      "create_tables_direct",
      "execute_sql",
      "create_indexes",
      "test_tables",
      "insert_test_data"
    ],
    "dependencies": [
      "Louis,",
      "VARCHAR(100),"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension"
    ],
    "usage_examples": [
      "Execute: ./setup-supabase-with-credentials.sh",
      "Deploy: ./setup-supabase-with-credentials.sh --env production",
      "Monitor: ./setup-supabase-with-credentials.sh --interval 30",
      "Test: ./setup-supabase-with-credentials.sh --verbose",
      "API: ./setup-supabase-with-credentials.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.052706",
    "content_summary": "set -e echo \"\ud83d\uddc4\ufe0f  Setting up Supabase Tables with Secure Credentials\" echo \"=====================================================\" echo \"\u2139\ufe0f  Loading credentials...\" while IFS= read -r line; do",
    "embedding_text": "setup-supabase-with-credentials.sh data_processing monitoring testing deployment database_operations file_operations security api_integration synchronization setup_rls create_tables_direct execute_sql create_indexes test_tables insert_test_data set -e echo \"\ud83d\uddc4\ufe0f  Setting up Supabase Tables with Secure Credentials\" echo \"=====================================================\" echo \"\u2139\ufe0f  Loading credentials...\" while IFS= read -r line; do",
    "created_at": "2025-09-08T22:56:32.801001"
  },
  {
    "script_id": "script_ce4b4f0a_3de4957f",
    "file_path": "scripts/script-consolidation-plan.py",
    "file_name": "script-consolidation-plan.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "analyze_duplicates",
      "create_consolidated_javascript_script",
      "consolidate_scripts",
      "determine_subcategory",
      "create_consolidation_plan",
      "calculate_space_saved",
      "get_consolidation_strategy",
      "determine_script_type",
      "group_scripts_by_subcategory",
      "create_consolidated_bash_script",
      "execute_consolidation",
      "create_new_directory_structure",
      "calculate_scripts_after_consolidation",
      "create_consolidated_python_script",
      "analyze_redundant_scripts",
      "create_consolidation_mapping",
      "create_consolidated_script",
      "remove_duplicate_scripts"
    ],
    "dependencies": [
      "json",
      "shutil",
      "typing",
      "datetime",
      "logging",
      "Dict",
      "sys",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension"
    ],
    "usage_examples": [
      "Execute: ./script-consolidation-plan.py",
      "Deploy: ./script-consolidation-plan.py --env production",
      "Test: ./script-consolidation-plan.py --verbose",
      "API: ./script-consolidation-plan.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.169711",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Script Consolidation Plan ======================== Intelligent script consolidation based on analysis and Supabase data structure",
    "embedding_text": "script-consolidation-plan.py data_processing testing deployment database_operations file_operations security api_integration synchronization analyze_duplicates create_consolidated_javascript_script consolidate_scripts determine_subcategory create_consolidation_plan calculate_space_saved get_consolidation_strategy determine_script_type group_scripts_by_subcategory create_consolidated_bash_script execute_consolidation create_new_directory_structure calculate_scripts_after_consolidation create_consolidated_python_script analyze_redundant_scripts create_consolidation_mapping create_consolidated_script remove_duplicate_scripts from scripts.utilities.shared_functions import * \"\"\" Script Consolidation Plan ======================== Intelligent script consolidation based on analysis and Supabase data structure",
    "created_at": "2025-09-08T22:56:32.801003"
  },
  {
    "script_id": "script_2c59bed5_9705f9a8",
    "file_path": "scripts/optimize-packages-structure.sh",
    "file_name": "optimize-packages-structure.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [
      "**Created",
      "Deploy",
      "**Optimized",
      "Implement",
      "**Removed",
      "**Standardized",
      "Commander",
      "Add",
      "Run",
      "**Fixed",
      "Test",
      "Beverly",
      "Update",
      "Review",
      "**Enhanced",
      "**Consolidated",
      "**Moved"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./optimize-packages-structure.sh",
      "Deploy: ./optimize-packages-structure.sh --env production",
      "Monitor: ./optimize-packages-structure.sh --interval 30",
      "Test: ./optimize-packages-structure.sh --verbose",
      "API: ./optimize-packages-structure.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-07T02:33:34.045739",
    "content_summary": "set -e echo \"\ud83d\ude80 Alex AI Packages Optimization\" echo \"=================================\" echo \"\ud83d\udcc5 $(date)\" echo \"\"",
    "embedding_text": "optimize-packages-structure.sh data_processing monitoring testing deployment database_operations file_operations security api_integration synchronization  set -e echo \"\ud83d\ude80 Alex AI Packages Optimization\" echo \"=================================\" echo \"\ud83d\udcc5 $(date)\" echo \"\"",
    "created_at": "2025-09-08T22:56:32.801004"
  },
  {
    "script_id": "script_828ed9d1_c0c7c275",
    "file_path": "scripts/milestone-push.sh",
    "file_name": "milestone-push.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Version Control",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "get_timestamp",
      "print_info",
      "create_milestone_message",
      "print_warning",
      "print_milestone",
      "milestone_push",
      "show_help"
    ],
    "dependencies": [
      "data",
      "management!",
      "print_info",
      "Create",
      "Stage",
      "Commit",
      "Push",
      "tracking",
      "management"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./milestone-push.sh",
      "Monitor: ./milestone-push.sh --interval 30",
      "Test: ./milestone-push.sh --verbose",
      "API: ./milestone-push.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.099397",
    "content_summary": "set -e  # Exit on any error RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m' BLUE='\\033[0;34m'",
    "embedding_text": "milestone-push.sh data_processing monitoring testing database_operations file_operations api_integration synchronization get_timestamp print_info create_milestone_message print_warning print_milestone milestone_push show_help set -e  # Exit on any error RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m' BLUE='\\033[0;34m'",
    "created_at": "2025-09-08T22:56:32.801005"
  },
  {
    "script_id": "script_e12455c2_4c7a08bc",
    "file_path": "scripts/milestone-push-system.sh",
    "file_name": "milestone-push-system.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Version Control",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "create_push_instructions",
      "display_current_status",
      "create_project_milestone_package",
      "create_milestone_summary",
      "create_alexai_base_package"
    ],
    "dependencies": [
      "**Update",
      "Create",
      "**Create",
      "Set",
      "Project-Specific",
      "The",
      "Push",
      "Update",
      "**Repository",
      "Alex",
      "###",
      "EOF",
      "**Set"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./milestone-push-system.sh",
      "Deploy: ./milestone-push-system.sh --env production",
      "Monitor: ./milestone-push-system.sh --interval 30",
      "Test: ./milestone-push-system.sh --verbose",
      "API: ./milestone-push-system.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.056045",
    "content_summary": "set -e  # Exit on any error echo \"\ud83d\ude80 Alex AI Milestone Push System\" echo \"================================\" echo \"\" create_milestone_summary() {",
    "embedding_text": "milestone-push-system.sh data_processing monitoring testing automation deployment database_operations file_operations api_integration synchronization create_push_instructions display_current_status create_project_milestone_package create_milestone_summary create_alexai_base_package set -e  # Exit on any error echo \"\ud83d\ude80 Alex AI Milestone Push System\" echo \"================================\" echo \"\" create_milestone_summary() {",
    "created_at": "2025-09-08T22:56:32.801007"
  },
  {
    "script_id": "script_35aed659_2b3e26d2",
    "file_path": "scripts/populate-job-data.js",
    "file_name": "populate-job-data.js",
    "file_type": "js",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "database_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "populateJobData"
    ],
    "dependencies": [
      "@supabase/supabase-js",
      "axios"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Single-purpose script - could be extended with additional functions"
    ],
    "usage_examples": [
      "Execute: ./populate-job-data.js",
      "Monitor: ./populate-job-data.js --interval 30",
      "Test: ./populate-job-data.js --verbose",
      "API: ./populate-job-data.js --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-07T02:56:34.621229",
    "content_summary": "/**  * Populate Job Data Script  *   * This script populates the Supabase database with real job opportunities  * using our existing scraping capabilities and Alex AI analysis.",
    "embedding_text": "populate-job-data.js data_processing monitoring testing automation database_operations api_integration synchronization populateJobData /**  * Populate Job Data Script  *   * This script populates the Supabase database with real job opportunities  * using our existing scraping capabilities and Alex AI analysis.",
    "created_at": "2025-09-08T22:56:32.801008"
  },
  {
    "script_id": "script_36f4a628_b74f4f5b",
    "file_path": "scripts/intelligent-consolidation-executor.py",
    "file_name": "intelligent-consolidation-executor.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "__init__",
      "consolidate_redundant_scripts",
      "find_best_function_implementation",
      "main",
      "merge_scripts",
      "update_script_references",
      "save_consolidation_log",
      "create_initial_utility_file",
      "consolidate_duplicate_functions",
      "remove_function_from_file",
      "add_utility_import",
      "remove_duplicate_functions",
      "cleanup_orphaned_functions",
      "generate_consolidation_report",
      "execute_consolidation",
      "extract_function_content",
      "create_shared_utility_file",
      "load_recommendations",
      "create_backup",
      "add_function_to_utility",
      "find_best_script"
    ],
    "dependencies": [
      "json",
      "shutil",
      "re",
      "typing",
      "datetime",
      "logging",
      "insert_index",
      "Dict",
      "sys",
      "statements",
      "to",
      "already",
      "at",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./intelligent-consolidation-executor.py",
      "Deploy: ./intelligent-consolidation-executor.py --env production",
      "Monitor: ./intelligent-consolidation-executor.py --interval 30",
      "Test: ./intelligent-consolidation-executor.py --verbose"
    ],
    "last_modified": "2025-09-08T22:21:20.687905",
    "content_summary": "\"\"\" Intelligent Consolidation Executor ================================= Execute intelligent consolidation based on deep code analysis \"\"\"",
    "embedding_text": "intelligent-consolidation-executor.py data_processing monitoring testing deployment database_operations file_operations synchronization __init__ consolidate_redundant_scripts find_best_function_implementation main merge_scripts update_script_references save_consolidation_log create_initial_utility_file consolidate_duplicate_functions remove_function_from_file add_utility_import remove_duplicate_functions cleanup_orphaned_functions generate_consolidation_report execute_consolidation extract_function_content create_shared_utility_file load_recommendations create_backup add_function_to_utility find_best_script \"\"\" Intelligent Consolidation Executor ================================= Execute intelligent consolidation based on deep code analysis \"\"\"",
    "created_at": "2025-09-08T22:56:32.801009"
  },
  {
    "script_id": "script_308b89b5_a42f58c0",
    "file_path": "scripts/deploy-n8n-with-credentials.sh",
    "file_name": "deploy-n8n-with-credentials.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Deployment and Setup",
    "functionality": [
      "data_processing",
      "testing",
      "deployment",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "test_webhooks",
      "deploy_workflow",
      "activate_workflow",
      "create_supabase_credentials"
    ],
    "dependencies": [
      "Test",
      "Create",
      "Begin"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./deploy-n8n-with-credentials.sh",
      "Deploy: ./deploy-n8n-with-credentials.sh --env production",
      "Test: ./deploy-n8n-with-credentials.sh --verbose",
      "API: ./deploy-n8n-with-credentials.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.056817",
    "content_summary": "set -e echo \"\ud83d\ude80 Deploying N8N Workflows with Secure Credentials\" echo \"=================================================\" echo \"\u2139\ufe0f  Loading credentials...\" while IFS= read -r line; do",
    "embedding_text": "deploy-n8n-with-credentials.sh data_processing testing deployment file_operations security api_integration test_webhooks deploy_workflow activate_workflow create_supabase_credentials set -e echo \"\ud83d\ude80 Deploying N8N Workflows with Secure Credentials\" echo \"=================================================\" echo \"\u2139\ufe0f  Loading credentials...\" while IFS= read -r line; do",
    "created_at": "2025-09-08T22:56:32.801011"
  },
  {
    "script_id": "script_4d4ce8be_719a2833",
    "file_path": "scripts/script-management-dashboard.html",
    "file_name": "script-management-dashboard.html",
    "file_type": "html",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 1,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./script-management-dashboard.html",
      "Deploy: ./script-management-dashboard.html --env production",
      "Monitor: ./script-management-dashboard.html --interval 30",
      "Test: ./script-management-dashboard.html --verbose"
    ],
    "last_modified": "2025-09-08T21:58:11.653242",
    "content_summary": "<!DOCTYPE html> <html lang=\"en\"> <head>     <meta charset=\"UTF-8\">     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
    "embedding_text": "script-management-dashboard.html data_processing monitoring testing automation deployment database_operations file_operations synchronization  <!DOCTYPE html> <html lang=\"en\"> <head>     <meta charset=\"UTF-8\">     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
    "created_at": "2025-09-08T22:56:32.801014"
  },
  {
    "script_id": "script_07752efc_dea5eab6",
    "file_path": "scripts/sync-n8n-unified-config.sh",
    "file_name": "sync-n8n-unified-config.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Synchronization",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "update_workflow",
      "create_workflow"
    ],
    "dependencies": [
      "Crusher",
      "Implement",
      "Please",
      "~/.zshrc",
      "Test",
      "Monitor",
      "Review",
      "Optimize",
      "Collect"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./sync-n8n-unified-config.sh",
      "Deploy: ./sync-n8n-unified-config.sh --env production",
      "Monitor: ./sync-n8n-unified-config.sh --interval 30",
      "Test: ./sync-n8n-unified-config.sh --verbose",
      "API: ./sync-n8n-unified-config.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-07T11:51:02.107597",
    "content_summary": "echo \"\ud83d\ude80 N8N Unified Configuration Sync\" echo \"==================================\" source ~/.zshrc if [ -z \"$N8N_URL\" ] || [ -z \"$N8N_API_KEY\" ]; then     echo \"\u274c N8N credentials not found. Please chec...",
    "embedding_text": "sync-n8n-unified-config.sh data_processing monitoring testing deployment database_operations file_operations api_integration synchronization update_workflow create_workflow echo \"\ud83d\ude80 N8N Unified Configuration Sync\" echo \"==================================\" source ~/.zshrc if [ -z \"$N8N_URL\" ] || [ -z \"$N8N_API_KEY\" ]; then     echo \"\u274c N8N credentials not found. Please chec...",
    "created_at": "2025-09-08T22:56:32.801015"
  },
  {
    "script_id": "script_9763960a_e99760fe",
    "file_path": "scripts/script-memory-system.py",
    "file_name": "script-memory-system.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "extract_relevant_dependencies",
      "store_script_memory",
      "extract_relevant_functions",
      "get_script_recommendations",
      "find_existing_script",
      "search_similar_scripts",
      "create_script_embedding",
      "create_script_structure",
      "create_script_template",
      "create_basic_template",
      "suggest_script_extension",
      "create_script_header"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "typing",
      "datetime",
      "hashlib",
      "logging",
      "SentenceTransformer",
      "numpy",
      "Dict",
      "sentence_transformers",
      "sys",
      "dataclass",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension"
    ],
    "usage_examples": [
      "Execute: ./script-memory-system.py",
      "Deploy: ./script-memory-system.py --env production",
      "Monitor: ./script-memory-system.py --interval 30",
      "Test: ./script-memory-system.py --verbose",
      "API: ./script-memory-system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.169919",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Script Memory System with Supabase Vector Database ================================================= Intelligent script discovery and extension usi...",
    "embedding_text": "script-memory-system.py data_processing monitoring testing deployment database_operations file_operations security api_integration synchronization extract_relevant_dependencies store_script_memory extract_relevant_functions get_script_recommendations find_existing_script search_similar_scripts create_script_embedding create_script_structure create_script_template create_basic_template suggest_script_extension create_script_header from scripts.utilities.shared_functions import * \"\"\" Script Memory System with Supabase Vector Database ================================================= Intelligent script discovery and extension usi...",
    "created_at": "2025-09-08T22:56:32.801017"
  },
  {
    "script_id": "script_5d2bc3e0_1703dae9",
    "file_path": "scripts/fix-zshrc-api-key.sh",
    "file_name": "fix-zshrc-api-key.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [
      "You'll",
      "Test",
      "~/.zshrc\"",
      "If"
    ],
    "complexity_score": 6,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./fix-zshrc-api-key.sh",
      "Test: ./fix-zshrc-api-key.sh --verbose",
      "API: ./fix-zshrc-api-key.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.331230",
    "content_summary": "echo \"\ud83d\udd27 Fixing duplicated ANTHROPIC_API_KEY in ~/.zshrc\" echo \"==================================================\" cp ~/.zshrc ~/.zshrc.backup.$(date +%Y%m%d_%H%M%S) echo \"\u2705 Created backup: ~/.zshrc.b...",
    "embedding_text": "fix-zshrc-api-key.sh testing database_operations file_operations api_integration synchronization  echo \"\ud83d\udd27 Fixing duplicated ANTHROPIC_API_KEY in ~/.zshrc\" echo \"==================================================\" cp ~/.zshrc ~/.zshrc.backup.$(date +%Y%m%d_%H%M%S) echo \"\u2705 Created backup: ~/.zshrc.b...",
    "created_at": "2025-09-08T22:56:32.801018"
  },
  {
    "script_id": "script_80ac7061_74a81139",
    "file_path": "scripts/safe-execute.sh",
    "file_name": "safe-execute.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "security",
      "monitoring"
    ],
    "functions": [
      "safe_milestone",
      "safe_progress",
      "safe_status",
      "safe_list"
    ],
    "dependencies": [],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./safe-execute.sh",
      "Monitor: ./safe-execute.sh --interval 30",
      "Test: ./safe-execute.sh --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.166430",
    "content_summary": "    local description=\"$2\"     printf \"\ud83d\udd04 Executing: %s\\n\" \"$description\"     if echo \"$command\" | grep -q 'echo.*\".*$' && echo \"$command\" | grep -A1 'echo.*\".*$' | grep -q 'echo'; then         printf ...",
    "embedding_text": "safe-execute.sh testing security monitoring safe_milestone safe_progress safe_status safe_list     local description=\"$2\"     printf \"\ud83d\udd04 Executing: %s\\n\" \"$description\"     if echo \"$command\" | grep -q 'echo.*\".*$' && echo \"$command\" | grep -A1 'echo.*\".*$' | grep -q 'echo'; then         printf ...",
    "created_at": "2025-09-08T22:56:32.801019"
  },
  {
    "script_id": "script_484b9c5d_d6f4590d",
    "file_path": "scripts/claude-api-key-guide.sh",
    "file_name": "claude-api-key-guide.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "file_operations",
      "api_integration",
      "monitoring"
    ],
    "functions": [],
    "dependencies": [
      "Replace",
      "\ud83c\udfaf",
      "Run:",
      "\ud83c\udf10",
      "\ud83d\udcdd",
      "Save",
      "\ud83d\udd10",
      "\ud83d\udd11"
    ],
    "complexity_score": 3,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension"
    ],
    "usage_examples": [
      "Execute: ./claude-api-key-guide.sh",
      "Monitor: ./claude-api-key-guide.sh --interval 30",
      "Test: ./claude-api-key-guide.sh --verbose",
      "API: ./claude-api-key-guide.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.331678",
    "content_summary": "echo \"\ud83d\udd0d Finding Your API Key in the New Claude UI\" echo \"=============================================\" echo \"\" echo \"\ud83d\udccb Step-by-Step Guide:\" echo \"\"",
    "embedding_text": "claude-api-key-guide.sh testing file_operations api_integration monitoring  echo \"\ud83d\udd0d Finding Your API Key in the New Claude UI\" echo \"=============================================\" echo \"\" echo \"\ud83d\udccb Step-by-Step Guide:\" echo \"\"",
    "created_at": "2025-09-08T22:56:32.801021"
  },
  {
    "script_id": "script_fb8fc1cd_2e28d214",
    "file_path": "scripts/script-index.json",
    "file_name": "script-index.json",
    "file_type": "json",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 1,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./script-index.json",
      "Deploy: ./script-index.json --env production",
      "Monitor: ./script-index.json --interval 30",
      "Test: ./script-index.json --verbose",
      "API: ./script-index.json --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.471235",
    "content_summary": "{   \"consolidated_scripts\": {     \"deployment/sync_operations\": {       \"path\": \"scripts/deployment/sync_operations/consolidated_sync_operations.py\",       \"original_scripts\": [",
    "embedding_text": "script-index.json data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization  {   \"consolidated_scripts\": {     \"deployment/sync_operations\": {       \"path\": \"scripts/deployment/sync_operations/consolidated_sync_operations.py\",       \"original_scripts\": [",
    "created_at": "2025-09-08T22:56:32.801022"
  },
  {
    "script_id": "script_863988b5_54a28efc",
    "file_path": "scripts/analyze-conflicts.sh",
    "file_name": "analyze-conflicts.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Analysis",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "file_operations",
      "security",
      "synchronization"
    ],
    "functions": [
      "generate_conflict_matrix",
      "generate_resolution_recommendations",
      "check_circular_dependencies",
      "analyze_conflicts",
      "check_workflow_conflicts"
    ],
    "dependencies": [
      "**Merge",
      "Resolve",
      "**Manual",
      "Missing",
      "Orphaned",
      "Remove",
      "Circular",
      "Invalid",
      "**Deployment**:",
      "**Validation**:",
      "**Monitoring**:",
      "Review",
      "**Code",
      "Validate",
      "Duplicate",
      "**Testing**:",
      "Fix",
      "**Documentation**:",
      "##"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./analyze-conflicts.sh",
      "Deploy: ./analyze-conflicts.sh --env production",
      "Monitor: ./analyze-conflicts.sh --interval 30",
      "Test: ./analyze-conflicts.sh --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.057416",
    "content_summary": "set -e CONFLICT_DIR=\"conflicts\" WORKFLOWS_DIR=\"workflows\" ANALYSIS_DIR=\"analysis\" RED='\\033[0;31m'",
    "embedding_text": "analyze-conflicts.sh data_processing monitoring testing automation deployment file_operations security synchronization generate_conflict_matrix generate_resolution_recommendations check_circular_dependencies analyze_conflicts check_workflow_conflicts set -e CONFLICT_DIR=\"conflicts\" WORKFLOWS_DIR=\"workflows\" ANALYSIS_DIR=\"analysis\" RED='\\033[0;31m'",
    "created_at": "2025-09-08T22:56:32.801023"
  },
  {
    "script_id": "script_523e6a6e_e5a8c947",
    "file_path": "scripts/add-quote-handling-memory.py",
    "file_name": "add-quote-handling-memory.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "save_memory_to_file",
      "add_memory_to_supabase",
      "add_memory_via_api",
      "add_memory"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "Supabase",
      "sys",
      "urllib",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./add-quote-handling-memory.py",
      "Deploy: ./add-quote-handling-memory.py --env production",
      "Monitor: ./add-quote-handling-memory.py --interval 30",
      "Test: ./add-quote-handling-memory.py --verbose",
      "API: ./add-quote-handling-memory.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.170081",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Add Quote Handling Memory to Alex AI System =========================================== This script adds the critical quote handling insight to the...",
    "embedding_text": "add-quote-handling-memory.py data_processing monitoring testing deployment database_operations file_operations security api_integration synchronization save_memory_to_file add_memory_to_supabase add_memory_via_api add_memory from scripts.utilities.shared_functions import * \"\"\" Add Quote Handling Memory to Alex AI System =========================================== This script adds the critical quote handling insight to the...",
    "created_at": "2025-09-08T22:56:32.801024"
  },
  {
    "script_id": "script_b2d2136f_6d1b73ff",
    "file_path": "scripts/security-validation.sh",
    "file_name": "security-validation.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Security",
    "functionality": [
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "validate_url_security",
      "check_hardcoded_credentials",
      "check_dangerous_commands",
      "validate_authentication",
      "validate_workflow_permissions",
      "check_sensitive_data"
    ],
    "dependencies": [],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./security-validation.sh",
      "Monitor: ./security-validation.sh --interval 30",
      "Test: ./security-validation.sh --verbose",
      "API: ./security-validation.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.058399",
    "content_summary": "set -e WORKFLOWS_DIR=\"workflows\" RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m'",
    "embedding_text": "security-validation.sh monitoring testing database_operations file_operations security api_integration validate_url_security check_hardcoded_credentials check_dangerous_commands validate_authentication validate_workflow_permissions check_sensitive_data set -e WORKFLOWS_DIR=\"workflows\" RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m'",
    "created_at": "2025-09-08T22:56:32.801026"
  },
  {
    "script_id": "script_6f80abc8_ab15bcb8",
    "file_path": "scripts/validate-consolidated-structure.py",
    "file_name": "validate-consolidated-structure.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "security"
    ],
    "functions": [
      "test_functionality",
      "test_script_analyzer",
      "validate_remaining_scripts",
      "generate_validation_report",
      "check_broken_references",
      "test_intelligent_discovery",
      "test_consolidated_scripts",
      "validate_consolidated_scripts",
      "check_script_structure",
      "generate_recommendations",
      "validate_directory_structure",
      "find_broken_references",
      "validate_structure"
    ],
    "dependencies": [
      "json",
      "re",
      "typing",
      "logging",
      "Dict",
      "subprocess",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./validate-consolidated-structure.py",
      "Deploy: ./validate-consolidated-structure.py --env production",
      "Monitor: ./validate-consolidated-structure.py --interval 30",
      "Test: ./validate-consolidated-structure.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.170226",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Validate Consolidated Structure ============================== Validate the consolidated script structure and test functionality",
    "embedding_text": "validate-consolidated-structure.py data_processing monitoring testing deployment file_operations security test_functionality test_script_analyzer validate_remaining_scripts generate_validation_report check_broken_references test_intelligent_discovery test_consolidated_scripts validate_consolidated_scripts check_script_structure generate_recommendations validate_directory_structure find_broken_references validate_structure from scripts.utilities.shared_functions import * \"\"\" Validate Consolidated Structure ============================== Validate the consolidated script structure and test functionality",
    "created_at": "2025-09-08T22:56:32.801027"
  },
  {
    "script_id": "script_3446c880_ca702870",
    "file_path": "scripts/quick-production-test.sh",
    "file_name": "quick-production-test.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "test_nextjs",
      "test_result",
      "test_api_security"
    ],
    "dependencies": [
      "Address"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./quick-production-test.sh",
      "Deploy: ./quick-production-test.sh --env production",
      "Monitor: ./quick-production-test.sh --interval 30",
      "Test: ./quick-production-test.sh --verbose",
      "API: ./quick-production-test.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.135935",
    "content_summary": "set -euo pipefail TOTAL_TESTS=0 PASSED_TESTS=0 FAILED_TESTS=0 test_result() {",
    "embedding_text": "quick-production-test.sh monitoring testing deployment file_operations security api_integration test_nextjs test_result test_api_security set -euo pipefail TOTAL_TESTS=0 PASSED_TESTS=0 FAILED_TESTS=0 test_result() {",
    "created_at": "2025-09-08T22:56:32.801028"
  },
  {
    "script_id": "script_fadad52d_56f6c621",
    "file_path": "scripts/get-supabase-anon-key.sh",
    "file_name": "get-supabase-anon-key.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [
      "~/.zshrc\"",
      "Re-run",
      "Go",
      "Update",
      "Copy",
      "Reload"
    ],
    "complexity_score": 9,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./get-supabase-anon-key.sh",
      "Deploy: ./get-supabase-anon-key.sh --env production",
      "Monitor: ./get-supabase-anon-key.sh --interval 30",
      "Test: ./get-supabase-anon-key.sh --verbose",
      "API: ./get-supabase-anon-key.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.406745",
    "content_summary": "set -e echo \"\ud83d\udd11 Supabase Anon Key Helper\" echo \"===========================\" echo \"\" echo \"\u2139\ufe0f  Loading credentials from ~/.zshrc...\"",
    "embedding_text": "get-supabase-anon-key.sh monitoring testing deployment database_operations file_operations api_integration synchronization  set -e echo \"\ud83d\udd11 Supabase Anon Key Helper\" echo \"===========================\" echo \"\" echo \"\u2139\ufe0f  Loading credentials from ~/.zshrc...\"",
    "created_at": "2025-09-08T22:56:32.801030"
  },
  {
    "script_id": "script_045466f7_4fc08794",
    "file_path": "scripts/test-alex-ai-fixes.sh",
    "file_name": "test-alex-ai-fixes.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "api_integration"
    ],
    "functions": [],
    "dependencies": [
      "Create",
      "Activate"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./test-alex-ai-fixes.sh",
      "Deploy: ./test-alex-ai-fixes.sh --env production",
      "Monitor: ./test-alex-ai-fixes.sh --interval 30",
      "Test: ./test-alex-ai-fixes.sh --verbose",
      "API: ./test-alex-ai-fixes.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.407746",
    "content_summary": "set -e echo \"\ud83e\uddea Alex AI Fixes Validation Test\" echo \"=================================\" echo \"\" echo \"1\ufe0f\u20e3 Testing Application Startup...\"",
    "embedding_text": "test-alex-ai-fixes.sh data_processing monitoring testing deployment api_integration  set -e echo \"\ud83e\uddea Alex AI Fixes Validation Test\" echo \"=================================\" echo \"\" echo \"1\ufe0f\u20e3 Testing Application Startup...\"",
    "created_at": "2025-09-08T22:56:32.801031"
  },
  {
    "script_id": "script_3318216d_dccdd683",
    "file_path": "scripts/security-audit.sh",
    "file_name": "security-audit.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Security",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "check_security_headers",
      "print_status",
      "check_git_security",
      "check_dependencies",
      "generate_report",
      "check_env_files",
      "check_secrets",
      "check_file_permissions"
    ],
    "dependencies": [
      "Enable",
      "--exclude-dir=node_modules",
      "else",
      "Implement",
      "Review",
      "-type",
      "Regularly",
      "Never",
      "Monitor",
      "Use"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./security-audit.sh",
      "Deploy: ./security-audit.sh --env production",
      "Monitor: ./security-audit.sh --interval 30",
      "Test: ./security-audit.sh --verbose",
      "API: ./security-audit.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.059274",
    "content_summary": "set -e echo \"\ud83d\udd12 ALEX AI SECURITY AUDIT\" echo \"=========================\" echo \"\" RED='\\033[0;31m'",
    "embedding_text": "security-audit.sh monitoring testing deployment database_operations file_operations security api_integration synchronization check_security_headers print_status check_git_security check_dependencies generate_report check_env_files check_secrets check_file_permissions set -e echo \"\ud83d\udd12 ALEX AI SECURITY AUDIT\" echo \"=========================\" echo \"\" RED='\\033[0;31m'",
    "created_at": "2025-09-08T22:56:32.801032"
  },
  {
    "script_id": "script_4694e138_1262187a",
    "file_path": "scripts/n8n-bidirectional-sync.py",
    "file_name": "n8n-bidirectional-sync.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Synchronization",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "save_analysis",
      "get_workflow_hash",
      "save_sync_history",
      "generate_sync_report",
      "sync_workflow_from_n8n",
      "run_sync",
      "load_sync_history",
      "sync_from_n8n_to_dev",
      "fetch_n8n_workflows",
      "analyze_workflow_changes"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "hashlib",
      "logging",
      "time",
      "Dict",
      "sys",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./n8n-bidirectional-sync.py",
      "Deploy: ./n8n-bidirectional-sync.py --env production",
      "Monitor: ./n8n-bidirectional-sync.py --interval 30",
      "Test: ./n8n-bidirectional-sync.py --verbose",
      "API: ./n8n-bidirectional-sync.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.170366",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" N8N Bi-Directional Sync System ============================== This script implements comprehensive bi-directional synchronization between",
    "embedding_text": "n8n-bidirectional-sync.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization save_analysis get_workflow_hash save_sync_history generate_sync_report sync_workflow_from_n8n run_sync load_sync_history sync_from_n8n_to_dev fetch_n8n_workflows analyze_workflow_changes from scripts.utilities.shared_functions import * \"\"\" N8N Bi-Directional Sync System ============================== This script implements comprehensive bi-directional synchronization between",
    "created_at": "2025-09-08T22:56:32.801033"
  },
  {
    "script_id": "script_2229ed77_53a73981",
    "file_path": "scripts/test-workflows.sh",
    "file_name": "test-workflows.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "monitoring",
      "testing",
      "automation",
      "file_operations",
      "api_integration"
    ],
    "functions": [
      "test_workflow_logic",
      "test_workflow_structure",
      "test_workflow_connectivity"
    ],
    "dependencies": [],
    "complexity_score": 10,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension"
    ],
    "usage_examples": [
      "Execute: ./test-workflows.sh",
      "Monitor: ./test-workflows.sh --interval 30",
      "Test: ./test-workflows.sh --verbose",
      "API: ./test-workflows.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.060774",
    "content_summary": "set -e N8N_URL=\"${N8N_URL}\" N8N_API_KEY=\"${N8N_API_KEY}\" WORKFLOWS_DIR=\"workflows\" RED='\\033[0;31m'",
    "embedding_text": "test-workflows.sh monitoring testing automation file_operations api_integration test_workflow_logic test_workflow_structure test_workflow_connectivity set -e N8N_URL=\"${N8N_URL}\" N8N_API_KEY=\"${N8N_API_KEY}\" WORKFLOWS_DIR=\"workflows\" RED='\\033[0;31m'",
    "created_at": "2025-09-08T22:56:32.801035"
  },
  {
    "script_id": "script_690b45ad_d0a0e51b",
    "file_path": "scripts/n8n-sync-dashboard.html",
    "file_name": "n8n-sync-dashboard.html",
    "file_type": "html",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Synchronization",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 1,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./n8n-sync-dashboard.html",
      "Monitor: ./n8n-sync-dashboard.html --interval 30",
      "Test: ./n8n-sync-dashboard.html --verbose"
    ],
    "last_modified": "2025-09-08T21:44:53.620788",
    "content_summary": "<!DOCTYPE html> <html lang=\"en\"> <head>     <meta charset=\"UTF-8\">     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
    "embedding_text": "n8n-sync-dashboard.html data_processing monitoring testing database_operations synchronization  <!DOCTYPE html> <html lang=\"en\"> <head>     <meta charset=\"UTF-8\">     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
    "created_at": "2025-09-08T22:56:32.801036"
  },
  {
    "script_id": "script_ac797244_8f765be7",
    "file_path": "scripts/credential-security-milestone-push.sh",
    "file_name": "credential-security-milestone-push.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Version Control",
    "functionality": [
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [
      "ANTHROPIC_API_KEY",
      "Add",
      "Test",
      "Shell",
      "git",
      "Verify",
      "N8N"
    ],
    "complexity_score": 6,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./credential-security-milestone-push.sh",
      "Deploy: ./credential-security-milestone-push.sh --env production",
      "Monitor: ./credential-security-milestone-push.sh --interval 30",
      "Test: ./credential-security-milestone-push.sh --verbose",
      "API: ./credential-security-milestone-push.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-07T01:52:35.778274",
    "content_summary": "set -e TIMESTAMP=$(date +\"%Y%m%d_%H%M%S\") MILESTONE_NAME=\"credential-security-milestone-v1.0\" PACKAGE_NAME=\"${MILESTONE_NAME}-${TIMESTAMP}\" echo \"\ud83d\ude80 ALEX AI CREDENTIAL SECURITY MILESTONE PUSH\"",
    "embedding_text": "credential-security-milestone-push.sh monitoring testing automation deployment file_operations security api_integration synchronization  set -e TIMESTAMP=$(date +\"%Y%m%d_%H%M%S\") MILESTONE_NAME=\"credential-security-milestone-v1.0\" PACKAGE_NAME=\"${MILESTONE_NAME}-${TIMESTAMP}\" echo \"\ud83d\ude80 ALEX AI CREDENTIAL SECURITY MILESTONE PUSH\"",
    "created_at": "2025-09-08T22:56:32.801037"
  },
  {
    "script_id": "script_8835eb4c_98d36270",
    "file_path": "scripts/setup-dev-environment.sh",
    "file_name": "setup-dev-environment.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Environment Setup",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [
      "~/.zshrc\"",
      "Or",
      "Please",
      "~/.zshrc",
      "Start",
      "Creating",
      "Reload"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./setup-dev-environment.sh",
      "Deploy: ./setup-dev-environment.sh --env production",
      "Monitor: ./setup-dev-environment.sh --interval 30",
      "Test: ./setup-dev-environment.sh --verbose",
      "API: ./setup-dev-environment.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.410697",
    "content_summary": "set -e echo \"\ud83d\ude80 Alex AI Development Environment Setup\" echo \"========================================\" if [ -f ~/.zshrc ]; then     echo \"\ud83d\udcc1 Checking ~/.zshrc for Alex AI credentials...\"",
    "embedding_text": "setup-dev-environment.sh monitoring testing deployment database_operations file_operations api_integration synchronization  set -e echo \"\ud83d\ude80 Alex AI Development Environment Setup\" echo \"========================================\" if [ -f ~/.zshrc ]; then     echo \"\ud83d\udcc1 Checking ~/.zshrc for Alex AI credentials...\"",
    "created_at": "2025-09-08T22:56:32.801039"
  },
  {
    "script_id": "script_02cfe817_fdd0bdd0",
    "file_path": "scripts/n8n-sync-monitor.py",
    "file_name": "n8n-sync-monitor.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Synchronization",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "calculate_sync_frequency",
      "measure_n8n_response_time",
      "get_workflow_status",
      "generate_dashboard_data",
      "check_n8n_health",
      "run_monitor",
      "generate_alerts",
      "save_dashboard_data",
      "check_sync_health"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "typing",
      "datetime",
      "logging",
      "time",
      "Dict",
      "sys",
      "dataclass",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./n8n-sync-monitor.py",
      "Deploy: ./n8n-sync-monitor.py --env production",
      "Monitor: ./n8n-sync-monitor.py --interval 30",
      "Test: ./n8n-sync-monitor.py --verbose",
      "API: ./n8n-sync-monitor.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.170515",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" N8N Sync Monitor ================ Real-time monitoring system for N8N bi-directional sync operations",
    "embedding_text": "n8n-sync-monitor.py monitoring testing deployment file_operations api_integration synchronization calculate_sync_frequency measure_n8n_response_time get_workflow_status generate_dashboard_data check_n8n_health run_monitor generate_alerts save_dashboard_data check_sync_health from scripts.utilities.shared_functions import * \"\"\" N8N Sync Monitor ================ Real-time monitoring system for N8N bi-directional sync operations",
    "created_at": "2025-09-08T22:56:32.801040"
  },
  {
    "script_id": "script_ba74205a_e75db49b",
    "file_path": "scripts/robust-test.sh",
    "file_name": "robust-test.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "testing",
      "file_operations",
      "api_integration",
      "monitoring"
    ],
    "functions": [],
    "dependencies": [
      "alexai_env/bin/activate",
      "~/.alexai-keys/api-keys.env"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./robust-test.sh",
      "Monitor: ./robust-test.sh --interval 30",
      "Test: ./robust-test.sh --verbose",
      "API: ./robust-test.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.332700",
    "content_summary": "set -e  # Exit on any error echo \"\ud83d\ude80 Alex AI Robust System Test\" echo \"=============================\" echo \"\" echo \"\ud83e\uddea Test 1: API Key Status\"",
    "embedding_text": "robust-test.sh testing file_operations api_integration monitoring  set -e  # Exit on any error echo \"\ud83d\ude80 Alex AI Robust System Test\" echo \"=============================\" echo \"\" echo \"\ud83e\uddea Test 1: API Key Status\"",
    "created_at": "2025-09-08T22:56:32.801041"
  },
  {
    "script_id": "script_85e9e039_672d75f4",
    "file_path": "scripts/comprehensive-folder-analyzer.py",
    "file_name": "comprehensive-folder-analyzer.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Analysis",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "synchronization"
    ],
    "functions": [
      "__init__",
      "create_restructuring_plan",
      "main",
      "calculate_complexity",
      "calculate_name_similarity",
      "generate_optimization_recommendations",
      "find_within_folder_consolidation",
      "extract_functions",
      "analyze_all_folders",
      "analyze_each_folder",
      "analyze_script",
      "save_analysis_results",
      "discover_all_scripts_and_folders",
      "calculate_script_similarity",
      "extract_imports",
      "identify_consolidation_opportunities",
      "find_deprecated_scripts",
      "generate_folder_recommendations",
      "calculate_folder_redundancy",
      "find_cross_folder_redundancy",
      "determine_purpose"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "defaultdict",
      "import_patterns",
      "re",
      "overlap",
      "typing",
      "datetime",
      "logging",
      "Dict",
      "collections",
      "statements",
      "dataclass",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./comprehensive-folder-analyzer.py",
      "Deploy: ./comprehensive-folder-analyzer.py --env production",
      "Monitor: ./comprehensive-folder-analyzer.py --interval 30",
      "Test: ./comprehensive-folder-analyzer.py --verbose"
    ],
    "last_modified": "2025-09-08T22:36:09.604325",
    "content_summary": "\"\"\" Comprehensive Folder Analyzer ============================ Deep analysis of existing folder structure to identify redundancy and optimization opportunities \"\"\"",
    "embedding_text": "comprehensive-folder-analyzer.py data_processing monitoring testing deployment database_operations file_operations security synchronization __init__ create_restructuring_plan main calculate_complexity calculate_name_similarity generate_optimization_recommendations find_within_folder_consolidation extract_functions analyze_all_folders analyze_each_folder analyze_script save_analysis_results discover_all_scripts_and_folders calculate_script_similarity extract_imports identify_consolidation_opportunities find_deprecated_scripts generate_folder_recommendations calculate_folder_redundancy find_cross_folder_redundancy determine_purpose \"\"\" Comprehensive Folder Analyzer ============================ Deep analysis of existing folder structure to identify redundancy and optimization opportunities \"\"\"",
    "created_at": "2025-09-08T22:56:32.801042"
  },
  {
    "script_id": "script_fdd5c2e8_cd4fcc35",
    "file_path": "scripts/update-script-references.py",
    "file_name": "update-script-references.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "update_script_files",
      "get_new_import_path",
      "determine_script_category",
      "update_script_calls",
      "update_documentation",
      "update_all_references",
      "get_new_script_path",
      "load_consolidation_mapping",
      "update_imports",
      "update_config_files",
      "update_relative_paths",
      "create_script_index",
      "update_file_references",
      "update_package_json"
    ],
    "dependencies": [
      "json",
      "re",
      "typing",
      "logging",
      "path",
      "Dict",
      "statements",
      "scripts",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./update-script-references.py",
      "Deploy: ./update-script-references.py --env production",
      "Monitor: ./update-script-references.py --interval 30",
      "Test: ./update-script-references.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.170641",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Update Script References ======================== Update script references and dependencies after consolidation",
    "embedding_text": "update-script-references.py monitoring testing deployment database_operations file_operations synchronization update_script_files get_new_import_path determine_script_category update_script_calls update_documentation update_all_references get_new_script_path load_consolidation_mapping update_imports update_config_files update_relative_paths create_script_index update_file_references update_package_json from scripts.utilities.shared_functions import * \"\"\" Update Script References ======================== Update script references and dependencies after consolidation",
    "created_at": "2025-09-08T22:56:32.801044"
  },
  {
    "script_id": "script_cfce519f_1740350b",
    "file_path": "scripts/production-readiness-assessment.sh",
    "file_name": "production-readiness-assessment.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Production Operations",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "assess_integration",
      "assess_security",
      "assess_documentation",
      "assess_result",
      "assess_technical_requirements",
      "assess_support_system",
      "assess_performance",
      "generate_readiness_report"
    ],
    "dependencies": [
      "Deploy",
      "Significant",
      "Support",
      "Technical",
      "Launch",
      "Integration",
      "Performance",
      "Conduct",
      "Documentation",
      "Address",
      "###",
      "Security",
      "Prepare"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./production-readiness-assessment.sh",
      "Deploy: ./production-readiness-assessment.sh --env production",
      "Monitor: ./production-readiness-assessment.sh --interval 30",
      "Test: ./production-readiness-assessment.sh --verbose",
      "API: ./production-readiness-assessment.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.137258",
    "content_summary": "set -euo pipefail ASSESSMENT_DIR=\"production-readiness-results\" LOG_FILE=\"${ASSESSMENT_DIR}/readiness-assessment.log\" mkdir -p \"$ASSESSMENT_DIR\" TOTAL_CRITERIA=0",
    "embedding_text": "production-readiness-assessment.sh monitoring testing deployment file_operations security api_integration assess_integration assess_security assess_documentation assess_result assess_technical_requirements assess_support_system assess_performance generate_readiness_report set -euo pipefail ASSESSMENT_DIR=\"production-readiness-results\" LOG_FILE=\"${ASSESSMENT_DIR}/readiness-assessment.log\" mkdir -p \"$ASSESSMENT_DIR\" TOTAL_CRITERIA=0",
    "created_at": "2025-09-08T22:56:32.801045"
  },
  {
    "script_id": "script_cb7d4519_018f81af",
    "file_path": "scripts/alex-ai-universal-milestone-push.sh",
    "file_name": "alex-ai-universal-milestone-push.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Version Control",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "check_git_repo",
      "commit_and_push",
      "get_current_branch",
      "check_git_status",
      "print_header",
      "print_step",
      "create_milestone_summary"
    ],
    "dependencies": [
      "Machine",
      "Performance",
      "**Multi-System",
      "Create",
      "Test",
      "**Claude",
      "**Supabase",
      "Deploy",
      "#",
      "Integrate",
      "optimization",
      "**Security**:",
      "Implement",
      "Advanced",
      "**Automated",
      "Cross-project",
      "Enable",
      "**Business",
      "Scale",
      "**Market",
      "Self-improving",
      "**Monitoring**:",
      "Quality",
      "Document",
      "**Real-time",
      "**N8N",
      "Universal",
      "**Automation**:",
      "Collective",
      "**Error",
      "**AI",
      "Build",
      "Monitor",
      "**Environment",
      "**Integration**:",
      "Activate"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./alex-ai-universal-milestone-push.sh",
      "Deploy: ./alex-ai-universal-milestone-push.sh --env production",
      "Monitor: ./alex-ai-universal-milestone-push.sh --interval 30",
      "Test: ./alex-ai-universal-milestone-push.sh --verbose",
      "API: ./alex-ai-universal-milestone-push.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:35:10.666893",
    "content_summary": "set -e RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m' BLUE='\\033[0;34m'",
    "embedding_text": "alex-ai-universal-milestone-push.sh data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization check_git_repo commit_and_push get_current_branch check_git_status print_header print_step create_milestone_summary set -e RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m' BLUE='\\033[0;34m'",
    "created_at": "2025-09-08T22:56:32.801046"
  },
  {
    "script_id": "script_80fd1df3_b3558525",
    "file_path": "scripts/validate-api-keys.sh",
    "file_name": "validate-api-keys.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "validate_key_format",
      "validate_all_keys",
      "test_api_connectivity"
    ],
    "dependencies": [
      "Review",
      "\"$HOME/.alexai-keys/api-keys.env\""
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./validate-api-keys.sh",
      "Deploy: ./validate-api-keys.sh --env production",
      "Monitor: ./validate-api-keys.sh --interval 30",
      "Test: ./validate-api-keys.sh --verbose",
      "API: ./validate-api-keys.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.137417",
    "content_summary": "set -euo pipefail VALIDATION_LOG=\"api-key-validation.log\" } validate_key_format() {     local key=\"$1\"",
    "embedding_text": "validate-api-keys.sh monitoring testing deployment file_operations security api_integration validate_key_format validate_all_keys test_api_connectivity set -euo pipefail VALIDATION_LOG=\"api-key-validation.log\" } validate_key_format() {     local key=\"$1\"",
    "created_at": "2025-09-08T22:56:32.801047"
  },
  {
    "script_id": "script_57de6732_f8555aa8",
    "file_path": "scripts/quick-milestone.sh",
    "file_name": "quick-milestone.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Version Control",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [
      "management",
      "#"
    ],
    "complexity_score": 3,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./quick-milestone.sh",
      "Deploy: ./quick-milestone.sh --env production",
      "Monitor: ./quick-milestone.sh --interval 30",
      "Test: ./quick-milestone.sh --verbose"
    ],
    "last_modified": "2025-09-08T07:19:02.396373",
    "content_summary": "set -e MILESTONE_TITLE=\"$1\" if [ -z \"$MILESTONE_TITLE\" ]; then     echo \"Usage: $0 <milestone-title>\"     echo \"Example: $0 \\\"Complete Hooks Implementation\\\"\"",
    "embedding_text": "quick-milestone.sh monitoring testing deployment database_operations file_operations synchronization  set -e MILESTONE_TITLE=\"$1\" if [ -z \"$MILESTONE_TITLE\" ]; then     echo \"Usage: $0 <milestone-title>\"     echo \"Example: $0 \\\"Complete Hooks Implementation\\\"\"",
    "created_at": "2025-09-08T22:56:32.801049"
  },
  {
    "script_id": "script_a04f617a_08acd1e7",
    "file_path": "scripts/fix-e2e-issues.sh",
    "file_name": "fix-e2e-issues.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [
      "Fix",
      "API",
      "Job",
      "scripts/testing/e2e_testing/consolidated_e2e_testing.py",
      "Adding",
      "Dashboard",
      "Run",
      "Add",
      "Page",
      "Creating",
      "temp_page_fix.js",
      "scripts/testing/unit_testing/consolidated_unit_testing.py",
      "Improve"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./fix-e2e-issues.sh",
      "Monitor: ./fix-e2e-issues.sh --interval 30",
      "Test: ./fix-e2e-issues.sh --verbose",
      "API: ./fix-e2e-issues.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.414243",
    "content_summary": "set -e echo \"\ud83d\udd27 Fixing E2E Test Issues\" echo \"=========================\" echo \"\" echo \"\ud83d\udccb Issues Found:\"",
    "embedding_text": "fix-e2e-issues.sh data_processing monitoring testing automation database_operations file_operations api_integration synchronization  set -e echo \"\ud83d\udd27 Fixing E2E Test Issues\" echo \"=========================\" echo \"\" echo \"\ud83d\udccb Issues Found:\"",
    "created_at": "2025-09-08T22:56:32.801051"
  },
  {
    "script_id": "script_a6140ae6_67fb2abf",
    "file_path": "scripts/analyze-production-changes.sh",
    "file_name": "analyze-production-changes.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Analysis",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "count_risk_level",
      "analyze_workflow_impact",
      "get_security_analysis",
      "get_performance_analysis",
      "assess_overall_risk",
      "generate_risk_assessment",
      "get_workflow_analysis",
      "analyze_production_changes",
      "get_dependency_analysis",
      "generate_impact_matrix"
    ],
    "dependencies": [
      "**Performance",
      "**Security",
      "##",
      "**Review",
      "**Integration",
      "**Dependency",
      "**Test"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./analyze-production-changes.sh",
      "Deploy: ./analyze-production-changes.sh --env production",
      "Monitor: ./analyze-production-changes.sh --interval 30",
      "Test: ./analyze-production-changes.sh --verbose",
      "API: ./analyze-production-changes.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.062741",
    "content_summary": "set -e ANALYSIS_DIR=\"analysis\" WORKFLOWS_DIR=\"workflows\" RED='\\033[0;31m' GREEN='\\033[0;32m'",
    "embedding_text": "analyze-production-changes.sh data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization count_risk_level analyze_workflow_impact get_security_analysis get_performance_analysis assess_overall_risk generate_risk_assessment get_workflow_analysis analyze_production_changes get_dependency_analysis generate_impact_matrix set -e ANALYSIS_DIR=\"analysis\" WORKFLOWS_DIR=\"workflows\" RED='\\033[0;31m' GREEN='\\033[0;32m'",
    "created_at": "2025-09-08T22:56:32.801052"
  },
  {
    "script_id": "script_c0d722d7_eb4f4308",
    "file_path": "scripts/comprehensive-string-fix.sh",
    "file_name": "comprehensive-string-fix.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "file_operations",
      "monitoring",
      "automation"
    ],
    "functions": [
      "create_master_safe_script",
      "safe_echo",
      "fix_script",
      "demonstrate_fix"
    ],
    "dependencies": [
      "scripts/master-safe-execute.sh'",
      "scripts/master-safe-execute.sh"
    ],
    "complexity_score": 9,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./comprehensive-string-fix.sh",
      "Monitor: ./comprehensive-string-fix.sh --interval 30",
      "Test: ./comprehensive-string-fix.sh --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.132443",
    "content_summary": "set -e echo \"\ud83d\udd27 Comprehensive String Fix for Alex AI\" echo \"=======================================\" echo \"\" safe_echo() {",
    "embedding_text": "comprehensive-string-fix.sh testing file_operations monitoring automation create_master_safe_script safe_echo fix_script demonstrate_fix set -e echo \"\ud83d\udd27 Comprehensive String Fix for Alex AI\" echo \"=======================================\" echo \"\" safe_echo() {",
    "created_at": "2025-09-08T22:56:32.801054"
  },
  {
    "script_id": "script_12b8b1ce_a9105a7a",
    "file_path": "scripts/credential-validator.sh",
    "file_name": "credential-validator.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "security",
      "api_integration"
    ],
    "functions": [],
    "dependencies": [
      "./scripts/deployment/general/consolidated_general.py"
    ],
    "complexity_score": 9,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./credential-validator.sh",
      "Deploy: ./credential-validator.sh --env production",
      "Monitor: ./credential-validator.sh --interval 30",
      "Test: ./credential-validator.sh --verbose",
      "API: ./credential-validator.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.415297",
    "content_summary": "set -e echo \"\ud83d\udd10 Alex AI Credential Validator\" echo \"===============================\" echo \"\u2139\ufe0f  Loading credentials from ~/.zshrc...\" source ./scripts/deployment/general/consolidated_general.py",
    "embedding_text": "credential-validator.sh monitoring testing deployment security api_integration  set -e echo \"\ud83d\udd10 Alex AI Credential Validator\" echo \"===============================\" echo \"\u2139\ufe0f  Loading credentials from ~/.zshrc...\" source ./scripts/deployment/general/consolidated_general.py",
    "created_at": "2025-09-08T22:56:32.801055"
  },
  {
    "script_id": "script_68090170_9d7e0929",
    "file_path": "scripts/claude-api-fix-final.sh",
    "file_name": "claude-api-fix-final.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [
      "This",
      "~/.zshrc\"",
      "\ud83e\uddea",
      "\ud83c\udf10",
      "\ud83d\udcdd",
      "\ud83d\udd04",
      "\ud83d\udd11"
    ],
    "complexity_score": 5,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./claude-api-fix-final.sh",
      "Monitor: ./claude-api-fix-final.sh --interval 30",
      "Test: ./claude-api-fix-final.sh --verbose",
      "API: ./claude-api-fix-final.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.333804",
    "content_summary": "echo \"\ud83e\udde0 Alex AI Claude API Key - Final Fix\" echo \"=====================================\" echo \"\" echo \"\ud83d\udd0d DIAGNOSIS COMPLETE:\" echo \"   \u2022 Your API key is 185 characters (should be ~100)\"",
    "embedding_text": "claude-api-fix-final.sh monitoring testing database_operations file_operations security api_integration synchronization  echo \"\ud83e\udde0 Alex AI Claude API Key - Final Fix\" echo \"=====================================\" echo \"\" echo \"\ud83d\udd0d DIAGNOSIS COMPLETE:\" echo \"   \u2022 Your API key is 185 characters (should be ~100)\"",
    "created_at": "2025-09-08T22:56:32.801056"
  },
  {
    "script_id": "script_4c499a1a_e27338e5",
    "file_path": "scripts/script-analyzer.py",
    "file_name": "script-analyzer.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Analysis",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "extract_dependencies",
      "save_analysis",
      "calculate_complexity",
      "find_related_scripts",
      "extract_comments",
      "generate_analysis_report",
      "find_potential_duplicates",
      "search_scripts",
      "are_scripts_similar",
      "extract_variables",
      "extract_functions",
      "analyze_script",
      "extract_tags",
      "generate_recommendations",
      "categorize_script",
      "find_redundant_scripts",
      "analyze_all_scripts",
      "define_categories",
      "determine_purpose",
      "save_memory"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "re",
      "typing",
      "datetime",
      "hashlib",
      "logging",
      "Path",
      "Dict",
      "sys",
      "dataclass",
      "pathlib",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension"
    ],
    "usage_examples": [
      "Execute: ./script-analyzer.py",
      "Deploy: ./script-analyzer.py --env production",
      "Monitor: ./script-analyzer.py --interval 30",
      "Test: ./script-analyzer.py --verbose",
      "API: ./script-analyzer.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.170842",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Script Analyzer & Memory System =============================== Deep analysis of scripts folder with categorization, memory storage, and intelligen...",
    "embedding_text": "script-analyzer.py data_processing monitoring testing deployment database_operations file_operations security api_integration synchronization extract_dependencies save_analysis calculate_complexity find_related_scripts extract_comments generate_analysis_report find_potential_duplicates search_scripts are_scripts_similar extract_variables extract_functions analyze_script extract_tags generate_recommendations categorize_script find_redundant_scripts analyze_all_scripts define_categories determine_purpose save_memory from scripts.utilities.shared_functions import * \"\"\" Script Analyzer & Memory System =============================== Deep analysis of scripts folder with categorization, memory storage, and intelligen...",
    "created_at": "2025-09-08T22:56:32.801057"
  },
  {
    "script_id": "script_f0a7ecf5_c737a07a",
    "file_path": "scripts/cursor-extension-milestone.sh",
    "file_name": "cursor-extension-milestone.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Version Control",
    "functionality": [
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [
      "Deploy",
      "Create",
      "Initialize",
      "Iterate",
      "##",
      "Test",
      "Monitor",
      "Update",
      "git",
      "Configure"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./cursor-extension-milestone.sh",
      "Deploy: ./cursor-extension-milestone.sh --env production",
      "Monitor: ./cursor-extension-milestone.sh --interval 30",
      "Test: ./cursor-extension-milestone.sh --verbose"
    ],
    "last_modified": "2025-09-06T20:43:44.334231",
    "content_summary": "echo \"Cursor AI Extension Milestone System\" echo \"====================================\" echo \"\" echo \"Creating Cursor Extension milestone package...\" echo \"\"",
    "embedding_text": "cursor-extension-milestone.sh monitoring testing automation deployment database_operations file_operations security synchronization  echo \"Cursor AI Extension Milestone System\" echo \"====================================\" echo \"\" echo \"Creating Cursor Extension milestone package...\" echo \"\"",
    "created_at": "2025-09-08T22:56:32.801059"
  },
  {
    "script_id": "script_244735b0_044bf2b6",
    "file_path": "scripts/deploy-missing-n8n-webhooks.sh",
    "file_name": "deploy-missing-n8n-webhooks.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Deployment and Setup",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "api_integration"
    ],
    "functions": [
      "create_webhook_workflow",
      "test_webhook"
    ],
    "dependencies": [
      "Test",
      "Check",
      "Verify"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./deploy-missing-n8n-webhooks.sh",
      "Deploy: ./deploy-missing-n8n-webhooks.sh --env production",
      "Monitor: ./deploy-missing-n8n-webhooks.sh --interval 30",
      "Test: ./deploy-missing-n8n-webhooks.sh --verbose",
      "API: ./deploy-missing-n8n-webhooks.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T20:57:46.776563",
    "content_summary": "set -e echo \"\ud83d\udd17 Deploying Missing N8N Webhook Endpoints\" echo \"===========================================\" echo \"\" echo \"\u2139\ufe0f  Loading credentials from ~/.zshrc...\"",
    "embedding_text": "deploy-missing-n8n-webhooks.sh monitoring testing deployment file_operations api_integration create_webhook_workflow test_webhook set -e echo \"\ud83d\udd17 Deploying Missing N8N Webhook Endpoints\" echo \"===========================================\" echo \"\" echo \"\u2139\ufe0f  Loading credentials from ~/.zshrc...\"",
    "created_at": "2025-09-08T22:56:32.801060"
  },
  {
    "script_id": "script_ca124480_071e5e08",
    "file_path": "scripts/test-intelligent-discovery.sh",
    "file_name": "test-intelligent-discovery.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "testing",
      "file_operations",
      "automation",
      "deployment"
    ],
    "functions": [
      "deploy_n8n_workflows"
    ],
    "dependencies": [],
    "complexity_score": 3,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Single-purpose script - could be extended with additional functions"
    ],
    "usage_examples": [
      "Execute: ./test-intelligent-discovery.sh",
      "Deploy: ./test-intelligent-discovery.sh --env production",
      "Test: ./test-intelligent-discovery.sh --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.064867",
    "content_summary": "set -e SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" LOG_FILE=\"logs/deploy_n8n_workflows.log\" RED='\\033[0;31m' GREEN='\\033[0;32m'",
    "embedding_text": "test-intelligent-discovery.sh testing file_operations automation deployment deploy_n8n_workflows set -e SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" LOG_FILE=\"logs/deploy_n8n_workflows.log\" RED='\\033[0;31m' GREEN='\\033[0;32m'",
    "created_at": "2025-09-08T22:56:32.801061"
  },
  {
    "script_id": "script_22023ec3_0ce4cd8f",
    "file_path": "scripts/setup-git-remote.sh",
    "file_name": "setup-git-remote.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Environment Setup",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [
      "Don't",
      "Go",
      "Repository",
      "Description:",
      "Copy",
      "Click"
    ],
    "complexity_score": 6,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./setup-git-remote.sh",
      "Deploy: ./setup-git-remote.sh --env production",
      "Monitor: ./setup-git-remote.sh --interval 30",
      "Test: ./setup-git-remote.sh --verbose"
    ],
    "last_modified": "2025-09-07T01:52:36.018204",
    "content_summary": "echo \"\ud83d\ude80 ALEX AI GIT REMOTE SETUP\" echo \"============================\" echo \"\" echo \"\ud83d\udcca Current Git Status:\" git status --short",
    "embedding_text": "setup-git-remote.sh monitoring testing deployment file_operations synchronization  echo \"\ud83d\ude80 ALEX AI GIT REMOTE SETUP\" echo \"============================\" echo \"\" echo \"\ud83d\udcca Current Git Status:\" git status --short",
    "created_at": "2025-09-08T22:56:32.801062"
  },
  {
    "script_id": "script_65787d2f_2894cd49",
    "file_path": "scripts/setup-hourly-scraping.sh",
    "file_name": "setup-hourly-scraping.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Environment Setup",
    "functionality": [
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration"
    ],
    "functions": [
      "initialize_configs",
      "check_url",
      "test_cron_endpoint",
      "create_systemd_timer",
      "create_cron_job",
      "setup_database",
      "create_webhook_scheduling"
    ],
    "dependencies": [
      "**Cron-job.org**",
      "Access",
      "**Vercel",
      "Go",
      "Test",
      "Review",
      "Monitor",
      "**EasyCron**",
      "**GitHub"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./setup-hourly-scraping.sh",
      "Deploy: ./setup-hourly-scraping.sh --env production",
      "Monitor: ./setup-hourly-scraping.sh --interval 30",
      "Test: ./setup-hourly-scraping.sh --verbose",
      "API: ./setup-hourly-scraping.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.065717",
    "content_summary": "set -e echo \"\ud83d\udd50 Setting up Alex AI Hourly Job Scraping...\" echo \"==============================================\" APP_URL=\"${NEXT_PUBLIC_APP_URL:-http://localhost:3000}\" CRON_SECRET=\"${CRON_SECRET:-alex...",
    "embedding_text": "setup-hourly-scraping.sh monitoring testing automation deployment database_operations file_operations api_integration initialize_configs check_url test_cron_endpoint create_systemd_timer create_cron_job setup_database create_webhook_scheduling set -e echo \"\ud83d\udd50 Setting up Alex AI Hourly Job Scraping...\" echo \"==============================================\" APP_URL=\"${NEXT_PUBLIC_APP_URL:-http://localhost:3000}\" CRON_SECRET=\"${CRON_SECRET:-alex...",
    "created_at": "2025-09-08T22:56:32.801064"
  },
  {
    "script_id": "script_d6b06e78_65ed36f5",
    "file_path": "scripts/setup-n8n-bidirectional-sync.sh",
    "file_name": "setup-n8n-bidirectional-sync.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Synchronization",
    "functionality": [
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "create_config_files",
      "create_documentation",
      "create_directories",
      "create_management_scripts",
      "setup_cron_jobs",
      "setup_python_scripts",
      "test_setup"
    ],
    "dependencies": [
      "Check",
      "**Check",
      "**Manual",
      "Run",
      "View",
      "Please",
      "##",
      "Start",
      "EOF"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./setup-n8n-bidirectional-sync.sh",
      "Deploy: ./setup-n8n-bidirectional-sync.sh --env production",
      "Monitor: ./setup-n8n-bidirectional-sync.sh --interval 30",
      "Test: ./setup-n8n-bidirectional-sync.sh --verbose",
      "API: ./setup-n8n-bidirectional-sync.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.065928",
    "content_summary": "set -e echo \"\ud83d\ude80 N8N Bi-Directional Sync Setup\" echo \"=================================\" echo \"\" N8N_URL=\"${N8N_URL:-https://n8n.pbradygeorgen.com}\"",
    "embedding_text": "setup-n8n-bidirectional-sync.sh monitoring testing automation deployment file_operations api_integration synchronization create_config_files create_documentation create_directories create_management_scripts setup_cron_jobs setup_python_scripts test_setup set -e echo \"\ud83d\ude80 N8N Bi-Directional Sync Setup\" echo \"=================================\" echo \"\" N8N_URL=\"${N8N_URL:-https://n8n.pbradygeorgen.com}\"",
    "created_at": "2025-09-08T22:56:32.801065"
  },
  {
    "script_id": "script_626ff8d5_425a7456",
    "file_path": "scripts/sync-dashboard.sh",
    "file_name": "sync-dashboard.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Synchronization",
    "functionality": [
      "data_processing",
      "monitoring",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "generate_summary_report",
      "generate_json_data",
      "generate_dashboard"
    ],
    "dependencies": [
      "Enhance",
      "Implement",
      "##",
      "Review",
      "Optimize",
      "Continue",
      "Setup"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./sync-dashboard.sh",
      "Deploy: ./sync-dashboard.sh --env production",
      "Monitor: ./sync-dashboard.sh --interval 30",
      "API: ./sync-dashboard.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.066156",
    "content_summary": "set -e DASHBOARD_DIR=\"dashboard\" ANALYSIS_DIR=\"analysis\" CONFLICT_DIR=\"conflicts\" WORKFLOWS_DIR=\"workflows\"",
    "embedding_text": "sync-dashboard.sh data_processing monitoring automation deployment database_operations file_operations api_integration synchronization generate_summary_report generate_json_data generate_dashboard set -e DASHBOARD_DIR=\"dashboard\" ANALYSIS_DIR=\"analysis\" CONFLICT_DIR=\"conflicts\" WORKFLOWS_DIR=\"workflows\"",
    "created_at": "2025-09-08T22:56:32.801066"
  },
  {
    "script_id": "script_0f1de397_c6bd5879",
    "file_path": "scripts/secure-credential-manager.sh",
    "file_name": "secure-credential-manager.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "deploy_n8n_workflows",
      "load_credentials",
      "create_env_files",
      "create_supabase_tables",
      "validate_credentials",
      "create_n8n_credentials",
      "create_supabase_client",
      "test_setup"
    ],
    "dependencies": [
      "Run:",
      "Test",
      "Deploy",
      "VARCHAR(100),"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension"
    ],
    "usage_examples": [
      "Execute: ./secure-credential-manager.sh",
      "Deploy: ./secure-credential-manager.sh --env production",
      "Monitor: ./secure-credential-manager.sh --interval 30",
      "Test: ./secure-credential-manager.sh --verbose",
      "API: ./secure-credential-manager.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.066492",
    "content_summary": "set -e echo \"\ud83d\udd10 Alex AI Secure Credential Manager\" echo \"====================================\" load_credentials() {     echo \"\u2139\ufe0f  Loading credentials from ~/.zshrc...\"",
    "embedding_text": "secure-credential-manager.sh data_processing monitoring testing deployment database_operations file_operations security api_integration synchronization deploy_n8n_workflows load_credentials create_env_files create_supabase_tables validate_credentials create_n8n_credentials create_supabase_client test_setup set -e echo \"\ud83d\udd10 Alex AI Secure Credential Manager\" echo \"====================================\" load_credentials() {     echo \"\u2139\ufe0f  Loading credentials from ~/.zshrc...\"",
    "created_at": "2025-09-08T22:56:32.801068"
  },
  {
    "script_id": "script_507b4bd6_26ef94db",
    "file_path": "scripts/n8n-change-monitor.sh",
    "file_name": "n8n-change-monitor.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Monitoring",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "log_warning",
      "log_error",
      "backup_local_file",
      "commit_workflow_changes",
      "sync_workflow_to_dev",
      "get_n8n_workflows",
      "sync_new_workflow_to_dev",
      "generate_sync_report",
      "compare_workflows",
      "monitor_n8n_changes",
      "log_success",
      "analyze_workflow_changes",
      "log_info"
    ],
    "dependencies": [
      "Please",
      "**Security",
      "\"$local_file\")",
      "**Review",
      "**Deploy**:",
      ">",
      "**Test"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./n8n-change-monitor.sh",
      "Deploy: ./n8n-change-monitor.sh --env production",
      "Monitor: ./n8n-change-monitor.sh --interval 30",
      "Test: ./n8n-change-monitor.sh --verbose",
      "API: ./n8n-change-monitor.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.066689",
    "content_summary": "set -e N8N_URL=\"${N8N_URL}\" N8N_API_KEY=\"${N8N_API_KEY}\" WORKFLOWS_DIR=\"workflows\" CHANGE_LOG=\"n8n-changes.log\"",
    "embedding_text": "n8n-change-monitor.sh data_processing monitoring testing deployment database_operations file_operations security api_integration synchronization log_warning log_error backup_local_file commit_workflow_changes sync_workflow_to_dev get_n8n_workflows sync_new_workflow_to_dev generate_sync_report compare_workflows monitor_n8n_changes log_success analyze_workflow_changes log_info set -e N8N_URL=\"${N8N_URL}\" N8N_API_KEY=\"${N8N_API_KEY}\" WORKFLOWS_DIR=\"workflows\" CHANGE_LOG=\"n8n-changes.log\"",
    "created_at": "2025-09-08T22:56:32.801069"
  },
  {
    "script_id": "script_82be6a2a_070e9681",
    "file_path": "scripts/fix-claude-api.sh",
    "file_name": "fix-claude-api.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "synchronization",
      "database_operations",
      "api_integration"
    ],
    "functions": [],
    "dependencies": [
      "~/.zshrc\"",
      "Generate",
      "Test",
      "Update",
      "Reload"
    ],
    "complexity_score": 6,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./fix-claude-api.sh",
      "Test: ./fix-claude-api.sh --verbose",
      "API: ./fix-claude-api.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.335037",
    "content_summary": "echo \"\ud83d\udd27 Alex AI Claude API Key Quick Fix\" echo \"====================================\" if [ -z \"$ANTHROPIC_API_KEY\" ]; then     echo \"\u274c ANTHROPIC_API_KEY not found in environment\"     exit 1",
    "embedding_text": "fix-claude-api.sh testing synchronization database_operations api_integration  echo \"\ud83d\udd27 Alex AI Claude API Key Quick Fix\" echo \"====================================\" if [ -z \"$ANTHROPIC_API_KEY\" ]; then     echo \"\u274c ANTHROPIC_API_KEY not found in environment\"     exit 1",
    "created_at": "2025-09-08T22:56:32.801070"
  },
  {
    "script_id": "script_407c63a9_e7f3d626",
    "file_path": "scripts/setup-supabase-tables.sh",
    "file_name": "setup-supabase-tables.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Environment Setup",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [],
    "dependencies": [
      "Open",
      "Go",
      "Verify",
      "Copy",
      "Click"
    ],
    "complexity_score": 5,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./setup-supabase-tables.sh",
      "Deploy: ./setup-supabase-tables.sh --env production",
      "Monitor: ./setup-supabase-tables.sh --interval 30",
      "Test: ./setup-supabase-tables.sh --verbose",
      "API: ./setup-supabase-tables.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T20:57:45.521593",
    "content_summary": "set -e echo \"\ud83d\uddc4\ufe0f  Alex AI Supabase Table Setup\" echo \"=================================\" echo \"\" echo \"\u2139\ufe0f  Loading credentials from ~/.zshrc...\"",
    "embedding_text": "setup-supabase-tables.sh monitoring testing deployment file_operations security api_integration  set -e echo \"\ud83d\uddc4\ufe0f  Alex AI Supabase Table Setup\" echo \"=================================\" echo \"\" echo \"\u2139\ufe0f  Loading credentials from ~/.zshrc...\"",
    "created_at": "2025-09-08T22:56:32.801071"
  },
  {
    "script_id": "script_dbd547c7_db2b2e12",
    "file_path": "scripts/deploy-n8n-webhooks.sh",
    "file_name": "deploy-n8n-webhooks.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Deployment and Setup",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "deploy_workflow"
    ],
    "dependencies": [
      "Test",
      "Verify",
      "Update",
      "./scripts/deployment/general/consolidated_general.py"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Single-purpose script - could be extended with additional functions"
    ],
    "usage_examples": [
      "Execute: ./deploy-n8n-webhooks.sh",
      "Deploy: ./deploy-n8n-webhooks.sh --env production",
      "Monitor: ./deploy-n8n-webhooks.sh --interval 30",
      "Test: ./deploy-n8n-webhooks.sh --verbose",
      "API: ./deploy-n8n-webhooks.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.419769",
    "content_summary": "set -e echo \"\ud83d\ude80 Deploying N8N Webhooks for Alex AI\" echo \"=====================================\" echo \"\ud83d\udd10 Loading credentials...\" source ./scripts/deployment/general/consolidated_general.py",
    "embedding_text": "deploy-n8n-webhooks.sh monitoring testing deployment database_operations file_operations api_integration synchronization deploy_workflow set -e echo \"\ud83d\ude80 Deploying N8N Webhooks for Alex AI\" echo \"=====================================\" echo \"\ud83d\udd10 Loading credentials...\" source ./scripts/deployment/general/consolidated_general.py",
    "created_at": "2025-09-08T22:56:32.801073"
  },
  {
    "script_id": "script_1f2311a8_8a369c6f",
    "file_path": "scripts/shell-prompt-safety-system.sh",
    "file_name": "shell-prompt-safety-system.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "announce_milestone",
      "safe_execute",
      "report_status",
      "track_progress",
      "print_milestone",
      "safe_multiline_output",
      "create_safe_templates",
      "validate_scripts",
      "show_safety_guidelines",
      "test_shell_safety"
    ],
    "dependencies": [
      "EOF"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./shell-prompt-safety-system.sh",
      "Deploy: ./shell-prompt-safety-system.sh --env production",
      "Monitor: ./shell-prompt-safety-system.sh --interval 30",
      "Test: ./shell-prompt-safety-system.sh --verbose",
      "API: ./shell-prompt-safety-system.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.068120",
    "content_summary": "set -e  # Exit on any error echo \"\ud83d\udee1\ufe0f  Alex AI Shell Prompt Safety System\" echo \"======================================\" echo \"\" safe_execute() {",
    "embedding_text": "shell-prompt-safety-system.sh monitoring testing automation deployment database_operations security api_integration announce_milestone safe_execute report_status track_progress print_milestone safe_multiline_output create_safe_templates validate_scripts show_safety_guidelines test_shell_safety set -e  # Exit on any error echo \"\ud83d\udee1\ufe0f  Alex AI Shell Prompt Safety System\" echo \"======================================\" echo \"\" safe_execute() {",
    "created_at": "2025-09-08T22:56:32.801074"
  },
  {
    "script_id": "script_ebdf6a63_84ba3186",
    "file_path": "scripts/production-shell-engine.sh",
    "file_name": "production-shell-engine.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Production Operations",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "security",
      "synchronization"
    ],
    "functions": [
      "validate_script_name",
      "generate_basic_script",
      "generate_status_script",
      "generate_batch",
      "generate_script",
      "output",
      "show_status",
      "run_progress",
      "test_script",
      "validate_output_directory",
      "handle_error",
      "update_progress",
      "generate_progress_script"
    ],
    "dependencies": [
      "Must"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./production-shell-engine.sh",
      "Monitor: ./production-shell-engine.sh --interval 30",
      "Test: ./production-shell-engine.sh --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.144979",
    "content_summary": "set -euo pipefail  # Exit on error, undefined vars, pipe failures SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" TEMPLATES_DIR=\"${SCRIPT_DIR}/templates\" OUTPUT_DIR=\"${SCRIPT_DIR}/generated...",
    "embedding_text": "production-shell-engine.sh data_processing monitoring testing database_operations file_operations security synchronization validate_script_name generate_basic_script generate_status_script generate_batch generate_script output show_status run_progress test_script validate_output_directory handle_error update_progress generate_progress_script set -euo pipefail  # Exit on error, undefined vars, pipe failures SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" TEMPLATES_DIR=\"${SCRIPT_DIR}/templates\" OUTPUT_DIR=\"${SCRIPT_DIR}/generated...",
    "created_at": "2025-09-08T22:56:32.801075"
  },
  {
    "script_id": "script_e79768f7_bba10e0b",
    "file_path": "scripts/folder-restructuring-executor.py",
    "file_name": "folder-restructuring-executor.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "save_restructuring_log",
      "__init__",
      "discover_issues",
      "remove_deprecated_scripts",
      "optimize_folder_structure",
      "main",
      "group_similar_scripts",
      "execute_restructuring",
      "calculate_name_similarity",
      "find_deprecated_scripts",
      "find_optimization_opportunities",
      "are_scripts_similar",
      "merge_scripts",
      "generate_restructuring_report",
      "find_consolidation_opportunities",
      "create_backup",
      "consolidate_similar_scripts"
    ],
    "dependencies": [
      "json",
      "shutil",
      "typing",
      "datetime",
      "logging",
      "Dict",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./folder-restructuring-executor.py",
      "Deploy: ./folder-restructuring-executor.py --env production",
      "Monitor: ./folder-restructuring-executor.py --interval 30",
      "Test: ./folder-restructuring-executor.py --verbose"
    ],
    "last_modified": "2025-09-08T22:36:09.604415",
    "content_summary": "\"\"\" Folder Restructuring Executor ============================ Execute folder restructuring based on analysis findings \"\"\"",
    "embedding_text": "folder-restructuring-executor.py data_processing monitoring testing deployment file_operations synchronization save_restructuring_log __init__ discover_issues remove_deprecated_scripts optimize_folder_structure main group_similar_scripts execute_restructuring calculate_name_similarity find_deprecated_scripts find_optimization_opportunities are_scripts_similar merge_scripts generate_restructuring_report find_consolidation_opportunities create_backup consolidate_similar_scripts \"\"\" Folder Restructuring Executor ============================ Execute folder restructuring based on analysis findings \"\"\"",
    "created_at": "2025-09-08T22:56:32.801077"
  },
  {
    "script_id": "script_0ec5b38b_8e1ff2c6",
    "file_path": "scripts/shell-safety-guide.sh",
    "file_name": "shell-safety-guide.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "file_operations",
      "api_integration"
    ],
    "functions": [],
    "dependencies": [
      "Always",
      "Use"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./shell-safety-guide.sh",
      "Monitor: ./shell-safety-guide.sh --interval 30",
      "Test: ./shell-safety-guide.sh --verbose",
      "API: ./shell-safety-guide.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.336276",
    "content_summary": "echo \"\ud83d\udee1\ufe0f  Alex AI Shell Safety Guide\" echo \"==============================\" echo \"\" echo \"\u274c COMMON SHELL QUOTE ISSUES:\" echo \"   \u2022 Unclosed quotes in echo statements\"",
    "embedding_text": "shell-safety-guide.sh data_processing monitoring testing file_operations api_integration  echo \"\ud83d\udee1\ufe0f  Alex AI Shell Safety Guide\" echo \"==============================\" echo \"\" echo \"\u274c COMMON SHELL QUOTE ISSUES:\" echo \"   \u2022 Unclosed quotes in echo statements\"",
    "created_at": "2025-09-08T22:56:32.801078"
  },
  {
    "script_id": "script_acd03a46_8191d987",
    "file_path": "scripts/add-test-ids.js",
    "file_name": "add-test-ids.js",
    "file_type": "js",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "testing",
      "automation",
      "database_operations",
      "file_operations",
      "api_integration"
    ],
    "functions": [
      "addTestIds"
    ],
    "dependencies": [],
    "complexity_score": 10,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Single-purpose script - could be extended with additional functions"
    ],
    "usage_examples": [
      "Execute: ./add-test-ids.js",
      "Test: ./add-test-ids.js --verbose",
      "API: ./add-test-ids.js --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T16:55:46.573223",
    "content_summary": "// Script to add data-testid attributes to dashboard buttons // This should be injected into the page or added to the component const addTestIds = () => {   const buttons = document.querySelectorAll('...",
    "embedding_text": "add-test-ids.js testing automation database_operations file_operations api_integration addTestIds // Script to add data-testid attributes to dashboard buttons // This should be injected into the page or added to the component const addTestIds = () => {   const buttons = document.querySelectorAll('...",
    "created_at": "2025-09-08T22:56:32.801079"
  },
  {
    "script_id": "script_4cacb77f_e2844901",
    "file_path": "scripts/end-to-end-testing.sh",
    "file_name": "end-to-end-testing.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "testing",
      "api_integration",
      "monitoring",
      "deployment"
    ],
    "functions": [],
    "dependencies": [
      "Deploy",
      "Cross-Crew",
      "Fallback",
      "Create",
      "|",
      "System",
      "Optimize",
      "Review",
      "Monitor",
      "Louis,",
      "Live",
      "Data",
      "./scripts/deployment/general/consolidated_general.py",
      "N8N"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./end-to-end-testing.sh",
      "Deploy: ./end-to-end-testing.sh --env production",
      "Monitor: ./end-to-end-testing.sh --interval 30",
      "Test: ./end-to-end-testing.sh --verbose",
      "API: ./end-to-end-testing.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.421777",
    "content_summary": "set -e echo \"\ud83e\uddea End-to-End Testing with Real N8N Workflows\" echo \"=============================================\" echo \"\ud83d\udd10 Loading credentials...\" source ./scripts/deployment/general/consolidated_general...",
    "embedding_text": "end-to-end-testing.sh testing api_integration monitoring deployment  set -e echo \"\ud83e\uddea End-to-End Testing with Real N8N Workflows\" echo \"=============================================\" echo \"\ud83d\udd10 Loading credentials...\" source ./scripts/deployment/general/consolidated_general...",
    "created_at": "2025-09-08T22:56:32.801080"
  },
  {
    "script_id": "script_93518fda_d06ea6f2",
    "file_path": "scripts/deploy.sh",
    "file_name": "deploy.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Deployment and Setup",
    "functionality": [
      "testing",
      "file_operations",
      "monitoring",
      "deployment"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 3,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./deploy.sh",
      "Deploy: ./deploy.sh --env production",
      "Monitor: ./deploy.sh --interval 30",
      "Test: ./deploy.sh --verbose"
    ],
    "last_modified": "2025-09-06T21:13:16.244885",
    "content_summary": "set -e echo \"\ud83d\ude80 Starting Turborepo deployment...\" if [ \"$CI\" = \"true\" ]; then     echo \"\ud83d\udce6 CI environment detected\"     export TURBO_TOKEN=\"$TURBO_TOKEN\"",
    "embedding_text": "deploy.sh testing file_operations monitoring deployment  set -e echo \"\ud83d\ude80 Starting Turborepo deployment...\" if [ \"$CI\" = \"true\" ]; then     echo \"\ud83d\udce6 CI environment detected\"     export TURBO_TOKEN=\"$TURBO_TOKEN\"",
    "created_at": "2025-09-08T22:56:32.801082"
  },
  {
    "script_id": "script_6a023c21_a44c53b2",
    "file_path": "scripts/simple-e2e-test.js",
    "file_name": "simple-e2e-test.js",
    "file_type": "js",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "runAllTests",
      "testResumeUpload",
      "logTest",
      "testFilterSidebar",
      "testPageLoad",
      "testApplicationTracker",
      "testDataSourceIndicator",
      "testResponsiveDesign",
      "takeScreenshot",
      "waitForElement",
      "testStatsDashboard",
      "testAPIConnectivity",
      "testDashboardButtons",
      "testJobCards"
    ],
    "dependencies": [
      "fs",
      "puppeteer",
      "path"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./simple-e2e-test.js",
      "Monitor: ./simple-e2e-test.js --interval 30",
      "Test: ./simple-e2e-test.js --verbose",
      "API: ./simple-e2e-test.js --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.168491",
    "content_summary": "/**  * Alex AI Job Search - Simple E2E Testing  * Tests all CTA buttons and expected features with compatible Puppeteer API  */ const puppeteer = require('puppeteer');",
    "embedding_text": "simple-e2e-test.js data_processing monitoring testing automation database_operations file_operations api_integration synchronization runAllTests testResumeUpload logTest testFilterSidebar testPageLoad testApplicationTracker testDataSourceIndicator testResponsiveDesign takeScreenshot waitForElement testStatsDashboard testAPIConnectivity testDashboardButtons testJobCards /**  * Alex AI Job Search - Simple E2E Testing  * Tests all CTA buttons and expected features with compatible Puppeteer API  */ const puppeteer = require('puppeteer');",
    "created_at": "2025-09-08T22:56:32.801083"
  },
  {
    "script_id": "script_f54778b6_5682e5de",
    "file_path": "scripts/intelligent-script-purge.py",
    "file_name": "intelligent-script-purge.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "find_database_operations",
      "execute_purge",
      "identify_obsolete_scripts",
      "are_scripts_similar",
      "find_critical_workflows",
      "find_essential_functions",
      "perform_safety_checks",
      "group_similar_scripts",
      "find_long_functions",
      "analyze_scripts_for_purging",
      "calculate_bloat_score",
      "calculate_file_hash",
      "find_repeated_patterns",
      "load_analysis_data",
      "identify_consolidation_candidates",
      "find_api_endpoints",
      "generate_purge_report",
      "identify_minimal_scripts",
      "identify_duplicate_scripts",
      "find_unused_items",
      "identify_bloated_scripts",
      "generate_purging_recommendations",
      "is_minimal_script",
      "find_referenced_scripts"
    ],
    "dependencies": [
      "json",
      "shutil",
      "re",
      "typing",
      "datetime",
      "logging",
      "Dict",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./intelligent-script-purge.py",
      "Deploy: ./intelligent-script-purge.py --env production",
      "Monitor: ./intelligent-script-purge.py --interval 30",
      "Test: ./intelligent-script-purge.py --verbose",
      "API: ./intelligent-script-purge.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.171025",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Intelligent Script Purge System =============================== Intelligent purging of unnecessary and bloated scripts while preserving functionali...",
    "embedding_text": "intelligent-script-purge.py data_processing monitoring testing deployment database_operations file_operations api_integration synchronization find_database_operations execute_purge identify_obsolete_scripts are_scripts_similar find_critical_workflows find_essential_functions perform_safety_checks group_similar_scripts find_long_functions analyze_scripts_for_purging calculate_bloat_score calculate_file_hash find_repeated_patterns load_analysis_data identify_consolidation_candidates find_api_endpoints generate_purge_report identify_minimal_scripts identify_duplicate_scripts find_unused_items identify_bloated_scripts generate_purging_recommendations is_minimal_script find_referenced_scripts from scripts.utilities.shared_functions import * \"\"\" Intelligent Script Purge System =============================== Intelligent purging of unnecessary and bloated scripts while preserving functionali...",
    "created_at": "2025-09-08T22:56:32.801084"
  },
  {
    "script_id": "script_ff2114a6_6398f4e4",
    "file_path": "scripts/deep-code-analyzer.py",
    "file_name": "deep-code-analyzer.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Analysis",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "find_duplicate_functions",
      "save_analysis",
      "extract_python_function",
      "analyze_javascript_script",
      "analyze_python_script",
      "generate_consolidation_recommendations",
      "calculate_javascript_complexity",
      "save_recommendations",
      "calculate_javascript_function_complexity",
      "create_consolidation_plan",
      "determine_script_purpose",
      "calculate_bash_function_complexity",
      "analyze_bash_script",
      "analyze_script",
      "register_functions",
      "calculate_bash_complexity",
      "calculate_python_complexity",
      "find_redundant_scripts",
      "analyze_all_scripts",
      "are_functions_similar",
      "calculate_function_complexity",
      "extract_bash_function",
      "are_scripts_redundant",
      "calculate_estimated_savings",
      "extract_javascript_function"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "defaultdict",
      "re",
      "overlap",
      "typing",
      "datetime",
      "logging",
      "Dict",
      "collections",
      "ast",
      "statements",
      "dataclass",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./deep-code-analyzer.py",
      "Deploy: ./deep-code-analyzer.py --env production",
      "Monitor: ./deep-code-analyzer.py --interval 30",
      "Test: ./deep-code-analyzer.py --verbose"
    ],
    "last_modified": "2025-09-08T22:21:20.690159",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Deep Code Analyzer ================= Deep analysis of script code to identify true redundancy and consolidation opportunities",
    "embedding_text": "deep-code-analyzer.py data_processing monitoring testing deployment file_operations synchronization find_duplicate_functions save_analysis extract_python_function analyze_javascript_script analyze_python_script generate_consolidation_recommendations calculate_javascript_complexity save_recommendations calculate_javascript_function_complexity create_consolidation_plan determine_script_purpose calculate_bash_function_complexity analyze_bash_script analyze_script register_functions calculate_bash_complexity calculate_python_complexity find_redundant_scripts analyze_all_scripts are_functions_similar calculate_function_complexity extract_bash_function are_scripts_redundant calculate_estimated_savings extract_javascript_function from scripts.utilities.shared_functions import * \"\"\" Deep Code Analyzer ================= Deep analysis of script code to identify true redundancy and consolidation opportunities",
    "created_at": "2025-09-08T22:56:32.801085"
  },
  {
    "script_id": "script_5b6a10a9_76709c38",
    "file_path": "scripts/load-credentials.sh",
    "file_name": "load-credentials.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "file_operations",
      "api_integration",
      "deployment"
    ],
    "functions": [],
    "dependencies": [
      "Credentials",
      "CI/CD",
      "Run",
      "environment"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./load-credentials.sh",
      "Deploy: ./load-credentials.sh --env production",
      "Test: ./load-credentials.sh --verbose",
      "API: ./load-credentials.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T05:55:03.108809",
    "content_summary": "set -e echo \"\ud83d\udd10 Alex AI Universal Credentials Loader\" echo \"======================================\" if [ -f ~/.zshrc ]; then     echo \"\ud83d\udcc1 Loading credentials from ~/.zshrc...\"",
    "embedding_text": "load-credentials.sh testing file_operations api_integration deployment  set -e echo \"\ud83d\udd10 Alex AI Universal Credentials Loader\" echo \"======================================\" if [ -f ~/.zshrc ]; then     echo \"\ud83d\udcc1 Loading credentials from ~/.zshrc...\"",
    "created_at": "2025-09-08T22:56:32.801088"
  },
  {
    "script_id": "script_c71481ca_991477ce",
    "file_path": "scripts/validate-strings.sh",
    "file_name": "validate-strings.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "file_operations",
      "security",
      "monitoring"
    ],
    "functions": [
      "validate_strings"
    ],
    "dependencies": [],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Single-purpose script - could be extended with additional functions"
    ],
    "usage_examples": [
      "Execute: ./validate-strings.sh",
      "Monitor: ./validate-strings.sh --interval 30",
      "Test: ./validate-strings.sh --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.070535",
    "content_summary": "validate_strings() {     local file=\"$1\"     local issues=0     echo \"Validating: $file\"     if grep -q 'echo.*\".*$' \"$file\" && grep -A1 'echo.*\".*$' \"$file\" | grep -q 'echo'; then",
    "embedding_text": "validate-strings.sh testing file_operations security monitoring validate_strings validate_strings() {     local file=\"$1\"     local issues=0     echo \"Validating: $file\"     if grep -q 'echo.*\".*$' \"$file\" && grep -A1 'echo.*\".*$' \"$file\" | grep -q 'echo'; then",
    "created_at": "2025-09-08T22:56:32.801089"
  },
  {
    "script_id": "script_e4b43c0b_477bfe0a",
    "file_path": "scripts/production-testing-suite.sh",
    "file_name": "production-testing-suite.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "testing",
      "file_operations",
      "api_integration",
      "deployment"
    ],
    "functions": [
      "test_nextjs_app",
      "test_api_key_management",
      "test_claude_api",
      "test_shell_generation",
      "test_alexai_integration",
      "generate_test_report"
    ],
    "dependencies": [
      "Deploy",
      "\"$HOME/.alexai-keys/manage-keys.sh\"",
      "Review",
      "Conduct",
      "###",
      "Prepare"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./production-testing-suite.sh",
      "Deploy: ./production-testing-suite.sh --env production",
      "Test: ./production-testing-suite.sh --verbose",
      "API: ./production-testing-suite.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.137932",
    "content_summary": "set -euo pipefail SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" TEST_RESULTS_DIR=\"${SCRIPT_DIR}/test-results\" LOG_FILE=\"${TEST_RESULTS_DIR}/test-suite.log\" mkdir -p \"$TEST_RESULTS_DIR\"",
    "embedding_text": "production-testing-suite.sh testing file_operations api_integration deployment test_nextjs_app test_api_key_management test_claude_api test_shell_generation test_alexai_integration generate_test_report set -euo pipefail SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" TEST_RESULTS_DIR=\"${SCRIPT_DIR}/test-results\" LOG_FILE=\"${TEST_RESULTS_DIR}/test-suite.log\" mkdir -p \"$TEST_RESULTS_DIR\"",
    "created_at": "2025-09-08T22:56:32.801141"
  },
  {
    "script_id": "script_4f57432b_b8aa81c7",
    "file_path": "scripts/automate-bidirectional-setup.sh",
    "file_name": "automate-bidirectional-setup.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Environment Setup",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "generate_final_report",
      "configure_github_secrets",
      "test_system_with_sample_change",
      "load_credentials",
      "setup_dashboard_monitoring",
      "check_prerequisites",
      "verify_system",
      "log_automation",
      "enable_scheduled_workflows",
      "monitor_dashboard"
    ],
    "dependencies": [
      "Check",
      "**Review**:",
      "Run:",
      "Open",
      "~/.zshrc",
      "**Monitor**:",
      "View",
      "The",
      "##",
      "**Optimize**:",
      "Monitor",
      "**Test**:"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./automate-bidirectional-setup.sh",
      "Deploy: ./automate-bidirectional-setup.sh --env production",
      "Monitor: ./automate-bidirectional-setup.sh --interval 30",
      "Test: ./automate-bidirectional-setup.sh --verbose",
      "API: ./automate-bidirectional-setup.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.167116",
    "content_summary": "set -e RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m' BLUE='\\033[0;34m'",
    "embedding_text": "automate-bidirectional-setup.sh data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization generate_final_report configure_github_secrets test_system_with_sample_change load_credentials setup_dashboard_monitoring check_prerequisites verify_system log_automation enable_scheduled_workflows monitor_dashboard set -e RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m' BLUE='\\033[0;34m'",
    "created_at": "2025-09-08T22:56:32.801144"
  },
  {
    "script_id": "script_b6fedb1a_285bac5b",
    "file_path": "scripts/setup-secure-api-keys.sh",
    "file_name": "setup-secure-api-keys.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Environment Setup",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [
      "(${#POTENTIAL_KEY}",
      "~/.zshrc\"",
      "source",
      "If",
      "Please",
      "(${#ANTHROPIC_API_KEY}",
      "alexai-status\"",
      "\"$API_KEYS_FILE\"",
      "the"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./setup-secure-api-keys.sh",
      "Deploy: ./setup-secure-api-keys.sh --env production",
      "Monitor: ./setup-secure-api-keys.sh --interval 30",
      "Test: ./setup-secure-api-keys.sh --verbose",
      "API: ./setup-secure-api-keys.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.338523",
    "content_summary": "echo \"\ud83d\udd10 Alex AI Secure API Key Management Setup\" echo \"==========================================\" SECURE_DIR=\"$HOME/.alexai-keys\" mkdir -p \"$SECURE_DIR\" chmod 700 \"$SECURE_DIR\"",
    "embedding_text": "setup-secure-api-keys.sh monitoring testing deployment database_operations file_operations api_integration synchronization  echo \"\ud83d\udd10 Alex AI Secure API Key Management Setup\" echo \"==========================================\" SECURE_DIR=\"$HOME/.alexai-keys\" mkdir -p \"$SECURE_DIR\" chmod 700 \"$SECURE_DIR\"",
    "created_at": "2025-09-08T22:56:32.801174"
  },
  {
    "script_id": "script_8f0a2d8a_5de21251",
    "file_path": "scripts/monitor-performance.js",
    "file_name": "monitor-performance.js",
    "file_type": "js",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Monitoring",
    "functionality": [
      "synchronization",
      "file_operations",
      "data_processing",
      "monitoring"
    ],
    "functions": [],
    "dependencies": [
      "child_process",
      "fs",
      "path"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./monitor-performance.js",
      "Monitor: ./monitor-performance.js --interval 30"
    ],
    "last_modified": "2025-09-06T21:13:16.244165",
    "content_summary": "/**  * Turborepo Performance Monitoring Script  * Monitors build performance and generates reports  */ const fs = require('fs');",
    "embedding_text": "monitor-performance.js synchronization file_operations data_processing monitoring  /**  * Turborepo Performance Monitoring Script  * Monitors build performance and generates reports  */ const fs = require('fs');",
    "created_at": "2025-09-08T22:56:32.801177"
  },
  {
    "script_id": "script_3d868fb1_aef2e469",
    "file_path": "scripts/begin-live-scraping.sh",
    "file_name": "begin-live-scraping.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "security",
      "api_integration"
    ],
    "functions": [],
    "dependencies": [
      "Check",
      "Starting",
      "Setting",
      "Test",
      "Monitor",
      "Louis",
      "Louis,",
      "Verify",
      "./scripts/deployment/general/consolidated_general.py",
      "|"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./begin-live-scraping.sh",
      "Deploy: ./begin-live-scraping.sh --env production",
      "Monitor: ./begin-live-scraping.sh --interval 30",
      "Test: ./begin-live-scraping.sh --verbose",
      "API: ./begin-live-scraping.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.426278",
    "content_summary": "set -e echo \"\ud83d\ude80 Starting Live Job Scraping and Data Collection\" echo \"=================================================\" echo \"\ud83d\udd10 Loading credentials...\" source ./scripts/deployment/general/consolidated...",
    "embedding_text": "begin-live-scraping.sh data_processing monitoring testing automation deployment security api_integration  set -e echo \"\ud83d\ude80 Starting Live Job Scraping and Data Collection\" echo \"=================================================\" echo \"\ud83d\udd10 Loading credentials...\" source ./scripts/deployment/general/consolidated...",
    "created_at": "2025-09-08T22:56:32.801178"
  },
  {
    "script_id": "script_38c47791_5d645f14",
    "file_path": "scripts/deploy-complete-n8n-infrastructure.sh",
    "file_name": "deploy-complete-n8n-infrastructure.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Deployment and Setup",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "test_supabase_connection",
      "activate_n8n_workflows",
      "test_webhook_endpoints"
    ],
    "dependencies": [
      "Test",
      "Start",
      "Please",
      "Execute"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./deploy-complete-n8n-infrastructure.sh",
      "Deploy: ./deploy-complete-n8n-infrastructure.sh --env production",
      "Monitor: ./deploy-complete-n8n-infrastructure.sh --interval 30",
      "Test: ./deploy-complete-n8n-infrastructure.sh --verbose",
      "API: ./deploy-complete-n8n-infrastructure.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.071654",
    "content_summary": "set -e echo \"\ud83d\ude80 Deploying Complete N8N Infrastructure\" echo \"========================================\" echo \"\u2139\ufe0f  Loading credentials from ~/.zshrc...\" while IFS= read -r line; do",
    "embedding_text": "deploy-complete-n8n-infrastructure.sh data_processing monitoring testing deployment file_operations security api_integration test_supabase_connection activate_n8n_workflows test_webhook_endpoints set -e echo \"\ud83d\ude80 Deploying Complete N8N Infrastructure\" echo \"========================================\" echo \"\u2139\ufe0f  Loading credentials from ~/.zshrc...\" while IFS= read -r line; do",
    "created_at": "2025-09-08T22:56:32.801180"
  },
  {
    "script_id": "script_ae9f744d_8a7603e4",
    "file_path": "scripts/n8n-crew-script-analyzer.py",
    "file_name": "n8n-crew-script-analyzer.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Analysis",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "generate_optimal_structure",
      "__init__",
      "simulate_crew_analysis",
      "analyze_dependencies",
      "main",
      "analyze_existing_folders",
      "discover_all_scripts",
      "analyze_secondary_intents",
      "activate_consolidation_crew",
      "create_implementation_plan",
      "find_consolidation_candidates",
      "activate_categorization_crew",
      "analyze_complexity",
      "check_deprecation",
      "are_scripts_similar",
      "analyze_primary_intent",
      "recommend_folder",
      "activate_deprecation_crew",
      "activate_n8n_crew_analysis",
      "analyze_maintenance_priority",
      "create_research_prompt",
      "find_folder_consolidation_opportunities",
      "generate_crew_insights",
      "save_analysis_results",
      "get_deprecation_reason",
      "get_folder_description",
      "parse_research_analysis",
      "activate_research_crew",
      "calculate_similarity",
      "identify_orphaned_scripts"
    ],
    "dependencies": [
      "json",
      "supabase",
      "dataclasses",
      "defaultdict",
      "typing",
      "datetime",
      "logging",
      "time",
      "Dict",
      "collections",
      "dataclass",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./n8n-crew-script-analyzer.py",
      "Deploy: ./n8n-crew-script-analyzer.py --env production",
      "Monitor: ./n8n-crew-script-analyzer.py --interval 30",
      "Test: ./n8n-crew-script-analyzer.py --verbose",
      "API: ./n8n-crew-script-analyzer.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:36:09.593235",
    "content_summary": "\"\"\" N8N Crew Script Analyzer ======================== Activate N8N crew for deep script analysis and optimal folder restructuring \"\"\"",
    "embedding_text": "n8n-crew-script-analyzer.py data_processing monitoring testing deployment database_operations file_operations security api_integration synchronization generate_optimal_structure __init__ simulate_crew_analysis analyze_dependencies main analyze_existing_folders discover_all_scripts analyze_secondary_intents activate_consolidation_crew create_implementation_plan find_consolidation_candidates activate_categorization_crew analyze_complexity check_deprecation are_scripts_similar analyze_primary_intent recommend_folder activate_deprecation_crew activate_n8n_crew_analysis analyze_maintenance_priority create_research_prompt find_folder_consolidation_opportunities generate_crew_insights save_analysis_results get_deprecation_reason get_folder_description parse_research_analysis activate_research_crew calculate_similarity identify_orphaned_scripts \"\"\" N8N Crew Script Analyzer ======================== Activate N8N crew for deep script analysis and optimal folder restructuring \"\"\"",
    "created_at": "2025-09-08T22:56:32.801182"
  },
  {
    "script_id": "script_d17bc86d_9c0c66e7",
    "file_path": "scripts/test-script.sh",
    "file_name": "test-script.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "testing",
      "data_processing",
      "monitoring"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 1,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./test-script.sh",
      "Monitor: ./test-script.sh --interval 30",
      "Test: ./test-script.sh --verbose"
    ],
    "last_modified": "2025-09-07T01:52:36.020329",
    "content_summary": "echo \"Script starting\" echo \"===============\" echo \"\" echo \"Status: Running\" echo \"Progress: 0%\"",
    "embedding_text": "test-script.sh testing data_processing monitoring  echo \"Script starting\" echo \"===============\" echo \"\" echo \"Status: Running\" echo \"Progress: 0%\"",
    "created_at": "2025-09-08T22:56:32.801183"
  },
  {
    "script_id": "script_d86a5f18_722aed2a",
    "file_path": "scripts/load_alex_ai_credentials.sh",
    "file_name": "load_alex_ai_credentials.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [],
    "dependencies": [
      "~/.zshrc"
    ],
    "complexity_score": 7,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./load_alex_ai_credentials.sh",
      "Test: ./load_alex_ai_credentials.sh --verbose",
      "API: ./load_alex_ai_credentials.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-07T01:52:35.786472",
    "content_summary": "if [ -f ~/.zshrc ]; then     source ~/.zshrc fi if [ -f ~/.alexai-credentials/secure-credentials.json ]; then     echo \"\ud83d\udd10 Loading secure credentials...\"",
    "embedding_text": "load_alex_ai_credentials.sh testing file_operations security api_integration  if [ -f ~/.zshrc ]; then     source ~/.zshrc fi if [ -f ~/.alexai-credentials/secure-credentials.json ]; then     echo \"\ud83d\udd10 Loading secure credentials...\"",
    "created_at": "2025-09-08T22:56:32.801184"
  },
  {
    "script_id": "script_9191d2b3_acca825a",
    "file_path": "scripts/safe-milestone-push.sh",
    "file_name": "safe-milestone-push.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Version Control",
    "functionality": [
      "testing",
      "synchronization",
      "file_operations",
      "monitoring"
    ],
    "functions": [
      "escape_quotes",
      "create_safe_commit_message",
      "safe_push",
      "milestone_push",
      "safe_commit"
    ],
    "dependencies": [],
    "complexity_score": 4,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./safe-milestone-push.sh",
      "Monitor: ./safe-milestone-push.sh --interval 30",
      "Test: ./safe-milestone-push.sh --verbose"
    ],
    "last_modified": "2025-09-08T18:40:31.185098",
    "content_summary": "set -e  # Exit on any error escape_quotes() {     local message=\"$1\"     echo \"$message\" | sed 's/\\\\/\\\\\\\\/g' | sed 's/\"/\\\\\"/g' }",
    "embedding_text": "safe-milestone-push.sh testing synchronization file_operations monitoring escape_quotes create_safe_commit_message safe_push milestone_push safe_commit set -e  # Exit on any error escape_quotes() {     local message=\"$1\"     echo \"$message\" | sed 's/\\\\/\\\\\\\\/g' | sed 's/\"/\\\\\"/g' }",
    "created_at": "2025-09-08T22:56:32.801185"
  },
  {
    "script_id": "script_b48ed390_57e466c0",
    "file_path": "scripts/setup-database-simple.js",
    "file_name": "setup-database-simple.js",
    "file_type": "js",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "Environment Setup",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "setupDatabase"
    ],
    "dependencies": [
      "@supabase/supabase-js",
      "fs",
      "path",
      "dotenv"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Single-purpose script - could be extended with additional functions"
    ],
    "usage_examples": [
      "Execute: ./setup-database-simple.js",
      "Deploy: ./setup-database-simple.js --env production",
      "Monitor: ./setup-database-simple.js --interval 30",
      "Test: ./setup-database-simple.js --verbose",
      "API: ./setup-database-simple.js --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.167816",
    "content_summary": "const { createClient } = require('@supabase/supabase-js') const path = require('path') // Load environment variables require('dotenv').config({ path: path.join(__dirname, '../apps/alex-ai-job-search/....",
    "embedding_text": "setup-database-simple.js data_processing monitoring testing automation deployment database_operations file_operations api_integration synchronization setupDatabase const { createClient } = require('@supabase/supabase-js') const path = require('path') // Load environment variables require('dotenv').config({ path: path.join(__dirname, '../apps/alex-ai-job-search/....",
    "created_at": "2025-09-08T22:56:32.801187"
  },
  {
    "script_id": "script_30ff7a8a_9ae211b7",
    "file_path": "scripts/alexai-init.sh",
    "file_name": "alexai-init.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [],
    "dependencies": [
      "AlexAI",
      "Project",
      "~/.zshrc"
    ],
    "complexity_score": 8,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./alexai-init.sh",
      "Monitor: ./alexai-init.sh --interval 30",
      "Test: ./alexai-init.sh --verbose",
      "API: ./alexai-init.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.339095",
    "content_summary": "echo \"\ud83e\udde0 Initializing AlexAI Supercharged Crew for musician-show-tour-app...\" source ~/.zshrc echo \"\ud83d\udcbe Connecting to Supabase memory system...\" export SUPABASE_URL=\"${SUPABASE_URL:-}\" export SUPABASE_AN...",
    "embedding_text": "alexai-init.sh monitoring testing file_operations security api_integration  echo \"\ud83e\udde0 Initializing AlexAI Supercharged Crew for musician-show-tour-app...\" source ~/.zshrc echo \"\ud83d\udcbe Connecting to Supabase memory system...\" export SUPABASE_URL=\"${SUPABASE_URL:-}\" export SUPABASE_AN...",
    "created_at": "2025-09-08T22:56:32.801188"
  },
  {
    "script_id": "script_69c99ffb_f1bd6513",
    "file_path": "scripts/alex-ai-script-knowledge-integration.py",
    "file_name": "alex-ai-script-knowledge-integration.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "build_script_knowledge_base",
      "extract_dependencies",
      "__init__",
      "main",
      "calculate_complexity",
      "analyze_script_for_knowledge",
      "map_functionality_to_category",
      "determine_maintenance_priority",
      "generate_usage_examples",
      "identify_extension_opportunities",
      "generate_script_id",
      "generate_alex_ai_integration_script",
      "load_knowledge",
      "suggest_script_extension",
      "load_consolidation_findings",
      "generate_extension_recommendations",
      "find_script_by_functionality",
      "extract_functions",
      "create_script_recommendation_system",
      "create_content_summary",
      "find_similar_scripts",
      "create_embedding_text",
      "recommend_categorization",
      "find_consolidation_group",
      "save_integration_files",
      "extract_functionality",
      "store_in_supabase",
      "determine_categorization",
      "calculate_similarity",
      "determine_purpose"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "re",
      "typing",
      "datetime",
      "hashlib",
      "logging",
      "fuzz",
      "Dict",
      "fuzzywuzzy",
      "List",
      "dataclass",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./alex-ai-script-knowledge-integration.py",
      "Deploy: ./alex-ai-script-knowledge-integration.py --env production",
      "Monitor: ./alex-ai-script-knowledge-integration.py --interval 30",
      "Test: ./alex-ai-script-knowledge-integration.py --verbose",
      "API: ./alex-ai-script-knowledge-integration.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:56:29.848792",
    "content_summary": "\"\"\" Alex AI Script Knowledge Integration =================================== Integrate script consolidation findings into Alex AI Supabase vector database for intelligent script discovery, extension, ...",
    "embedding_text": "alex-ai-script-knowledge-integration.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization build_script_knowledge_base extract_dependencies __init__ main calculate_complexity analyze_script_for_knowledge map_functionality_to_category determine_maintenance_priority generate_usage_examples identify_extension_opportunities generate_script_id generate_alex_ai_integration_script load_knowledge suggest_script_extension load_consolidation_findings generate_extension_recommendations find_script_by_functionality extract_functions create_script_recommendation_system create_content_summary find_similar_scripts create_embedding_text recommend_categorization find_consolidation_group save_integration_files extract_functionality store_in_supabase determine_categorization calculate_similarity determine_purpose \"\"\" Alex AI Script Knowledge Integration =================================== Integrate script consolidation findings into Alex AI Supabase vector database for intelligent script discovery, extension, ...",
    "created_at": "2025-09-08T22:56:32.801190"
  },
  {
    "script_id": "script_ec67a838_4787111d",
    "file_path": "scripts/string-manipulation-fix.sh",
    "file_name": "string-manipulation-fix.sh",
    "file_type": "sh",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "create_validation_system",
      "demonstrate_safe_output",
      "safe_output",
      "create_fix_documentation",
      "fix_existing_scripts",
      "create_safe_templates",
      "create_safe_execution",
      "safe_multiline"
    ],
    "dependencies": [
      "Safe",
      "**Always",
      "**Validate",
      "**Use",
      "EOF",
      "String",
      "**Avoid",
      "**Test",
      "scripts/testing/general/consolidated_general.py"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./string-manipulation-fix.sh",
      "Deploy: ./string-manipulation-fix.sh --env production",
      "Monitor: ./string-manipulation-fix.sh --interval 30",
      "Test: ./string-manipulation-fix.sh --verbose",
      "API: ./string-manipulation-fix.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.155693",
    "content_summary": "set -e  # Exit on any error echo \"\ud83d\udd27 Alex AI String Manipulation Fix System\" echo \"=========================================\" echo \"\" safe_output() {",
    "embedding_text": "string-manipulation-fix.sh monitoring testing automation deployment database_operations file_operations security api_integration create_validation_system demonstrate_safe_output safe_output create_fix_documentation fix_existing_scripts create_safe_templates create_safe_execution safe_multiline set -e  # Exit on any error echo \"\ud83d\udd27 Alex AI String Manipulation Fix System\" echo \"=========================================\" echo \"\" safe_output() {",
    "created_at": "2025-09-08T22:56:32.801191"
  },
  {
    "script_id": "script_f9ec3150_c96425c5",
    "file_path": "scripts/generated/test-basic.sh",
    "file_name": "test-basic.sh",
    "file_type": "sh",
    "category": "generated",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "testing",
      "file_operations"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 1,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./test-basic.sh",
      "Test: ./test-basic.sh --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.144573",
    "content_summary": "set -euo pipefail SCRIPT_NAME=\"$(basename \"$0\")\" LOG_FILE=\"/tmp/${SCRIPT_NAME}.log\" }     log \"Completed $SCRIPT_NAME\"",
    "embedding_text": "test-basic.sh testing file_operations  set -euo pipefail SCRIPT_NAME=\"$(basename \"$0\")\" LOG_FILE=\"/tmp/${SCRIPT_NAME}.log\" }     log \"Completed $SCRIPT_NAME\"",
    "created_at": "2025-09-08T22:56:32.801192"
  },
  {
    "script_id": "script_0492da68_65665518",
    "file_path": "scripts/generated/test-status.sh",
    "file_name": "test-status.sh",
    "file_type": "sh",
    "category": "generated",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "testing",
      "data_processing",
      "monitoring"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 1,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./test-status.sh",
      "Monitor: ./test-status.sh --interval 30",
      "Test: ./test-status.sh --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.145684",
    "content_summary": "set -euo pipefail }     output \"=============\"     output \"\"     output \"Status: Running\"",
    "embedding_text": "test-status.sh testing data_processing monitoring  set -euo pipefail }     output \"=============\"     output \"\"     output \"Status: Running\"",
    "created_at": "2025-09-08T22:56:32.801193"
  },
  {
    "script_id": "script_b0c14e3a_49a8ada2",
    "file_path": "scripts/generated/test-progress.sh",
    "file_name": "test-progress.sh",
    "file_type": "sh",
    "category": "generated",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 1,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./test-progress.sh",
      "Monitor: ./test-progress.sh --interval 30",
      "Test: ./test-progress.sh --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.146302",
    "content_summary": "set -euo pipefail PROGRESS=0 TOTAL_STEPS=5 }     local description=\"$2\"",
    "embedding_text": "test-progress.sh data_processing monitoring testing database_operations synchronization  set -euo pipefail PROGRESS=0 TOTAL_STEPS=5 }     local description=\"$2\"",
    "created_at": "2025-09-08T22:56:32.801197"
  },
  {
    "script_id": "script_a03ac69d_86e29599",
    "file_path": "scripts/consolidated/consolidated_fix-zshrc-api-key.py",
    "file_name": "consolidated_fix-zshrc-api-key.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 5,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_fix-zshrc-api-key.py",
      "Test: ./consolidated_fix-zshrc-api-key.py --verbose",
      "API: ./consolidated_fix-zshrc-api-key.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.430838",
    "content_summary": "\"\"\" Consolidated Script: fix-zshrc-api-key ================================ This script consolidates the following similar scripts: - ./scripts/testing/api_integration/consolidated_api_integration.py",
    "embedding_text": "consolidated_fix-zshrc-api-key.py testing database_operations file_operations api_integration synchronization  \"\"\" Consolidated Script: fix-zshrc-api-key ================================ This script consolidates the following similar scripts: - ./scripts/testing/api_integration/consolidated_api_integration.py",
    "created_at": "2025-09-08T22:56:32.801199"
  },
  {
    "script_id": "script_f254761e_20dfb11a",
    "file_path": "scripts/consolidated/consolidated_shell-prompt-safety-system.py",
    "file_name": "consolidated_shell-prompt-safety-system.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "security",
      "api_integration"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_shell-prompt-safety-system.py",
      "Deploy: ./consolidated_shell-prompt-safety-system.py --env production",
      "Monitor: ./consolidated_shell-prompt-safety-system.py --interval 30",
      "Test: ./consolidated_shell-prompt-safety-system.py --verbose",
      "API: ./consolidated_shell-prompt-safety-system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.431153",
    "content_summary": "\"\"\" Consolidated Script: shell-prompt-safety-system ================================ This script consolidates the following similar scripts: - ./scripts/deployment/general/consolidated_general.py",
    "embedding_text": "consolidated_shell-prompt-safety-system.py monitoring testing automation deployment database_operations security api_integration  \"\"\" Consolidated Script: shell-prompt-safety-system ================================ This script consolidates the following similar scripts: - ./scripts/deployment/general/consolidated_general.py",
    "created_at": "2025-09-08T22:56:32.801200"
  },
  {
    "script_id": "script_fee74f72_dc5f0738",
    "file_path": "scripts/consolidated/consolidated_test-status.py",
    "file_name": "consolidated_test-status.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "testing",
      "file_operations",
      "data_processing",
      "monitoring"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 1,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_test-status.py",
      "Monitor: ./consolidated_test-status.py --interval 30",
      "Test: ./consolidated_test-status.py --verbose"
    ],
    "last_modified": "2025-09-06T20:43:44.314405",
    "content_summary": "\"\"\" Consolidated Script: test-status ================================ This script consolidates the following similar scripts: - ./scripts/generated/test-status.sh",
    "embedding_text": "consolidated_test-status.py testing file_operations data_processing monitoring  \"\"\" Consolidated Script: test-status ================================ This script consolidates the following similar scripts: - ./scripts/generated/test-status.sh",
    "created_at": "2025-09-08T22:56:32.801201"
  },
  {
    "script_id": "script_2c2cf7e2_7feb6089",
    "file_path": "scripts/consolidated/consolidated_crew_coordination_update_system.py",
    "file_name": "consolidated_crew_coordination_update_system.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "main",
      "simulate_crew_coordination_update"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "sys"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_crew_coordination_update_system.py",
      "Monitor: ./consolidated_crew_coordination_update_system.py --interval 30",
      "Test: ./consolidated_crew_coordination_update_system.py --verbose"
    ],
    "last_modified": "2025-09-06T20:43:44.314682",
    "content_summary": "\"\"\" Consolidated Script: crew_coordination_update_system ================================ This script consolidates the following similar scripts: - ./crew_coordination_update_system.py",
    "embedding_text": "consolidated_crew_coordination_update_system.py data_processing monitoring testing automation database_operations file_operations synchronization main simulate_crew_coordination_update \"\"\" Consolidated Script: crew_coordination_update_system ================================ This script consolidates the following similar scripts: - ./crew_coordination_update_system.py",
    "created_at": "2025-09-08T22:56:32.801202"
  },
  {
    "script_id": "script_a8369099_4305c1cb",
    "file_path": "scripts/consolidated/consolidated_fix_credential_security.py",
    "file_name": "consolidated_fix_credential_security.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "Security",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "create_crew_memory_about_fix",
      "create_anthropic_key_prompt",
      "main",
      "check_current_credentials",
      "create_secure_credential_loader",
      "test_credential_access"
    ],
    "dependencies": [
      "subprocess",
      "datetime",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_fix_credential_security.py",
      "Monitor: ./consolidated_fix_credential_security.py --interval 30",
      "Test: ./consolidated_fix_credential_security.py --verbose",
      "API: ./consolidated_fix_credential_security.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.315002",
    "content_summary": "\"\"\" Consolidated Script: fix_credential_security ================================ This script consolidates the following similar scripts: - ./fix_credential_security.py",
    "embedding_text": "consolidated_fix_credential_security.py data_processing monitoring testing file_operations security api_integration create_crew_memory_about_fix create_anthropic_key_prompt main check_current_credentials create_secure_credential_loader test_credential_access \"\"\" Consolidated Script: fix_credential_security ================================ This script consolidates the following similar scripts: - ./fix_credential_security.py",
    "created_at": "2025-09-08T22:56:32.801204"
  },
  {
    "script_id": "script_ce0aa5a1_699b53a2",
    "file_path": "scripts/consolidated/consolidated_fix-claude-api.py",
    "file_name": "consolidated_fix-claude-api.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "deployment",
      "database_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 5,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_fix-claude-api.py",
      "Deploy: ./consolidated_fix-claude-api.py --env production",
      "Test: ./consolidated_fix-claude-api.py --verbose",
      "API: ./consolidated_fix-claude-api.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.431713",
    "content_summary": "\"\"\" Consolidated Script: fix-claude-api ================================ This script consolidates the following similar scripts: - ./scripts/deployment/api_integration/consolidated_api_integration.py",
    "embedding_text": "consolidated_fix-claude-api.py testing deployment database_operations api_integration synchronization  \"\"\" Consolidated Script: fix-claude-api ================================ This script consolidates the following similar scripts: - ./scripts/deployment/api_integration/consolidated_api_integration.py",
    "created_at": "2025-09-08T22:56:32.801205"
  },
  {
    "script_id": "script_37c59304_79ce3d6e",
    "file_path": "scripts/consolidated/consolidated_alex_ai_credential_manager.py",
    "file_name": "consolidated_alex_ai_credential_manager.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "create_crew_memory",
      "__init__",
      "decrypt_credentials",
      "setup_environment_variables",
      "encrypt_credentials",
      "generate_credential_report",
      "load_credentials_securely",
      "run_comprehensive_setup",
      "validate_credentials",
      "main",
      "load_from_environment",
      "create_secure_directory",
      "load_from_zshrc",
      "test_credential_access",
      "save_credentials_securely"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "hashlib",
      "Path",
      "Dict",
      "subprocess",
      "pathlib",
      "os",
      "requests",
      "base64"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_alex_ai_credential_manager.py",
      "Deploy: ./consolidated_alex_ai_credential_manager.py --env production",
      "Monitor: ./consolidated_alex_ai_credential_manager.py --interval 30",
      "Test: ./consolidated_alex_ai_credential_manager.py --verbose",
      "API: ./consolidated_alex_ai_credential_manager.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.315478",
    "content_summary": "\"\"\" Consolidated Script: alex_ai_credential_manager ================================ This script consolidates the following similar scripts: - ./alex_ai_credential_manager.py",
    "embedding_text": "consolidated_alex_ai_credential_manager.py data_processing monitoring testing deployment file_operations security api_integration synchronization create_crew_memory __init__ decrypt_credentials setup_environment_variables encrypt_credentials generate_credential_report load_credentials_securely run_comprehensive_setup validate_credentials main load_from_environment create_secure_directory load_from_zshrc test_credential_access save_credentials_securely \"\"\" Consolidated Script: alex_ai_credential_manager ================================ This script consolidates the following similar scripts: - ./alex_ai_credential_manager.py",
    "created_at": "2025-09-08T22:56:32.801207"
  },
  {
    "script_id": "script_be77e11e_0725eb5f",
    "file_path": "scripts/consolidated/consolidated_setup-secure-api-keys.py",
    "file_name": "consolidated_setup-secure-api-keys.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "Environment Setup",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_setup-secure-api-keys.py",
      "Deploy: ./consolidated_setup-secure-api-keys.py --env production",
      "Monitor: ./consolidated_setup-secure-api-keys.py --interval 30",
      "Test: ./consolidated_setup-secure-api-keys.py --verbose",
      "API: ./consolidated_setup-secure-api-keys.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.432156",
    "content_summary": "\"\"\" Consolidated Script: setup-secure-api-keys ================================ This script consolidates the following similar scripts: - ./scripts/deployment/api_integration/consolidated_api_integrat...",
    "embedding_text": "consolidated_setup-secure-api-keys.py monitoring testing deployment database_operations file_operations api_integration synchronization  \"\"\" Consolidated Script: setup-secure-api-keys ================================ This script consolidates the following similar scripts: - ./scripts/deployment/api_integration/consolidated_api_integrat...",
    "created_at": "2025-09-08T22:56:32.801208"
  },
  {
    "script_id": "script_4796d226_d2cc648f",
    "file_path": "scripts/consolidated/consolidated_mcp_library_computer_system.py",
    "file_name": "consolidated_mcp_library_computer_system.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "__init__",
      "query_mcp_library",
      "run_knowledge_distribution_cycle",
      "main",
      "update_crew_specialization",
      "create_crew_knowledge_memory",
      "print_distribution_report"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_mcp_library_computer_system.py",
      "Monitor: ./consolidated_mcp_library_computer_system.py --interval 30",
      "API: ./consolidated_mcp_library_computer_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.316402",
    "content_summary": "\"\"\" Consolidated Script: mcp_library_computer_system ================================ This script consolidates the following similar scripts: - ./mcp_library_computer_system.py",
    "embedding_text": "consolidated_mcp_library_computer_system.py data_processing monitoring database_operations file_operations security api_integration synchronization __init__ query_mcp_library run_knowledge_distribution_cycle main update_crew_specialization create_crew_knowledge_memory print_distribution_report \"\"\" Consolidated Script: mcp_library_computer_system ================================ This script consolidates the following similar scripts: - ./mcp_library_computer_system.py",
    "created_at": "2025-09-08T22:56:32.801209"
  },
  {
    "script_id": "script_101f75bd_521542a4",
    "file_path": "scripts/consolidated/consolidated_claude-api-key-guide.py",
    "file_name": "consolidated_claude-api-key-guide.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "file_operations",
      "api_integration",
      "monitoring"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 3,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_claude-api-key-guide.py",
      "Monitor: ./consolidated_claude-api-key-guide.py --interval 30",
      "Test: ./consolidated_claude-api-key-guide.py --verbose",
      "API: ./consolidated_claude-api-key-guide.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.432710",
    "content_summary": "\"\"\" Consolidated Script: claude-api-key-guide ================================ This script consolidates the following similar scripts: - ./scripts/testing/api_integration/consolidated_api_integration....",
    "embedding_text": "consolidated_claude-api-key-guide.py testing file_operations api_integration monitoring  \"\"\" Consolidated Script: claude-api-key-guide ================================ This script consolidates the following similar scripts: - ./scripts/testing/api_integration/consolidated_api_integration....",
    "created_at": "2025-09-08T22:56:32.801210"
  },
  {
    "script_id": "script_09e0a121_3c2721e8",
    "file_path": "scripts/consolidated/consolidated_update-claude-api.py",
    "file_name": "consolidated_update-claude-api.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 7,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_update-claude-api.py",
      "Deploy: ./consolidated_update-claude-api.py --env production",
      "Monitor: ./consolidated_update-claude-api.py --interval 30",
      "Test: ./consolidated_update-claude-api.py --verbose",
      "API: ./consolidated_update-claude-api.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.432838",
    "content_summary": "\"\"\" Consolidated Script: update-claude-api ================================ This script consolidates the following similar scripts: - ./scripts/deployment/api_integration/consolidated_api_integration....",
    "embedding_text": "consolidated_update-claude-api.py monitoring testing deployment database_operations file_operations security api_integration synchronization  \"\"\" Consolidated Script: update-claude-api ================================ This script consolidates the following similar scripts: - ./scripts/deployment/api_integration/consolidated_api_integration....",
    "created_at": "2025-09-08T22:56:32.801212"
  },
  {
    "script_id": "script_f9b4f655_a8e54aa9",
    "file_path": "scripts/consolidated/consolidated_progressive_git_push_system.py",
    "file_name": "consolidated_progressive_git_push_system.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "__init__",
      "create_push_step",
      "run_progressive_push",
      "main",
      "execute_push_step",
      "print_progressive_report",
      "create_alex_ai_progressive_steps"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "time",
      "Dict",
      "sys",
      "subprocess",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_progressive_git_push_system.py",
      "Deploy: ./consolidated_progressive_git_push_system.py --env production",
      "Monitor: ./consolidated_progressive_git_push_system.py --interval 30",
      "Test: ./consolidated_progressive_git_push_system.py --verbose",
      "API: ./consolidated_progressive_git_push_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.317105",
    "content_summary": "\"\"\" Consolidated Script: progressive_git_push_system ================================ This script consolidates the following similar scripts: - ./progressive_git_push_system.py",
    "embedding_text": "consolidated_progressive_git_push_system.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization __init__ create_push_step run_progressive_push main execute_push_step print_progressive_report create_alex_ai_progressive_steps \"\"\" Consolidated Script: progressive_git_push_system ================================ This script consolidates the following similar scripts: - ./progressive_git_push_system.py",
    "created_at": "2025-09-08T22:56:32.801213"
  },
  {
    "script_id": "script_ffa87301_8449fcd9",
    "file_path": "scripts/consolidated/consolidated_observation_lounge_crew_debrief.py",
    "file_name": "consolidated_observation_lounge_crew_debrief.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "automation",
      "deployment",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "simulate_observation_lounge_session",
      "main"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "sys"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_observation_lounge_crew_debrief.py",
      "Deploy: ./consolidated_observation_lounge_crew_debrief.py --env production",
      "Monitor: ./consolidated_observation_lounge_crew_debrief.py --interval 30",
      "API: ./consolidated_observation_lounge_crew_debrief.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.317416",
    "content_summary": "\"\"\" Consolidated Script: observation_lounge_crew_debrief ================================ This script consolidates the following similar scripts: - ./observation_lounge_crew_debrief.py",
    "embedding_text": "consolidated_observation_lounge_crew_debrief.py data_processing monitoring automation deployment file_operations security api_integration simulate_observation_lounge_session main \"\"\" Consolidated Script: observation_lounge_crew_debrief ================================ This script consolidates the following similar scripts: - ./observation_lounge_crew_debrief.py",
    "created_at": "2025-09-08T22:56:32.801214"
  },
  {
    "script_id": "script_dda3757f_9139bca3",
    "file_path": "scripts/consolidated/consolidated_test-script.py",
    "file_name": "consolidated_test-script.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "testing",
      "data_processing",
      "monitoring"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 1,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_test-script.py",
      "Monitor: ./consolidated_test-script.py --interval 30",
      "Test: ./consolidated_test-script.py --verbose"
    ],
    "last_modified": "2025-09-06T20:43:44.317622",
    "content_summary": "\"\"\" Consolidated Script: test-script ================================ This script consolidates the following similar scripts: - ./test-script.sh",
    "embedding_text": "consolidated_test-script.py testing data_processing monitoring  \"\"\" Consolidated Script: test-script ================================ This script consolidates the following similar scripts: - ./test-script.sh",
    "created_at": "2025-09-08T22:56:32.801215"
  },
  {
    "script_id": "script_f64a4ad7_6779bb88",
    "file_path": "scripts/consolidated/consolidated_store_crew_memories_supabase.py",
    "file_name": "consolidated_store_crew_memories_supabase.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "create_memory_summary",
      "main",
      "store_crew_memories",
      "__init__"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_store_crew_memories_supabase.py",
      "Monitor: ./consolidated_store_crew_memories_supabase.py --interval 30",
      "Test: ./consolidated_store_crew_memories_supabase.py --verbose",
      "API: ./consolidated_store_crew_memories_supabase.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.317952",
    "content_summary": "\"\"\" Consolidated Script: store_crew_memories_supabase ================================ This script consolidates the following similar scripts: - ./store_crew_memories_supabase.py",
    "embedding_text": "consolidated_store_crew_memories_supabase.py data_processing monitoring testing database_operations file_operations security api_integration create_memory_summary main store_crew_memories __init__ \"\"\" Consolidated Script: store_crew_memories_supabase ================================ This script consolidates the following similar scripts: - ./store_crew_memories_supabase.py",
    "created_at": "2025-09-08T22:56:32.801217"
  },
  {
    "script_id": "script_5864ccb0_e9b176bc",
    "file_path": "scripts/consolidated/consolidated_youtube_channel_intelligence_system.py",
    "file_name": "consolidated_youtube_channel_intelligence_system.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "database_operations",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "__init__",
      "_extract_key_concepts",
      "_extract_decision_concepts",
      "_analyze_videos_with_crew_specialization",
      "_create_content_vectors",
      "_extract_analytical_concepts",
      "_calculate_relevance_score",
      "main",
      "_extract_logical_concepts",
      "_store_channel_analysis",
      "search_insights_by_vector_similarity",
      "get_channel_insights_for_crew",
      "_get_channel_videos",
      "_extract_key_themes",
      "_extract_leadership_concepts",
      "_get_channel_info",
      "_select_relevant_videos",
      "_store_crew_insights",
      "_extract_data_concepts",
      "analyze_youtube_channel",
      "_extract_channel_id",
      "_create_vector_embedding",
      "_analyze_video_for_crew_member",
      "_generate_channel_summary",
      "_generate_crew_specific_insight"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "defaultdict",
      "re",
      "typing",
      "datetime",
      "hashlib",
      "numpy",
      "Dict",
      "collections",
      "sys",
      "YouTubeScraperCrewIntegration",
      "youtube_scraper_crew_integration",
      "dataclass",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_youtube_channel_intelligence_system.py",
      "Monitor: ./consolidated_youtube_channel_intelligence_system.py --interval 30",
      "API: ./consolidated_youtube_channel_intelligence_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.318291",
    "content_summary": "\"\"\" Consolidated Script: youtube_channel_intelligence_system ================================ This script consolidates the following similar scripts: - ./youtube_channel_intelligence_system.py",
    "embedding_text": "consolidated_youtube_channel_intelligence_system.py data_processing monitoring database_operations file_operations security api_integration __init__ _extract_key_concepts _extract_decision_concepts _analyze_videos_with_crew_specialization _create_content_vectors _extract_analytical_concepts _calculate_relevance_score main _extract_logical_concepts _store_channel_analysis search_insights_by_vector_similarity get_channel_insights_for_crew _get_channel_videos _extract_key_themes _extract_leadership_concepts _get_channel_info _select_relevant_videos _store_crew_insights _extract_data_concepts analyze_youtube_channel _extract_channel_id _create_vector_embedding _analyze_video_for_crew_member _generate_channel_summary _generate_crew_specific_insight \"\"\" Consolidated Script: youtube_channel_intelligence_system ================================ This script consolidates the following similar scripts: - ./youtube_channel_intelligence_system.py",
    "created_at": "2025-09-08T22:56:32.801218"
  },
  {
    "script_id": "script_e7b6ab94_fad65274",
    "file_path": "scripts/consolidated/consolidated_youtube_scraper_crew_integration.py",
    "file_name": "consolidated_youtube_scraper_crew_integration.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "batch_analyze_videos",
      "_get_existing_analysis",
      "__init__",
      "request_youtube_analysis",
      "_generate_request_id",
      "main",
      "_extract_video_id",
      "_is_already_processed",
      "list_crew_members",
      "get_crew_analysis_history",
      "_is_valid_youtube_url"
    ],
    "dependencies": [
      "json",
      "re",
      "typing",
      "datetime",
      "hashlib",
      "Dict",
      "sys",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_youtube_scraper_crew_integration.py",
      "Monitor: ./consolidated_youtube_scraper_crew_integration.py --interval 30",
      "Test: ./consolidated_youtube_scraper_crew_integration.py --verbose",
      "API: ./consolidated_youtube_scraper_crew_integration.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.318583",
    "content_summary": "\"\"\" Consolidated Script: youtube_scraper_crew_integration ================================ This script consolidates the following similar scripts: - ./youtube_scraper_crew_integration.py",
    "embedding_text": "consolidated_youtube_scraper_crew_integration.py data_processing monitoring testing database_operations file_operations security api_integration batch_analyze_videos _get_existing_analysis __init__ request_youtube_analysis _generate_request_id main _extract_video_id _is_already_processed list_crew_members get_crew_analysis_history _is_valid_youtube_url \"\"\" Consolidated Script: youtube_scraper_crew_integration ================================ This script consolidates the following similar scripts: - ./youtube_scraper_crew_integration.py",
    "created_at": "2025-09-08T22:56:32.801219"
  },
  {
    "script_id": "script_112c0bc1_4ec92ca6",
    "file_path": "scripts/consolidated/consolidated_alexai-init.py",
    "file_name": "consolidated_alexai-init.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 6,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_alexai-init.py",
      "Deploy: ./consolidated_alexai-init.py --env production",
      "Monitor: ./consolidated_alexai-init.py --interval 30",
      "Test: ./consolidated_alexai-init.py --verbose",
      "API: ./consolidated_alexai-init.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.434413",
    "content_summary": "\"\"\" Consolidated Script: alexai-init ================================ This script consolidates the following similar scripts: - ./scripts/deployment/general/consolidated_general.py",
    "embedding_text": "consolidated_alexai-init.py monitoring testing deployment file_operations security api_integration  \"\"\" Consolidated Script: alexai-init ================================ This script consolidates the following similar scripts: - ./scripts/deployment/general/consolidated_general.py",
    "created_at": "2025-09-08T22:56:32.801220"
  },
  {
    "script_id": "script_5cebb3d9_6cc56dff",
    "file_path": "scripts/consolidated/consolidated_shell-safety-guide.py",
    "file_name": "consolidated_shell-safety-guide.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "file_operations",
      "api_integration"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_shell-safety-guide.py",
      "Monitor: ./consolidated_shell-safety-guide.py --interval 30",
      "Test: ./consolidated_shell-safety-guide.py --verbose",
      "API: ./consolidated_shell-safety-guide.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.434557",
    "content_summary": "\"\"\" Consolidated Script: shell-safety-guide ================================ This script consolidates the following similar scripts: - ./scripts/testing/general/consolidated_general.py",
    "embedding_text": "consolidated_shell-safety-guide.py data_processing monitoring testing file_operations api_integration  \"\"\" Consolidated Script: shell-safety-guide ================================ This script consolidates the following similar scripts: - ./scripts/testing/general/consolidated_general.py",
    "created_at": "2025-09-08T22:56:32.801222"
  },
  {
    "script_id": "script_2935bff3_381e5836",
    "file_path": "scripts/consolidated/consolidated_channel-intelligence-dual-milestone-push.py",
    "file_name": "consolidated_channel-intelligence-dual-milestone-push.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "Version Control",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_channel-intelligence-dual-milestone-push.py",
      "Deploy: ./consolidated_channel-intelligence-dual-milestone-push.py --env production",
      "Monitor: ./consolidated_channel-intelligence-dual-milestone-push.py --interval 30",
      "Test: ./consolidated_channel-intelligence-dual-milestone-push.py --verbose",
      "API: ./consolidated_channel-intelligence-dual-milestone-push.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.319372",
    "content_summary": "\"\"\" Consolidated Script: channel-intelligence-dual-milestone-push ================================ This script consolidates the following similar scripts: - ./channel-intelligence-dual-milestone-push....",
    "embedding_text": "consolidated_channel-intelligence-dual-milestone-push.py data_processing monitoring testing deployment file_operations security api_integration synchronization  \"\"\" Consolidated Script: channel-intelligence-dual-milestone-push ================================ This script consolidates the following similar scripts: - ./channel-intelligence-dual-milestone-push....",
    "created_at": "2025-09-08T22:56:32.801223"
  },
  {
    "script_id": "script_c19d9673_2cecb649",
    "file_path": "scripts/consolidated/consolidated_test-progress.py",
    "file_name": "consolidated_test-progress.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 1,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_test-progress.py",
      "Monitor: ./consolidated_test-progress.py --interval 30",
      "Test: ./consolidated_test-progress.py --verbose"
    ],
    "last_modified": "2025-09-06T20:43:44.319550",
    "content_summary": "\"\"\" Consolidated Script: test-progress ================================ This script consolidates the following similar scripts: - ./scripts/generated/test-progress.sh",
    "embedding_text": "consolidated_test-progress.py data_processing monitoring testing database_operations file_operations synchronization  \"\"\" Consolidated Script: test-progress ================================ This script consolidates the following similar scripts: - ./scripts/generated/test-progress.sh",
    "created_at": "2025-09-08T22:56:32.801225"
  },
  {
    "script_id": "script_67b7546c_cb394711",
    "file_path": "scripts/consolidated/consolidated_mcp_integration_system.py",
    "file_name": "consolidated_mcp_integration_system.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "get_memory_statistics",
      "__init__",
      "trigger_workflow",
      "main",
      "export_memories",
      "_matches_criteria",
      "_determine_correlation_type",
      "search_memories",
      "consolidate_memories",
      "get_memory_by_id",
      "_text_search_memories",
      "_convert_to_csv",
      "_load_project_memories",
      "store_memory",
      "correlate_memories",
      "import_memories",
      "handle_mcp_request",
      "optimize_memories",
      "get_workflow_status"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "mcp_memory_optimization_system",
      "MCPMemoryOptimizationSystem",
      "typing",
      "datetime",
      "logging",
      "numpy",
      "Dict",
      "asyncio",
      "dataclass",
      "aiohttp",
      "os",
      "memory"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./consolidated_mcp_integration_system.py",
      "Deploy: ./consolidated_mcp_integration_system.py --env production",
      "Monitor: ./consolidated_mcp_integration_system.py --interval 30",
      "Test: ./consolidated_mcp_integration_system.py --verbose",
      "API: ./consolidated_mcp_integration_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.320052",
    "content_summary": "\"\"\" Consolidated Script: mcp_integration_system ================================ This script consolidates the following similar scripts: - ./mcp_integration_system.py",
    "embedding_text": "consolidated_mcp_integration_system.py data_processing monitoring testing automation deployment database_operations api_integration synchronization get_memory_statistics __init__ trigger_workflow main export_memories _matches_criteria _determine_correlation_type search_memories consolidate_memories get_memory_by_id _text_search_memories _convert_to_csv _load_project_memories store_memory correlate_memories import_memories handle_mcp_request optimize_memories get_workflow_status \"\"\" Consolidated Script: mcp_integration_system ================================ This script consolidates the following similar scripts: - ./mcp_integration_system.py",
    "created_at": "2025-09-08T22:56:32.801226"
  },
  {
    "script_id": "script_47100caf_5256bd8e",
    "file_path": "scripts/consolidated/consolidated_enhanced_ai_prompts_deployment_system.py",
    "file_name": "consolidated_enhanced_ai_prompts_deployment_system.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "Deployment and Setup",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "__init__",
      "main",
      "_get_claude_analysis_prompt",
      "_get_supabase_integration_prompt",
      "setup_validation_schedule",
      "setup_performance_monitoring",
      "test_performance",
      "market_research_workflow",
      "generate_enhanced_prompt",
      "validate_business_model",
      "create_integration_guide",
      "_get_system_integration_prompt",
      "integrated_workflow",
      "execute_all_next_steps",
      "_get_business_validation_prompt",
      "test_live_system_integration",
      "_get_n8n_workflow_prompt",
      "setup_automated_testing",
      "analyze_with_claude",
      "scale_to_other_projects",
      "trigger_n8n_workflow",
      "test_integration_guide_creation",
      "create_advanced_workflows",
      "setUp",
      "setup_market_monitoring",
      "_get_market_research_prompt",
      "test_prompt_generation",
      "deploy_enhanced_prompts"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "enhanced_ai_prompts_system",
      "unittest",
      "Dict",
      "EnhancedAIPromptsSystem",
      "time",
      "create_client",
      "supabase",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_enhanced_ai_prompts_deployment_system.py",
      "Deploy: ./consolidated_enhanced_ai_prompts_deployment_system.py --env production",
      "Monitor: ./consolidated_enhanced_ai_prompts_deployment_system.py --interval 30",
      "Test: ./consolidated_enhanced_ai_prompts_deployment_system.py --verbose",
      "API: ./consolidated_enhanced_ai_prompts_deployment_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:35:10.667665",
    "content_summary": "\"\"\" Consolidated Script: enhanced_ai_prompts_deployment_system ================================ This script consolidates the following similar scripts: - ./enhanced_ai_prompts_deployment_system.py",
    "embedding_text": "consolidated_enhanced_ai_prompts_deployment_system.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization __init__ main _get_claude_analysis_prompt _get_supabase_integration_prompt setup_validation_schedule setup_performance_monitoring test_performance market_research_workflow generate_enhanced_prompt validate_business_model create_integration_guide _get_system_integration_prompt integrated_workflow execute_all_next_steps _get_business_validation_prompt test_live_system_integration _get_n8n_workflow_prompt setup_automated_testing analyze_with_claude scale_to_other_projects trigger_n8n_workflow test_integration_guide_creation create_advanced_workflows setUp setup_market_monitoring _get_market_research_prompt test_prompt_generation deploy_enhanced_prompts \"\"\" Consolidated Script: enhanced_ai_prompts_deployment_system ================================ This script consolidates the following similar scripts: - ./enhanced_ai_prompts_deployment_system.py",
    "created_at": "2025-09-08T22:56:32.801227"
  },
  {
    "script_id": "script_0ec937b1_a0e165ce",
    "file_path": "scripts/consolidated/consolidated_demo_youtube_scraper_system.py",
    "file_name": "consolidated_demo_youtube_scraper_system.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "file_operations",
      "api_integration"
    ],
    "functions": [
      "run_complete_demo",
      "demo_crew_member_listing",
      "__init__",
      "demo_individual_crew_analysis",
      "main",
      "interactive_demo",
      "interactive_batch_analysis",
      "interactive_single_analysis",
      "demo_analysis_history",
      "demo_crew_coordination_analysis",
      "demo_batch_analysis_perspectives"
    ],
    "dependencies": [
      "json",
      "ObservationLoungeCoordinator",
      "typing",
      "datetime",
      "Dict",
      "youtube_scraper_crew_integration",
      "sys",
      "crew_coordinator",
      "os",
      "YouTubeScraperCrewIntegration"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_demo_youtube_scraper_system.py",
      "Deploy: ./consolidated_demo_youtube_scraper_system.py --env production",
      "Monitor: ./consolidated_demo_youtube_scraper_system.py --interval 30",
      "Test: ./consolidated_demo_youtube_scraper_system.py --verbose",
      "API: ./consolidated_demo_youtube_scraper_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.320914",
    "content_summary": "\"\"\" Consolidated Script: demo_youtube_scraper_system ================================ This script consolidates the following similar scripts: - ./demo_youtube_scraper_system.py",
    "embedding_text": "consolidated_demo_youtube_scraper_system.py data_processing monitoring testing automation deployment file_operations api_integration run_complete_demo demo_crew_member_listing __init__ demo_individual_crew_analysis main interactive_demo interactive_batch_analysis interactive_single_analysis demo_analysis_history demo_crew_coordination_analysis demo_batch_analysis_perspectives \"\"\" Consolidated Script: demo_youtube_scraper_system ================================ This script consolidates the following similar scripts: - ./demo_youtube_scraper_system.py",
    "created_at": "2025-09-08T22:56:32.801228"
  },
  {
    "script_id": "script_448676a7_795c5313",
    "file_path": "scripts/consolidated/consolidated_cursor-ai-shell-integration.py",
    "file_name": "consolidated_cursor-ai-shell-integration.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_cursor-ai-shell-integration.py",
      "Monitor: ./consolidated_cursor-ai-shell-integration.py --interval 30",
      "Test: ./consolidated_cursor-ai-shell-integration.py --verbose",
      "API: ./consolidated_cursor-ai-shell-integration.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.321235",
    "content_summary": "\"\"\" Consolidated Script: cursor-ai-shell-integration ================================ This script consolidates the following similar scripts: - ./cursor-extension-milestone-package/cursor-ai-shell-int...",
    "embedding_text": "consolidated_cursor-ai-shell-integration.py data_processing monitoring testing file_operations security api_integration  \"\"\" Consolidated Script: cursor-ai-shell-integration ================================ This script consolidates the following similar scripts: - ./cursor-extension-milestone-package/cursor-ai-shell-int...",
    "created_at": "2025-09-08T22:56:32.801230"
  },
  {
    "script_id": "script_d155d53f_69d8d587",
    "file_path": "scripts/consolidated/consolidated_claude-api-fix-final.py",
    "file_name": "consolidated_claude-api-fix-final.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 5,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_claude-api-fix-final.py",
      "Deploy: ./consolidated_claude-api-fix-final.py --env production",
      "Monitor: ./consolidated_claude-api-fix-final.py --interval 30",
      "Test: ./consolidated_claude-api-fix-final.py --verbose",
      "API: ./consolidated_claude-api-fix-final.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.436489",
    "content_summary": "\"\"\" Consolidated Script: claude-api-fix-final ================================ This script consolidates the following similar scripts: - ./scripts/deployment/api_integration/consolidated_api_integrati...",
    "embedding_text": "consolidated_claude-api-fix-final.py monitoring testing deployment database_operations file_operations security api_integration synchronization  \"\"\" Consolidated Script: claude-api-fix-final ================================ This script consolidates the following similar scripts: - ./scripts/deployment/api_integration/consolidated_api_integrati...",
    "created_at": "2025-09-08T22:56:32.801231"
  },
  {
    "script_id": "script_bc1661f4_e0f338f9",
    "file_path": "scripts/consolidated/consolidated_crew_coordinator.py",
    "file_name": "consolidated_crew_coordinator.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "_generate_recommendations",
      "__init__",
      "coordinate_observation_lounge",
      "_extract_key_themes",
      "_identify_consensus",
      "main",
      "_identify_divergence",
      "_select_crew_members",
      "_synthesize_crew_insights",
      "_generate_next_actions",
      "_conduct_crew_session",
      "_handle_youtube_analysis_request",
      "_get_crew_member_insight"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "youtube_scraper_crew_integration",
      "sys",
      "YouTubeScraperCrewIntegration",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_crew_coordinator.py",
      "Monitor: ./consolidated_crew_coordinator.py --interval 30",
      "Test: ./consolidated_crew_coordinator.py --verbose",
      "API: ./consolidated_crew_coordinator.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.323085",
    "content_summary": "\"\"\" Consolidated Script: crew_coordinator ================================ This script consolidates the following similar scripts: - ./crew_coordinator.py",
    "embedding_text": "consolidated_crew_coordinator.py data_processing monitoring testing automation file_operations security api_integration _generate_recommendations __init__ coordinate_observation_lounge _extract_key_themes _identify_consensus main _identify_divergence _select_crew_members _synthesize_crew_insights _generate_next_actions _conduct_crew_session _handle_youtube_analysis_request _get_crew_member_insight \"\"\" Consolidated Script: crew_coordinator ================================ This script consolidates the following similar scripts: - ./crew_coordinator.py",
    "created_at": "2025-09-08T22:56:32.801232"
  },
  {
    "script_id": "script_8939162b_a7140c5f",
    "file_path": "scripts/consolidated/consolidated_enhanced_unified_router.py",
    "file_name": "consolidated_enhanced_unified_router.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "route_request",
      "_make_routing_decision",
      "__init__",
      "main",
      "_execute_openrouter_request",
      "_format_crew_prompt",
      "_execute_claude_request",
      "_select_crew_member"
    ],
    "dependencies": [
      "json",
      "typing",
      "Dict",
      "sys",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_enhanced_unified_router.py",
      "Monitor: ./consolidated_enhanced_unified_router.py --interval 30",
      "API: ./consolidated_enhanced_unified_router.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.324771",
    "content_summary": "\"\"\" Consolidated Script: enhanced_unified_router ================================ This script consolidates the following similar scripts: - ./enhanced_unified_router.py",
    "embedding_text": "consolidated_enhanced_unified_router.py data_processing monitoring file_operations security api_integration route_request _make_routing_decision __init__ main _execute_openrouter_request _format_crew_prompt _execute_claude_request _select_crew_member \"\"\" Consolidated Script: enhanced_unified_router ================================ This script consolidates the following similar scripts: - ./enhanced_unified_router.py",
    "created_at": "2025-09-08T22:56:32.801234"
  },
  {
    "script_id": "script_9ef5ee79_9acb7246",
    "file_path": "scripts/consolidated/consolidated_test-basic.py",
    "file_name": "consolidated_test-basic.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "testing",
      "file_operations"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 1,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_test-basic.py",
      "Test: ./consolidated_test-basic.py --verbose"
    ],
    "last_modified": "2025-09-06T20:43:44.325037",
    "content_summary": "\"\"\" Consolidated Script: test-basic ================================ This script consolidates the following similar scripts: - ./scripts/generated/test-basic.sh",
    "embedding_text": "consolidated_test-basic.py testing file_operations  \"\"\" Consolidated Script: test-basic ================================ This script consolidates the following similar scripts: - ./scripts/generated/test-basic.sh",
    "created_at": "2025-09-08T22:56:32.801236"
  },
  {
    "script_id": "script_0851d0c6_69bbe184",
    "file_path": "scripts/consolidated/consolidated_crew_learning_assessment.py",
    "file_name": "consolidated_crew_learning_assessment.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "_analyze_individual_learnings",
      "_analyze_shared_learnings",
      "__init__",
      "assess_crew_learning",
      "main",
      "_generate_learning_report",
      "_store_crew_memories"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_crew_learning_assessment.py",
      "Deploy: ./consolidated_crew_learning_assessment.py --env production",
      "Monitor: ./consolidated_crew_learning_assessment.py --interval 30",
      "Test: ./consolidated_crew_learning_assessment.py --verbose",
      "API: ./consolidated_crew_learning_assessment.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.325389",
    "content_summary": "\"\"\" Consolidated Script: crew_learning_assessment ================================ This script consolidates the following similar scripts: - ./crew_learning_assessment.py",
    "embedding_text": "consolidated_crew_learning_assessment.py data_processing monitoring testing deployment database_operations file_operations security api_integration synchronization _analyze_individual_learnings _analyze_shared_learnings __init__ assess_crew_learning main _generate_learning_report _store_crew_memories \"\"\" Consolidated Script: crew_learning_assessment ================================ This script consolidates the following similar scripts: - ./crew_learning_assessment.py",
    "created_at": "2025-09-08T22:56:32.801237"
  },
  {
    "script_id": "script_8d429774_20d8760d",
    "file_path": "scripts/consolidated/consolidated_advanced_ai_agent_development_system.py",
    "file_name": "consolidated_advanced_ai_agent_development_system.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "database_operations",
      "file_operations",
      "security",
      "synchronization"
    ],
    "functions": [
      "initialize_enhanced_prompts",
      "__init__",
      "develop_self_improving_capabilities",
      "develop_capabilities",
      "create_advanced_agents",
      "main",
      "orchestrate_advanced_workflow",
      "execute_advanced_task",
      "create_advanced_agent_system",
      "learn_from_interactions"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "enhanced_ai_prompts_system",
      "Dict",
      "EnhancedAIPromptsSystem"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_advanced_ai_agent_development_system.py",
      "Monitor: ./consolidated_advanced_ai_agent_development_system.py --interval 30",
      "Test: ./consolidated_advanced_ai_agent_development_system.py --verbose"
    ],
    "last_modified": "2025-09-06T20:43:44.325688",
    "content_summary": "\"\"\" Consolidated Script: advanced_ai_agent_development_system ================================ This script consolidates the following similar scripts: - ./advanced_ai_agent_development_system.py",
    "embedding_text": "consolidated_advanced_ai_agent_development_system.py data_processing monitoring testing automation database_operations file_operations security synchronization initialize_enhanced_prompts __init__ develop_self_improving_capabilities develop_capabilities create_advanced_agents main orchestrate_advanced_workflow execute_advanced_task create_advanced_agent_system learn_from_interactions \"\"\" Consolidated Script: advanced_ai_agent_development_system ================================ This script consolidates the following similar scripts: - ./advanced_ai_agent_development_system.py",
    "created_at": "2025-09-08T22:56:32.801238"
  },
  {
    "script_id": "script_e39a6042_1662a9c0",
    "file_path": "scripts/consolidated/consolidated_alex_ai_memory_sharing_assessment.py",
    "file_name": "consolidated_alex_ai_memory_sharing_assessment.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "run_comprehensive_assessment",
      "__init__",
      "verify_memory_sharing",
      "get_all_crew_memories",
      "main",
      "analyze_crew_memory_distribution",
      "create_test_memory_for_crew",
      "test_memory_consistency",
      "_generate_overall_assessment",
      "test_supabase_connection",
      "print_assessment_report"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "time",
      "Dict",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_alex_ai_memory_sharing_assessment.py",
      "Monitor: ./consolidated_alex_ai_memory_sharing_assessment.py --interval 30",
      "Test: ./consolidated_alex_ai_memory_sharing_assessment.py --verbose",
      "API: ./consolidated_alex_ai_memory_sharing_assessment.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.326011",
    "content_summary": "\"\"\" Consolidated Script: alex_ai_memory_sharing_assessment ================================ This script consolidates the following similar scripts: - ./alex_ai_memory_sharing_assessment.py",
    "embedding_text": "consolidated_alex_ai_memory_sharing_assessment.py data_processing monitoring testing database_operations file_operations security api_integration run_comprehensive_assessment __init__ verify_memory_sharing get_all_crew_memories main analyze_crew_memory_distribution create_test_memory_for_crew test_memory_consistency _generate_overall_assessment test_supabase_connection print_assessment_report \"\"\" Consolidated Script: alex_ai_memory_sharing_assessment ================================ This script consolidates the following similar scripts: - ./alex_ai_memory_sharing_assessment.py",
    "created_at": "2025-09-08T22:56:32.801240"
  },
  {
    "script_id": "script_924b3f81_b58cce3f",
    "file_path": "scripts/consolidated/consolidated_robust-test.py",
    "file_name": "consolidated_robust-test.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "api_integration"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 10,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized",
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_robust-test.py",
      "Deploy: ./consolidated_robust-test.py --env production",
      "Monitor: ./consolidated_robust-test.py --interval 30",
      "Test: ./consolidated_robust-test.py --verbose",
      "API: ./consolidated_robust-test.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.437900",
    "content_summary": "\"\"\" Consolidated Script: robust-test ================================ This script consolidates the following similar scripts: - ./scripts/deployment/unit_testing/consolidated_unit_testing.py",
    "embedding_text": "consolidated_robust-test.py monitoring testing deployment file_operations api_integration  \"\"\" Consolidated Script: robust-test ================================ This script consolidates the following similar scripts: - ./scripts/deployment/unit_testing/consolidated_unit_testing.py",
    "created_at": "2025-09-08T22:56:32.801241"
  },
  {
    "script_id": "script_445c92e5_af11b092",
    "file_path": "scripts/consolidated/consolidated_get-and-update-claude-key.py",
    "file_name": "consolidated_get-and-update-claude-key.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_get-and-update-claude-key.py",
      "Deploy: ./consolidated_get-and-update-claude-key.py --env production",
      "Monitor: ./consolidated_get-and-update-claude-key.py --interval 30",
      "Test: ./consolidated_get-and-update-claude-key.py --verbose",
      "API: ./consolidated_get-and-update-claude-key.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.438219",
    "content_summary": "\"\"\" Consolidated Script: get-and-update-claude-key ================================ This script consolidates the following similar scripts: - ./scripts/deployment/general/consolidated_general.py",
    "embedding_text": "consolidated_get-and-update-claude-key.py monitoring testing deployment database_operations file_operations security api_integration synchronization  \"\"\" Consolidated Script: get-and-update-claude-key ================================ This script consolidates the following similar scripts: - ./scripts/deployment/general/consolidated_general.py",
    "created_at": "2025-09-08T22:56:32.801242"
  },
  {
    "script_id": "script_dd3601ae_f4e5f59b",
    "file_path": "scripts/consolidated/consolidated_cursor-ai-shell-helper.py",
    "file_name": "consolidated_cursor-ai-shell-helper.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "file_operations",
      "security"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 5,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_cursor-ai-shell-helper.py",
      "Monitor: ./consolidated_cursor-ai-shell-helper.py --interval 30",
      "Test: ./consolidated_cursor-ai-shell-helper.py --verbose"
    ],
    "last_modified": "2025-09-06T20:43:44.327058",
    "content_summary": "\"\"\" Consolidated Script: cursor-ai-shell-helper ================================ This script consolidates the following similar scripts: - ./cursor-extension-milestone-package/cursor-ai-shell-helper.s...",
    "embedding_text": "consolidated_cursor-ai-shell-helper.py data_processing monitoring testing file_operations security  \"\"\" Consolidated Script: cursor-ai-shell-helper ================================ This script consolidates the following similar scripts: - ./cursor-extension-milestone-package/cursor-ai-shell-helper.s...",
    "created_at": "2025-09-08T22:56:32.801243"
  },
  {
    "script_id": "script_a15009e6_75b3af04",
    "file_path": "scripts/consolidated/consolidated_greg-community-intelligence-dual-milestone-push.py",
    "file_name": "consolidated_greg-community-intelligence-dual-milestone-push.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "Version Control",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "security",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_greg-community-intelligence-dual-milestone-push.py",
      "Monitor: ./consolidated_greg-community-intelligence-dual-milestone-push.py --interval 30",
      "Test: ./consolidated_greg-community-intelligence-dual-milestone-push.py --verbose"
    ],
    "last_modified": "2025-09-06T20:43:44.327527",
    "content_summary": "\"\"\" Consolidated Script: greg-community-intelligence-dual-milestone-push ================================ This script consolidates the following similar scripts: - ./greg-community-intelligence-dual-m...",
    "embedding_text": "consolidated_greg-community-intelligence-dual-milestone-push.py data_processing monitoring testing database_operations file_operations security synchronization  \"\"\" Consolidated Script: greg-community-intelligence-dual-milestone-push ================================ This script consolidates the following similar scripts: - ./greg-community-intelligence-dual-m...",
    "created_at": "2025-09-08T22:56:32.801245"
  },
  {
    "script_id": "script_ebfda1c4_d691db0b",
    "file_path": "scripts/consolidated/consolidated_mcp_memory_optimization_system.py",
    "file_name": "consolidated_mcp_memory_optimization_system.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "save_optimized_memories_to_supabase",
      "generate_embedding",
      "consolidate_similar_memories",
      "find_similar_memories",
      "__init__",
      "_consolidate_content",
      "create_memory_clusters",
      "optimize_memory_storage",
      "main",
      "generate_optimization_report",
      "calculate_importance_score",
      "_hash_based_embedding",
      "load_memories_from_supabase",
      "cosine_similarity",
      "_create_content_summary"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "typing",
      "datetime",
      "hashlib",
      "logging",
      "numpy",
      "Dict",
      "dataclass",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_mcp_memory_optimization_system.py",
      "Deploy: ./consolidated_mcp_memory_optimization_system.py --env production",
      "Test: ./consolidated_mcp_memory_optimization_system.py --verbose"
    ],
    "last_modified": "2025-09-06T20:43:44.327795",
    "content_summary": "\"\"\" Consolidated Script: mcp_memory_optimization_system ================================ This script consolidates the following similar scripts: - ./mcp_memory_optimization_system.py",
    "embedding_text": "consolidated_mcp_memory_optimization_system.py data_processing testing automation deployment database_operations file_operations synchronization save_optimized_memories_to_supabase generate_embedding consolidate_similar_memories find_similar_memories __init__ _consolidate_content create_memory_clusters optimize_memory_storage main generate_optimization_report calculate_importance_score _hash_based_embedding load_memories_from_supabase cosine_similarity _create_content_summary \"\"\" Consolidated Script: mcp_memory_optimization_system ================================ This script consolidates the following similar scripts: - ./mcp_memory_optimization_system.py",
    "created_at": "2025-09-08T22:56:32.801246"
  },
  {
    "script_id": "script_2e8ba34c_ecbaa035",
    "file_path": "scripts/consolidated/consolidated_observation_lounge_memory_consensus.py",
    "file_name": "consolidated_observation_lounge_memory_consensus.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "run_observation_lounge_session",
      "__init__",
      "get_crew_memories",
      "generate_consensus",
      "main",
      "print_observation_lounge_report",
      "simulate_crew_member_reflection",
      "get_system_wide_memories"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_observation_lounge_memory_consensus.py",
      "Monitor: ./consolidated_observation_lounge_memory_consensus.py --interval 30",
      "API: ./consolidated_observation_lounge_memory_consensus.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.328377",
    "content_summary": "\"\"\" Consolidated Script: observation_lounge_memory_consensus ================================ This script consolidates the following similar scripts: - ./observation_lounge_memory_consensus.py",
    "embedding_text": "consolidated_observation_lounge_memory_consensus.py data_processing monitoring file_operations security api_integration run_observation_lounge_session __init__ get_crew_memories generate_consensus main print_observation_lounge_report simulate_crew_member_reflection get_system_wide_memories \"\"\" Consolidated Script: observation_lounge_memory_consensus ================================ This script consolidates the following similar scripts: - ./observation_lounge_memory_consensus.py",
    "created_at": "2025-09-08T22:56:32.801247"
  },
  {
    "script_id": "script_4ab33ebe_809f8e34",
    "file_path": "scripts/consolidated/consolidated_milestone-push-system.py",
    "file_name": "consolidated_milestone-push-system.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "Version Control",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 8,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized",
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_milestone-push-system.py",
      "Deploy: ./consolidated_milestone-push-system.py --env production",
      "Monitor: ./consolidated_milestone-push-system.py --interval 30",
      "Test: ./consolidated_milestone-push-system.py --verbose",
      "API: ./consolidated_milestone-push-system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:04:27.439435",
    "content_summary": "\"\"\" Consolidated Script: milestone-push-system ================================ This script consolidates the following similar scripts: - ./scripts/deployment/milestone_management/consolidated_milesto...",
    "embedding_text": "consolidated_milestone-push-system.py data_processing monitoring testing automation deployment database_operations file_operations api_integration synchronization  \"\"\" Consolidated Script: milestone-push-system ================================ This script consolidates the following similar scripts: - ./scripts/deployment/milestone_management/consolidated_milesto...",
    "created_at": "2025-09-08T22:56:32.801249"
  },
  {
    "script_id": "script_9cbd65b9_6e656bd6",
    "file_path": "scripts/consolidated/consolidated_crew_personal_history_analysis.py",
    "file_name": "consolidated_crew_personal_history_analysis.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "analyze_crew_member_history",
      "__init__",
      "get_crew_memories",
      "_generate_overall_summary",
      "main",
      "run_comprehensive_crew_analysis",
      "print_crew_analysis_report",
      "_generate_personal_assessment"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension"
    ],
    "usage_examples": [
      "Execute: ./consolidated_crew_personal_history_analysis.py",
      "Monitor: ./consolidated_crew_personal_history_analysis.py --interval 30",
      "API: ./consolidated_crew_personal_history_analysis.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.328942",
    "content_summary": "\"\"\" Consolidated Script: crew_personal_history_analysis ================================ This script consolidates the following similar scripts: - ./crew_personal_history_analysis.py",
    "embedding_text": "consolidated_crew_personal_history_analysis.py data_processing monitoring database_operations file_operations security api_integration synchronization analyze_crew_member_history __init__ get_crew_memories _generate_overall_summary main run_comprehensive_crew_analysis print_crew_analysis_report _generate_personal_assessment \"\"\" Consolidated Script: crew_personal_history_analysis ================================ This script consolidates the following similar scripts: - ./crew_personal_history_analysis.py",
    "created_at": "2025-09-08T22:56:32.801250"
  },
  {
    "script_id": "script_7e1ec26e_d50b4592",
    "file_path": "scripts/consolidated/consolidated_greg_channel_intelligence_analysis.py",
    "file_name": "consolidated_greg_channel_intelligence_analysis.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "generate_crew_workflow_integrations",
      "generate_global_alexai_intelligence",
      "main",
      "analyze_greg_channel"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "sys",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./consolidated_greg_channel_intelligence_analysis.py",
      "Monitor: ./consolidated_greg_channel_intelligence_analysis.py --interval 30",
      "Test: ./consolidated_greg_channel_intelligence_analysis.py --verbose",
      "API: ./consolidated_greg_channel_intelligence_analysis.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.329834",
    "content_summary": "\"\"\" Consolidated Script: greg_channel_intelligence_analysis ================================ This script consolidates the following similar scripts: - ./greg_channel_intelligence_analysis.py",
    "embedding_text": "consolidated_greg_channel_intelligence_analysis.py data_processing monitoring testing automation database_operations file_operations security api_integration synchronization generate_crew_workflow_integrations generate_global_alexai_intelligence main analyze_greg_channel \"\"\" Consolidated Script: greg_channel_intelligence_analysis ================================ This script consolidates the following similar scripts: - ./greg_channel_intelligence_analysis.py",
    "created_at": "2025-09-08T22:56:32.801251"
  },
  {
    "script_id": "script_50edf55a_44bb4bf6",
    "file_path": "scripts/consolidated/consolidated_load_alex_ai_credentials.py",
    "file_name": "consolidated_load_alex_ai_credentials.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 7,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_load_alex_ai_credentials.py",
      "Test: ./consolidated_load_alex_ai_credentials.py --verbose",
      "API: ./consolidated_load_alex_ai_credentials.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-06T20:43:44.330005",
    "content_summary": "\"\"\" Consolidated Script: load_alex_ai_credentials ================================ This script consolidates the following similar scripts: - ./load_alex_ai_credentials.sh",
    "embedding_text": "consolidated_load_alex_ai_credentials.py testing file_operations security api_integration  \"\"\" Consolidated Script: load_alex_ai_credentials ================================ This script consolidates the following similar scripts: - ./load_alex_ai_credentials.sh",
    "created_at": "2025-09-08T22:56:32.801253"
  },
  {
    "script_id": "script_e6e06140_0922a1b9",
    "file_path": "scripts/consolidated/consolidated_alex_ai_comprehensive_assessment.py",
    "file_name": "consolidated_alex_ai_comprehensive_assessment.py",
    "file_type": "py",
    "category": "consolidated",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "file_operations",
      "data_processing",
      "monitoring"
    ],
    "functions": [
      "run_comprehensive_assessment",
      "_generate_recommendations",
      "__init__",
      "_assess_overall_health",
      "main",
      "print_comprehensive_report",
      "_generate_next_steps"
    ],
    "dependencies": [
      "json",
      "typing",
      "CrewPersonalHistoryAnalysis",
      "datetime",
      "Dict",
      "AlexAIMemorySharingAssessment",
      "alex_ai_memory_sharing_assessment",
      "crew_personal_history_analysis",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_alex_ai_comprehensive_assessment.py",
      "Monitor: ./consolidated_alex_ai_comprehensive_assessment.py --interval 30",
      "Test: ./consolidated_alex_ai_comprehensive_assessment.py --verbose"
    ],
    "last_modified": "2025-09-06T20:43:44.330297",
    "content_summary": "\"\"\" Consolidated Script: alex_ai_comprehensive_assessment ================================ This script consolidates the following similar scripts: - ./alex_ai_comprehensive_assessment.py",
    "embedding_text": "consolidated_alex_ai_comprehensive_assessment.py testing file_operations data_processing monitoring run_comprehensive_assessment _generate_recommendations __init__ _assess_overall_health main print_comprehensive_report _generate_next_steps \"\"\" Consolidated Script: alex_ai_comprehensive_assessment ================================ This script consolidates the following similar scripts: - ./alex_ai_comprehensive_assessment.py",
    "created_at": "2025-09-08T22:56:32.801254"
  },
  {
    "script_id": "script_592cf8da_a63e803a",
    "file_path": "scripts/python/youtube_scraper_crew_integration.py",
    "file_name": "youtube_scraper_crew_integration.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "batch_analyze_videos",
      "_get_existing_analysis",
      "request_youtube_analysis",
      "_generate_request_id",
      "_extract_video_id",
      "_is_already_processed",
      "list_crew_members",
      "get_crew_analysis_history",
      "_is_valid_youtube_url"
    ],
    "dependencies": [
      "json",
      "re",
      "typing",
      "datetime",
      "hashlib",
      "Dict",
      "sys",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./youtube_scraper_crew_integration.py",
      "Monitor: ./youtube_scraper_crew_integration.py --interval 30",
      "Test: ./youtube_scraper_crew_integration.py --verbose",
      "API: ./youtube_scraper_crew_integration.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.171508",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" YouTube Scraper Crew Integration Enables universal crew access to YouTube video analysis capabilities \"\"\"",
    "embedding_text": "youtube_scraper_crew_integration.py data_processing monitoring testing database_operations file_operations security api_integration batch_analyze_videos _get_existing_analysis request_youtube_analysis _generate_request_id _extract_video_id _is_already_processed list_crew_members get_crew_analysis_history _is_valid_youtube_url from scripts.utilities.shared_functions import * \"\"\" YouTube Scraper Crew Integration Enables universal crew access to YouTube video analysis capabilities \"\"\"",
    "created_at": "2025-09-08T22:56:32.801255"
  },
  {
    "script_id": "script_011e2b25_9e4b4ada",
    "file_path": "scripts/python/final_monorepo_cleanup.py",
    "file_name": "final_monorepo_cleanup.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "Maintenance",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "move_files_to_organized_structure",
      "categorize_main_folder_files",
      "safe_remove_file",
      "generate_cleanup_report",
      "run_final_cleanup",
      "identify_excess_files",
      "identify_sub_projects",
      "log",
      "organize_remaining_files",
      "create_backup"
    ],
    "dependencies": [
      "json",
      "shutil",
      "re",
      "typing",
      "datetime",
      "Dict",
      "sys",
      "Path",
      "pathlib",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./final_monorepo_cleanup.py",
      "Deploy: ./final_monorepo_cleanup.py --env production",
      "Monitor: ./final_monorepo_cleanup.py --interval 30",
      "Test: ./final_monorepo_cleanup.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.171655",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Final Monorepo Cleanup System ============================ Comprehensive cleanup to remove excess scripts from main folder and",
    "embedding_text": "final_monorepo_cleanup.py data_processing monitoring testing deployment database_operations file_operations synchronization move_files_to_organized_structure categorize_main_folder_files safe_remove_file generate_cleanup_report run_final_cleanup identify_excess_files identify_sub_projects log organize_remaining_files create_backup from scripts.utilities.shared_functions import * \"\"\" Final Monorepo Cleanup System ============================ Comprehensive cleanup to remove excess scripts from main folder and",
    "created_at": "2025-09-08T22:56:32.801256"
  },
  {
    "script_id": "script_5c1b3752_c123f03a",
    "file_path": "scripts/python/turborepo_implementation_plan.py",
    "file_name": "turborepo_implementation_plan.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "_analyze_current_structure",
      "generate_implementation_plan",
      "_define_implementation_phases",
      "save_implementation_data",
      "_create_turborepo_config"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "typing",
      "datetime",
      "logging",
      "Dict",
      "dataclass"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./turborepo_implementation_plan.py",
      "Deploy: ./turborepo_implementation_plan.py --env production",
      "Monitor: ./turborepo_implementation_plan.py --interval 30",
      "Test: ./turborepo_implementation_plan.py --verbose",
      "API: ./turborepo_implementation_plan.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.171798",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Turborepo Implementation Plan for Alex AI Monorepo ================================================ This system creates a detailed implementation p...",
    "embedding_text": "turborepo_implementation_plan.py data_processing monitoring testing automation deployment database_operations file_operations api_integration synchronization _analyze_current_structure generate_implementation_plan _define_implementation_phases save_implementation_data _create_turborepo_config from scripts.utilities.shared_functions import * \"\"\" Turborepo Implementation Plan for Alex AI Monorepo ================================================ This system creates a detailed implementation p...",
    "created_at": "2025-09-08T22:56:32.801258"
  },
  {
    "script_id": "script_21673c67_f5f7a76a",
    "file_path": "scripts/python/alex_ai_yolo_mode_integration_system.py",
    "file_name": "alex_ai_yolo_mode_integration_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "create_integration_report",
      "run_comprehensive_integration",
      "create_comprehensive_integration",
      "analyze_prompt_comprehensive",
      "save_integration_system"
    ],
    "dependencies": [
      "json",
      "re",
      "typing",
      "datetime",
      "logging",
      "Dict",
      "Path",
      "pathlib",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./alex_ai_yolo_mode_integration_system.py",
      "Deploy: ./alex_ai_yolo_mode_integration_system.py --env production",
      "Monitor: ./alex_ai_yolo_mode_integration_system.py --interval 30",
      "Test: ./alex_ai_yolo_mode_integration_system.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.171968",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Alex AI YOLO Mode Integration System =================================== Comprehensive integration system that brings together YOLO Mode understand...",
    "embedding_text": "alex_ai_yolo_mode_integration_system.py data_processing monitoring testing automation deployment database_operations file_operations synchronization create_integration_report run_comprehensive_integration create_comprehensive_integration analyze_prompt_comprehensive save_integration_system from scripts.utilities.shared_functions import * \"\"\" Alex AI YOLO Mode Integration System =================================== Comprehensive integration system that brings together YOLO Mode understand...",
    "created_at": "2025-09-08T22:56:32.801259"
  },
  {
    "script_id": "script_e08766a5_275b526e",
    "file_path": "scripts/python/comprehensive_market_research_system.py",
    "file_name": "comprehensive_market_research_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "automation",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "generate_market_research_report",
      "generate_research_queries",
      "analyze_cannabis_market",
      "simulate_web_research"
    ],
    "dependencies": [
      "json",
      "typing",
      "random",
      "datetime",
      "Dict",
      "time",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./comprehensive_market_research_system.py",
      "API: ./comprehensive_market_research_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.172093",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Comprehensive Market Research System - Multi-Industry Analysis Target markets: Restaurants, Bars, Advertising, Marketing, Music Bands, Authors, Fin...",
    "embedding_text": "comprehensive_market_research_system.py data_processing automation database_operations file_operations security api_integration synchronization generate_market_research_report generate_research_queries analyze_cannabis_market simulate_web_research from scripts.utilities.shared_functions import * \"\"\" Comprehensive Market Research System - Multi-Industry Analysis Target markets: Restaurants, Bars, Advertising, Marketing, Music Bands, Authors, Fin...",
    "created_at": "2025-09-08T22:56:32.801260"
  },
  {
    "script_id": "script_a082c9d1_76500485",
    "file_path": "scripts/python/phase2_turborepo_optimization.py",
    "file_name": "phase2_turborepo_optimization.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "execute_phase2",
      "configure_build_outputs",
      "configure_local_caching",
      "log_step",
      "run_command",
      "setup_performance_monitoring",
      "implement_incremental_builds",
      "optimize_cicd_integration",
      "test_optimizations",
      "setup_remote_caching",
      "generate_phase2_report",
      "optimize_task_dependencies"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "logging",
      "Path",
      "Dict",
      "subprocess",
      "pathlib",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./phase2_turborepo_optimization.py",
      "Deploy: ./phase2_turborepo_optimization.py --env production",
      "Monitor: ./phase2_turborepo_optimization.py --interval 30",
      "Test: ./phase2_turborepo_optimization.py --verbose",
      "API: ./phase2_turborepo_optimization.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.172286",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Phase 2: Turborepo Optimization & Caching ========================================= This system executes Phase 2 of the Turborepo implementation pl...",
    "embedding_text": "phase2_turborepo_optimization.py data_processing monitoring testing automation deployment database_operations file_operations api_integration synchronization execute_phase2 configure_build_outputs configure_local_caching log_step run_command setup_performance_monitoring implement_incremental_builds optimize_cicd_integration test_optimizations setup_remote_caching generate_phase2_report optimize_task_dependencies from scripts.utilities.shared_functions import * \"\"\" Phase 2: Turborepo Optimization & Caching ========================================= This system executes Phase 2 of the Turborepo implementation pl...",
    "created_at": "2025-09-08T22:56:32.801261"
  },
  {
    "script_id": "script_c1bd8921_e242b43a",
    "file_path": "scripts/python/crew_coordination_update_system.py",
    "file_name": "crew_coordination_update_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "simulate_crew_coordination_update"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "sys"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Single-purpose script - could be extended with additional functions"
    ],
    "usage_examples": [
      "Execute: ./crew_coordination_update_system.py",
      "Monitor: ./crew_coordination_update_system.py --interval 30",
      "Test: ./crew_coordination_update_system.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.172410",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Crew Coordination Update System Simulates how crew members integrate new workflows and maintain system unification \"\"\"",
    "embedding_text": "crew_coordination_update_system.py data_processing monitoring testing automation database_operations file_operations synchronization simulate_crew_coordination_update from scripts.utilities.shared_functions import * \"\"\" Crew Coordination Update System Simulates how crew members integrate new workflows and maintain system unification \"\"\"",
    "created_at": "2025-09-08T22:56:32.801263"
  },
  {
    "script_id": "script_7172a4c9_94abb275",
    "file_path": "scripts/python/youtube_crew_memory_integration.py",
    "file_name": "youtube_crew_memory_integration.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration"
    ],
    "functions": [
      "run_demo_analysis",
      "_parse_text_insights",
      "_extract_crew_memories",
      "run_youtube_analysis",
      "_locate_youtube_scripts",
      "_create_memory",
      "generate_memory_report",
      "_parse_analysis_output"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "logging",
      "Path",
      "Dict",
      "sys",
      "subprocess",
      "pathlib"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./youtube_crew_memory_integration.py",
      "Deploy: ./youtube_crew_memory_integration.py --env production",
      "Monitor: ./youtube_crew_memory_integration.py --interval 30",
      "Test: ./youtube_crew_memory_integration.py --verbose",
      "API: ./youtube_crew_memory_integration.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.172589",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" YouTube Crew Memory Integration System ==================================== This system integrates YouTube scraping capabilities with our crew memo...",
    "embedding_text": "youtube_crew_memory_integration.py data_processing monitoring testing deployment database_operations file_operations api_integration run_demo_analysis _parse_text_insights _extract_crew_memories run_youtube_analysis _locate_youtube_scripts _create_memory generate_memory_report _parse_analysis_output from scripts.utilities.shared_functions import * \"\"\" YouTube Crew Memory Integration System ==================================== This system integrates YouTube scraping capabilities with our crew memo...",
    "created_at": "2025-09-08T22:56:32.801264"
  },
  {
    "script_id": "script_b7924433_9d855550",
    "file_path": "scripts/python/enhanced_ai_prompts_system.py",
    "file_name": "enhanced_ai_prompts_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "_get_business_validation_prompt",
      "_get_n8n_workflow_prompt",
      "setup_market_monitoring",
      "_get_claude_analysis_prompt",
      "market_research_workflow",
      "_get_supabase_integration_prompt",
      "analyze_with_claude",
      "_get_market_research_prompt",
      "validate_business_model",
      "setup_validation_schedule",
      "generate_enhanced_prompt",
      "_get_system_integration_prompt",
      "create_integration_guide",
      "integrated_workflow",
      "trigger_n8n_workflow"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "create_client",
      "supabase",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./enhanced_ai_prompts_system.py",
      "Deploy: ./enhanced_ai_prompts_system.py --env production",
      "Monitor: ./enhanced_ai_prompts_system.py --interval 30",
      "Test: ./enhanced_ai_prompts_system.py --verbose",
      "API: ./enhanced_ai_prompts_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.172751",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Enhanced AI Prompts System - Learn from Live Supabase & N8N Integration Incorporates proven practices from live system configuration \"\"\"",
    "embedding_text": "enhanced_ai_prompts_system.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization _get_business_validation_prompt _get_n8n_workflow_prompt setup_market_monitoring _get_claude_analysis_prompt market_research_workflow _get_supabase_integration_prompt analyze_with_claude _get_market_research_prompt validate_business_model setup_validation_schedule generate_enhanced_prompt _get_system_integration_prompt create_integration_guide integrated_workflow trigger_n8n_workflow from scripts.utilities.shared_functions import * \"\"\" Enhanced AI Prompts System - Learn from Live Supabase & N8N Integration Incorporates proven practices from live system configuration \"\"\"",
    "created_at": "2025-09-08T22:56:32.801265"
  },
  {
    "script_id": "script_aff19bd0_7c7a0b61",
    "file_path": "scripts/python/alex_ai_credential_manager.py",
    "file_name": "alex_ai_credential_manager.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "create_crew_memory",
      "decrypt_credentials",
      "setup_environment_variables",
      "encrypt_credentials",
      "generate_credential_report",
      "load_credentials_securely",
      "run_comprehensive_setup",
      "validate_credentials",
      "load_from_environment",
      "create_secure_directory",
      "load_from_zshrc",
      "test_credential_access",
      "save_credentials_securely"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "hashlib",
      "Path",
      "Dict",
      "subprocess",
      "pathlib",
      "os",
      "requests",
      "base64"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./alex_ai_credential_manager.py",
      "Deploy: ./alex_ai_credential_manager.py --env production",
      "Monitor: ./alex_ai_credential_manager.py --interval 30",
      "Test: ./alex_ai_credential_manager.py --verbose",
      "API: ./alex_ai_credential_manager.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.172926",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Alex AI Universal Credential Manager Comprehensive credential management system for all Alex AI superagents Addresses security concerns identified ...",
    "embedding_text": "alex_ai_credential_manager.py data_processing monitoring testing deployment file_operations security api_integration synchronization create_crew_memory decrypt_credentials setup_environment_variables encrypt_credentials generate_credential_report load_credentials_securely run_comprehensive_setup validate_credentials load_from_environment create_secure_directory load_from_zshrc test_credential_access save_credentials_securely from scripts.utilities.shared_functions import * \"\"\" Alex AI Universal Credential Manager Comprehensive credential management system for all Alex AI superagents Addresses security concerns identified ...",
    "created_at": "2025-09-08T22:56:32.801267"
  },
  {
    "script_id": "script_dc10906c_9d7777b7",
    "file_path": "scripts/python/alex_ai_yolo_initialization.py",
    "file_name": "alex_ai_yolo_initialization.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "_store_yolo_initialization_memory",
      "generate_initialization_report",
      "initialize_yolo_mode",
      "run_complete_initialization",
      "create_yolo_initialization_script",
      "update_alex_ai_system_config",
      "create_yolo_prompt_template"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "logging",
      "Path",
      "Dict",
      "sys",
      "subprocess",
      "pathlib"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension"
    ],
    "usage_examples": [
      "Execute: ./alex_ai_yolo_initialization.py",
      "Deploy: ./alex_ai_yolo_initialization.py --env production",
      "Monitor: ./alex_ai_yolo_initialization.py --interval 30",
      "Test: ./alex_ai_yolo_initialization.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.173266",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Alex AI YOLO Mode Initialization System ======================================= This system automatically enables YOLO Mode when Alex AI is initial...",
    "embedding_text": "alex_ai_yolo_initialization.py data_processing monitoring testing deployment database_operations file_operations synchronization _store_yolo_initialization_memory generate_initialization_report initialize_yolo_mode run_complete_initialization create_yolo_initialization_script update_alex_ai_system_config create_yolo_prompt_template from scripts.utilities.shared_functions import * \"\"\" Alex AI YOLO Mode Initialization System ======================================= This system automatically enables YOLO Mode when Alex AI is initial...",
    "created_at": "2025-09-08T22:56:32.801268"
  },
  {
    "script_id": "script_4bc84a7c_1a413914",
    "file_path": "scripts/python/alex_ai_memory_sharing_assessment.py",
    "file_name": "alex_ai_memory_sharing_assessment.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "run_comprehensive_assessment",
      "verify_memory_sharing",
      "get_all_crew_memories",
      "analyze_crew_memory_distribution",
      "create_test_memory_for_crew",
      "test_memory_consistency",
      "_generate_overall_assessment",
      "test_supabase_connection",
      "print_assessment_report"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "time",
      "Dict",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./alex_ai_memory_sharing_assessment.py",
      "Monitor: ./alex_ai_memory_sharing_assessment.py --interval 30",
      "Test: ./alex_ai_memory_sharing_assessment.py --verbose",
      "API: ./alex_ai_memory_sharing_assessment.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.173462",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Alex AI Memory Sharing Assessment System Tests Supabase memory sharing between all crew members \"\"\"",
    "embedding_text": "alex_ai_memory_sharing_assessment.py data_processing monitoring testing database_operations file_operations security api_integration run_comprehensive_assessment verify_memory_sharing get_all_crew_memories analyze_crew_memory_distribution create_test_memory_for_crew test_memory_consistency _generate_overall_assessment test_supabase_connection print_assessment_report from scripts.utilities.shared_functions import * \"\"\" Alex AI Memory Sharing Assessment System Tests Supabase memory sharing between all crew members \"\"\"",
    "created_at": "2025-09-08T22:56:32.801269"
  },
  {
    "script_id": "script_7b8e7611_da718089",
    "file_path": "scripts/python/alex_ai_crew_mermaid_models.py",
    "file_name": "alex_ai_crew_mermaid_models.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "api_integration",
      "file_operations",
      "data_processing",
      "security"
    ],
    "functions": [
      "_technical_lead_analysis",
      "_generate_consensus_recommendations",
      "_analyze_reporting_structure",
      "_get_environmental_alignment",
      "_identify_sustainability_contacts",
      "run_comprehensive_analysis",
      "_ai_strategy_analysis",
      "_consolidate_application_strategy",
      "_generate_standard_mermaid",
      "_assess_org_complexity",
      "_identify_decision_makers",
      "_identify_ai_strategy_contacts",
      "_identify_client_success_contacts",
      "_org_structure_analysis",
      "_sustainability_analysis",
      "_client_success_analysis",
      "_determine_mermaid_focus",
      "_calculate_priority_score",
      "_consolidate_key_contacts",
      "_generate_medium_priority_mermaid",
      "_get_relationship_strategy",
      "_get_alex_ai_leverage_points",
      "generate_comprehensive_mermaid_model",
      "analyze_company_structure",
      "_identify_technical_contacts",
      "_get_technical_approach",
      "_generate_high_priority_mermaid"
    ],
    "dependencies": [
      "json",
      "re",
      "typing",
      "datetime",
      "Dict"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./alex_ai_crew_mermaid_models.py",
      "API: ./alex_ai_crew_mermaid_models.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.173632",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Alex AI Crew Mermaid Models Generator Deep learning analysis to create organizational Mermaid models for target companies \"\"\"",
    "embedding_text": "alex_ai_crew_mermaid_models.py api_integration file_operations data_processing security _technical_lead_analysis _generate_consensus_recommendations _analyze_reporting_structure _get_environmental_alignment _identify_sustainability_contacts run_comprehensive_analysis _ai_strategy_analysis _consolidate_application_strategy _generate_standard_mermaid _assess_org_complexity _identify_decision_makers _identify_ai_strategy_contacts _identify_client_success_contacts _org_structure_analysis _sustainability_analysis _client_success_analysis _determine_mermaid_focus _calculate_priority_score _consolidate_key_contacts _generate_medium_priority_mermaid _get_relationship_strategy _get_alex_ai_leverage_points generate_comprehensive_mermaid_model analyze_company_structure _identify_technical_contacts _get_technical_approach _generate_high_priority_mermaid from scripts.utilities.shared_functions import * \"\"\" Alex AI Crew Mermaid Models Generator Deep learning analysis to create organizational Mermaid models for target companies \"\"\"",
    "created_at": "2025-09-08T22:56:32.801270"
  },
  {
    "script_id": "script_469b5acf_70410c4d",
    "file_path": "scripts/python/enhanced_ai_prompts_with_supabase_integration.py",
    "file_name": "enhanced_ai_prompts_with_supabase_integration.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "__init__",
      "build_dynamic_prompt",
      "main",
      "create_validation_workflow",
      "setup_progress_tracking",
      "analyze_revenue_projections",
      "generate_system_integration_prompt",
      "load_supabase_config",
      "batch_insert_research_data",
      "orchestrate_claude_agents",
      "generate_integration_prompt",
      "extract_live_config_patterns",
      "generate_enhanced_prompt",
      "create_system_integration_guide",
      "safe_supabase_query",
      "get_market_research_by_market",
      "create_market_research_workflow",
      "subscribe_to_market_updates",
      "sync_data_to_n8n",
      "create_claude_agent",
      "generate_n8n_workflow_prompt",
      "trigger_n8n_workflow",
      "create_sprint_workflow",
      "generate_supabase_code_prompt",
      "generate_best_practice_prompt",
      "generate_system_aware_code",
      "setup_market_monitoring",
      "insert_market_research",
      "analyze_with_claude_and_store"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "create_client",
      "supabase",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./enhanced_ai_prompts_with_supabase_integration.py",
      "Deploy: ./enhanced_ai_prompts_with_supabase_integration.py --env production",
      "Monitor: ./enhanced_ai_prompts_with_supabase_integration.py --interval 30",
      "Test: ./enhanced_ai_prompts_with_supabase_integration.py --verbose",
      "API: ./enhanced_ai_prompts_with_supabase_integration.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.173987",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Enhanced AI Prompts with Supabase Integration - Learn from Live System Incorporates proven practices from live Supabase client and n8n integration ...",
    "embedding_text": "enhanced_ai_prompts_with_supabase_integration.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization __init__ build_dynamic_prompt main create_validation_workflow setup_progress_tracking analyze_revenue_projections generate_system_integration_prompt load_supabase_config batch_insert_research_data orchestrate_claude_agents generate_integration_prompt extract_live_config_patterns generate_enhanced_prompt create_system_integration_guide safe_supabase_query get_market_research_by_market create_market_research_workflow subscribe_to_market_updates sync_data_to_n8n create_claude_agent generate_n8n_workflow_prompt trigger_n8n_workflow create_sprint_workflow generate_supabase_code_prompt generate_best_practice_prompt generate_system_aware_code setup_market_monitoring insert_market_research analyze_with_claude_and_store from scripts.utilities.shared_functions import * \"\"\" Enhanced AI Prompts with Supabase Integration - Learn from Live System Incorporates proven practices from live Supabase client and n8n integration ...",
    "created_at": "2025-09-08T22:56:32.801272"
  },
  {
    "script_id": "script_6f267d5b_970d1a81",
    "file_path": "scripts/python/alex_ai_webhook_server.py",
    "file_name": "alex_ai_webhook_server.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "resume_analysis",
      "cover_letter_generation",
      "job_matching",
      "job_tracking",
      "resume_tailoring",
      "health_check"
    ],
    "dependencies": [
      "json",
      "Flask",
      "flask",
      "alex_ai_job_search_system",
      "datetime",
      "CORS",
      "flask_cors",
      "AlexAIJobSearchSystem",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./alex_ai_webhook_server.py",
      "Monitor: ./alex_ai_webhook_server.py --interval 30",
      "Test: ./alex_ai_webhook_server.py --verbose",
      "API: ./alex_ai_webhook_server.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.174169",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Alex AI Webhook Server Local webhook server to handle Alex AI job search requests \"\"\"",
    "embedding_text": "alex_ai_webhook_server.py data_processing monitoring testing database_operations file_operations api_integration synchronization resume_analysis cover_letter_generation job_matching job_tracking resume_tailoring health_check from scripts.utilities.shared_functions import * \"\"\" Alex AI Webhook Server Local webhook server to handle Alex AI job search requests \"\"\"",
    "created_at": "2025-09-08T22:56:32.801274"
  },
  {
    "script_id": "script_bc12e911_1d94c6d5",
    "file_path": "scripts/python/supabase_research_integration_system.py",
    "file_name": "supabase_research_integration_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "__init__",
      "main",
      "generate_insert_statements",
      "generate_sample_data",
      "generate_supabase_schema_sql",
      "generate_complete_supabase_setup"
    ],
    "dependencies": [
      "json",
      "typing",
      "random",
      "datetime",
      "Dict"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./supabase_research_integration_system.py",
      "Deploy: ./supabase_research_integration_system.py --env production",
      "Monitor: ./supabase_research_integration_system.py --interval 30",
      "Test: ./supabase_research_integration_system.py --verbose",
      "API: ./supabase_research_integration_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.174437",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Supabase Research Integration System - Data Storage & Management Store all research findings, business models, and execution plans in Supabase for ...",
    "embedding_text": "supabase_research_integration_system.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization __init__ main generate_insert_statements generate_sample_data generate_supabase_schema_sql generate_complete_supabase_setup from scripts.utilities.shared_functions import * \"\"\" Supabase Research Integration System - Data Storage & Management Store all research findings, business models, and execution plans in Supabase for ...",
    "created_at": "2025-09-08T22:56:32.801275"
  },
  {
    "script_id": "script_572d464c_f595ab28",
    "file_path": "scripts/python/enhanced_unified_router.py",
    "file_name": "enhanced_unified_router.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "route_request",
      "_make_routing_decision",
      "_execute_openrouter_request",
      "_format_crew_prompt",
      "_execute_claude_request",
      "_select_crew_member"
    ],
    "dependencies": [
      "json",
      "typing",
      "Dict",
      "sys",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./enhanced_unified_router.py",
      "Monitor: ./enhanced_unified_router.py --interval 30",
      "API: ./enhanced_unified_router.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.174690",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Enhanced Unified Router for Alex AI Crew Handles routing between local Claude agents and OpenRouter \"\"\"",
    "embedding_text": "enhanced_unified_router.py data_processing monitoring file_operations security api_integration route_request _make_routing_decision _execute_openrouter_request _format_crew_prompt _execute_claude_request _select_crew_member from scripts.utilities.shared_functions import * \"\"\" Enhanced Unified Router for Alex AI Crew Handles routing between local Claude agents and OpenRouter \"\"\"",
    "created_at": "2025-09-08T22:56:32.801276"
  },
  {
    "script_id": "script_b52111b1_14ac6636",
    "file_path": "scripts/python/crew_learning_assessment.py",
    "file_name": "crew_learning_assessment.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "_analyze_individual_learnings",
      "_analyze_shared_learnings",
      "assess_crew_learning",
      "_generate_learning_report",
      "_store_crew_memories"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./crew_learning_assessment.py",
      "Deploy: ./crew_learning_assessment.py --env production",
      "Monitor: ./crew_learning_assessment.py --interval 30",
      "Test: ./crew_learning_assessment.py --verbose",
      "API: ./crew_learning_assessment.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.174847",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Crew Learning Assessment System Analyze what the crew has learned from Phase 1 & 2 implementation \"\"\"",
    "embedding_text": "crew_learning_assessment.py data_processing monitoring testing deployment database_operations file_operations security api_integration synchronization _analyze_individual_learnings _analyze_shared_learnings assess_crew_learning _generate_learning_report _store_crew_memories from scripts.utilities.shared_functions import * \"\"\" Crew Learning Assessment System Analyze what the crew has learned from Phase 1 & 2 implementation \"\"\"",
    "created_at": "2025-09-08T22:56:32.801278"
  },
  {
    "script_id": "script_b5e4cc55_fd608772",
    "file_path": "scripts/python/optimized_web_crawler_system.py",
    "file_name": "optimized_web_crawler_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "extract_keywords_from_text",
      "generate_supabase_schema",
      "crawl_market_research",
      "simulate_web_crawl"
    ],
    "dependencies": [
      "json",
      "re",
      "typing",
      "random",
      "datetime",
      "Dict",
      "urljoin",
      "time",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./optimized_web_crawler_system.py",
      "API: ./optimized_web_crawler_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.175002",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Optimized Web Crawler System - Market Research Data Collection Real-time web scraping for market research and keyword analysis \"\"\"",
    "embedding_text": "optimized_web_crawler_system.py data_processing database_operations file_operations security api_integration synchronization extract_keywords_from_text generate_supabase_schema crawl_market_research simulate_web_crawl from scripts.utilities.shared_functions import * \"\"\" Optimized Web Crawler System - Market Research Data Collection Real-time web scraping for market research and keyword analysis \"\"\"",
    "created_at": "2025-09-08T22:56:32.801279"
  },
  {
    "script_id": "script_4ad10323_0d93e4e2",
    "file_path": "scripts/python/observation_lounge_crew_debrief.py",
    "file_name": "observation_lounge_crew_debrief.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "automation",
      "deployment",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "simulate_observation_lounge_session"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "sys"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Single-purpose script - could be extended with additional functions"
    ],
    "usage_examples": [
      "Execute: ./observation_lounge_crew_debrief.py",
      "Deploy: ./observation_lounge_crew_debrief.py --env production",
      "Monitor: ./observation_lounge_crew_debrief.py --interval 30",
      "API: ./observation_lounge_crew_debrief.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.175143",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Observation Lounge Crew Debrief Crew members discuss their new community intelligence insights and future collaboration plans \"\"\"",
    "embedding_text": "observation_lounge_crew_debrief.py data_processing monitoring automation deployment file_operations security api_integration simulate_observation_lounge_session from scripts.utilities.shared_functions import * \"\"\" Observation Lounge Crew Debrief Crew members discuss their new community intelligence insights and future collaboration plans \"\"\"",
    "created_at": "2025-09-08T22:56:32.801280"
  },
  {
    "script_id": "script_43ac35ff_3d2b0e2e",
    "file_path": "scripts/python/enhanced_ai_prompts_deployment_system.py",
    "file_name": "enhanced_ai_prompts_deployment_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "Deployment and Setup",
    "functionality": [
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "execute_all_next_steps",
      "test_integration_guide_creation",
      "test_live_system_integration",
      "create_advanced_workflows",
      "setup_automated_testing",
      "setUp",
      "setup_performance_monitoring",
      "test_prompt_generation",
      "test_performance",
      "scale_to_other_projects",
      "deploy_enhanced_prompts"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "enhanced_ai_prompts_system",
      "unittest",
      "Dict",
      "EnhancedAIPromptsSystem",
      "time",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./enhanced_ai_prompts_deployment_system.py",
      "Deploy: ./enhanced_ai_prompts_deployment_system.py --env production",
      "Monitor: ./enhanced_ai_prompts_deployment_system.py --interval 30",
      "Test: ./enhanced_ai_prompts_deployment_system.py --verbose",
      "API: ./enhanced_ai_prompts_deployment_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.175286",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Enhanced AI Prompts Deployment System - Execute All Next Steps Deploy enhanced prompts and test integration with live systems \"\"\"",
    "embedding_text": "enhanced_ai_prompts_deployment_system.py monitoring testing automation deployment file_operations security api_integration execute_all_next_steps test_integration_guide_creation test_live_system_integration create_advanced_workflows setup_automated_testing setUp setup_performance_monitoring test_prompt_generation test_performance scale_to_other_projects deploy_enhanced_prompts from scripts.utilities.shared_functions import * \"\"\" Enhanced AI Prompts Deployment System - Execute All Next Steps Deploy enhanced prompts and test integration with live systems \"\"\"",
    "created_at": "2025-09-08T22:56:32.801281"
  },
  {
    "script_id": "script_e17a91dd_ec69f830",
    "file_path": "scripts/python/cursor_ai_behavior_analysis.py",
    "file_name": "cursor_ai_behavior_analysis.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "generate_analysis_report",
      "create_solution_guide",
      "analyze_issue",
      "run_analysis",
      "create_crew_memory_update"
    ],
    "dependencies": [
      "json",
      "datetime",
      "logging",
      "Path",
      "pathlib"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./cursor_ai_behavior_analysis.py",
      "Deploy: ./cursor_ai_behavior_analysis.py --env production",
      "Monitor: ./cursor_ai_behavior_analysis.py --interval 30",
      "Test: ./cursor_ai_behavior_analysis.py --verbose",
      "API: ./cursor_ai_behavior_analysis.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.175410",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Cursor AI Behavior Analysis =========================== This script analyzes why our Cursor AI integration isn't working and provides",
    "embedding_text": "cursor_ai_behavior_analysis.py data_processing monitoring testing automation deployment database_operations file_operations api_integration synchronization generate_analysis_report create_solution_guide analyze_issue run_analysis create_crew_memory_update from scripts.utilities.shared_functions import * \"\"\" Cursor AI Behavior Analysis =========================== This script analyzes why our Cursor AI integration isn't working and provides",
    "created_at": "2025-09-08T22:56:32.801283"
  },
  {
    "script_id": "script_94dd17da_40be56b3",
    "file_path": "scripts/python/alex_ai_job_search_system.py",
    "file_name": "alex_ai_job_search_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "automation",
      "database_operations",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "load_org_structures",
      "save_job_search_results",
      "tailor_resume_for_job",
      "_generate_cover_letter",
      "create_application_wizard",
      "run_job_search_automation",
      "init_database",
      "load_job_opportunities",
      "_tailor_experience_for_job"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "sqlite3",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./alex_ai_job_search_system.py",
      "Monitor: ./alex_ai_job_search_system.py --interval 30",
      "API: ./alex_ai_job_search_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.175556",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Alex AI Job Search System Comprehensive job application automation with resume tailoring and tracking \"\"\"",
    "embedding_text": "alex_ai_job_search_system.py data_processing monitoring automation database_operations file_operations security api_integration load_org_structures save_job_search_results tailor_resume_for_job _generate_cover_letter create_application_wizard run_job_search_automation init_database load_job_opportunities _tailor_experience_for_job from scripts.utilities.shared_functions import * \"\"\" Alex AI Job Search System Comprehensive job application automation with resume tailoring and tracking \"\"\"",
    "created_at": "2025-09-08T22:56:32.801284"
  },
  {
    "script_id": "script_0113013d_995454a9",
    "file_path": "scripts/python/yolo_mode_crew_memory_update.py",
    "file_name": "yolo_mode_crew_memory_update.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "create_yolo_integration_memory",
      "create_crew_specific_memories",
      "create_cursor_ai_memory",
      "run_update",
      "_store_in_mcp_system",
      "store_memories",
      "generate_integration_report"
    ],
    "dependencies": [
      "json",
      "datetime",
      "logging",
      "Path",
      "subprocess",
      "pathlib"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./yolo_mode_crew_memory_update.py",
      "Deploy: ./yolo_mode_crew_memory_update.py --env production",
      "Monitor: ./yolo_mode_crew_memory_update.py --interval 30",
      "Test: ./yolo_mode_crew_memory_update.py --verbose",
      "API: ./yolo_mode_crew_memory_update.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.175727",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" YOLO Mode Crew Memory Update ============================ This script updates the crew memory system with the new YOLO Mode integration",
    "embedding_text": "yolo_mode_crew_memory_update.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization create_yolo_integration_memory create_crew_specific_memories create_cursor_ai_memory run_update _store_in_mcp_system store_memories generate_integration_report from scripts.utilities.shared_functions import * \"\"\" YOLO Mode Crew Memory Update ============================ This script updates the crew memory system with the new YOLO Mode integration",
    "created_at": "2025-09-08T22:56:32.801285"
  },
  {
    "script_id": "script_1483ee29_61ee8304",
    "file_path": "scripts/python/youtube_channel_intelligence_system.py",
    "file_name": "youtube_channel_intelligence_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "database_operations",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "_extract_key_concepts",
      "_extract_decision_concepts",
      "_analyze_videos_with_crew_specialization",
      "_create_content_vectors",
      "_extract_analytical_concepts",
      "_calculate_relevance_score",
      "_extract_logical_concepts",
      "_store_channel_analysis",
      "search_insights_by_vector_similarity",
      "get_channel_insights_for_crew",
      "_get_channel_videos",
      "_extract_key_themes",
      "_extract_leadership_concepts",
      "_get_channel_info",
      "_select_relevant_videos",
      "_store_crew_insights",
      "_extract_data_concepts",
      "analyze_youtube_channel",
      "_extract_channel_id",
      "_create_vector_embedding",
      "_analyze_video_for_crew_member",
      "_generate_channel_summary",
      "_generate_crew_specific_insight"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "defaultdict",
      "re",
      "typing",
      "datetime",
      "hashlib",
      "numpy",
      "Dict",
      "collections",
      "sys",
      "YouTubeScraperCrewIntegration",
      "youtube_scraper_crew_integration",
      "dataclass",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./youtube_channel_intelligence_system.py",
      "Monitor: ./youtube_channel_intelligence_system.py --interval 30",
      "API: ./youtube_channel_intelligence_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.175900",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" YouTube Channel Intelligence System Analyzes entire YouTube channels with crew-specialized insights and vector-optimized storage \"\"\"",
    "embedding_text": "youtube_channel_intelligence_system.py data_processing monitoring database_operations file_operations security api_integration _extract_key_concepts _extract_decision_concepts _analyze_videos_with_crew_specialization _create_content_vectors _extract_analytical_concepts _calculate_relevance_score _extract_logical_concepts _store_channel_analysis search_insights_by_vector_similarity get_channel_insights_for_crew _get_channel_videos _extract_key_themes _extract_leadership_concepts _get_channel_info _select_relevant_videos _store_crew_insights _extract_data_concepts analyze_youtube_channel _extract_channel_id _create_vector_embedding _analyze_video_for_crew_member _generate_channel_summary _generate_crew_specific_insight from scripts.utilities.shared_functions import * \"\"\" YouTube Channel Intelligence System Analyzes entire YouTube channels with crew-specialized insights and vector-optimized storage \"\"\"",
    "created_at": "2025-09-08T22:56:32.801286"
  },
  {
    "script_id": "script_1efdd3af_c46f0555",
    "file_path": "scripts/python/mcp_memory_optimization_milestone_push.py",
    "file_name": "mcp_memory_optimization_milestone_push.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "Version Control",
    "functionality": [
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "create_milestone_package"
    ],
    "dependencies": [
      "json",
      "tarfile",
      "datetime",
      "Path",
      "pathlib",
      "os"
    ],
    "complexity_score": 9,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced",
      "Single-purpose script - could be extended with additional functions"
    ],
    "usage_examples": [
      "Execute: ./mcp_memory_optimization_milestone_push.py",
      "Deploy: ./mcp_memory_optimization_milestone_push.py --env production",
      "Monitor: ./mcp_memory_optimization_milestone_push.py --interval 30",
      "Test: ./mcp_memory_optimization_milestone_push.py --verbose",
      "API: ./mcp_memory_optimization_milestone_push.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.176019",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" MCP Memory Optimization Milestone Push ===================================== Creates a comprehensive milestone package for the MCP Memory Optimizat...",
    "embedding_text": "mcp_memory_optimization_milestone_push.py monitoring testing automation deployment database_operations file_operations security api_integration synchronization create_milestone_package from scripts.utilities.shared_functions import * \"\"\" MCP Memory Optimization Milestone Push ===================================== Creates a comprehensive milestone package for the MCP Memory Optimizat...",
    "created_at": "2025-09-08T22:56:32.801288"
  },
  {
    "script_id": "script_92f88919_0a50c6d8",
    "file_path": "scripts/python/crew_yolo_mode_memory_sync.py",
    "file_name": "crew_yolo_mode_memory_sync.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "Synchronization",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "save_crew_memory_sync",
      "create_crew_memory_update_script",
      "create_crew_sync_report",
      "create_crew_memory_sync",
      "run_crew_memory_sync",
      "create_crew_coordination_workflow"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "logging",
      "Dict",
      "Path",
      "pathlib",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./crew_yolo_mode_memory_sync.py",
      "Deploy: ./crew_yolo_mode_memory_sync.py --env production",
      "Monitor: ./crew_yolo_mode_memory_sync.py --interval 30",
      "Test: ./crew_yolo_mode_memory_sync.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.176159",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Crew YOLO Mode Memory Synchronization ==================================== Synchronizes YOLO Mode understanding across all crew members",
    "embedding_text": "crew_yolo_mode_memory_sync.py data_processing monitoring testing automation deployment database_operations file_operations synchronization save_crew_memory_sync create_crew_memory_update_script create_crew_sync_report create_crew_memory_sync run_crew_memory_sync create_crew_coordination_workflow from scripts.utilities.shared_functions import * \"\"\" Crew YOLO Mode Memory Synchronization ==================================== Synchronizes YOLO Mode understanding across all crew members",
    "created_at": "2025-09-08T22:56:32.801289"
  },
  {
    "script_id": "script_ea429094_10dd556f",
    "file_path": "scripts/python/alex_ai_job_search_integration.py",
    "file_name": "alex_ai_job_search_integration.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "database_operations",
      "file_operations",
      "api_integration"
    ],
    "functions": [
      "load_comprehensive_job_data",
      "populate_database",
      "generate_comprehensive_report",
      "load_contact_database",
      "run_integration",
      "init_database",
      "analyze_resume",
      "create_user_interface"
    ],
    "dependencies": [
      "json",
      "shutil",
      "typing",
      "datetime",
      "Dict",
      "sqlite3",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./alex_ai_job_search_integration.py",
      "Monitor: ./alex_ai_job_search_integration.py --interval 30",
      "Test: ./alex_ai_job_search_integration.py --verbose",
      "API: ./alex_ai_job_search_integration.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.176317",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Alex AI Job Search Integration System Combines all previous prompts and results into a unified job search platform \"\"\"",
    "embedding_text": "alex_ai_job_search_integration.py data_processing monitoring testing automation database_operations file_operations api_integration load_comprehensive_job_data populate_database generate_comprehensive_report load_contact_database run_integration init_database analyze_resume create_user_interface from scripts.utilities.shared_functions import * \"\"\" Alex AI Job Search Integration System Combines all previous prompts and results into a unified job search platform \"\"\"",
    "created_at": "2025-09-08T22:56:32.801290"
  },
  {
    "script_id": "script_8b93e8e4_81567aaa",
    "file_path": "scripts/python/simple_youtube_crew_memory_demo.py",
    "file_name": "simple_youtube_crew_memory_demo.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "simulate_youtube_analysis",
      "run_demo",
      "generate_memory_report"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "logging",
      "subprocess",
      "Dict",
      "Path",
      "pathlib"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./simple_youtube_crew_memory_demo.py",
      "Deploy: ./simple_youtube_crew_memory_demo.py --env production",
      "Monitor: ./simple_youtube_crew_memory_demo.py --interval 30",
      "Test: ./simple_youtube_crew_memory_demo.py --verbose",
      "API: ./simple_youtube_crew_memory_demo.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.176567",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Simple YouTube Crew Memory Demo ============================== This demonstrates how we can integrate YouTube scraping with our crew memory system",
    "embedding_text": "simple_youtube_crew_memory_demo.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration simulate_youtube_analysis run_demo generate_memory_report from scripts.utilities.shared_functions import * \"\"\" Simple YouTube Crew Memory Demo ============================== This demonstrates how we can integrate YouTube scraping with our crew memory system",
    "created_at": "2025-09-08T22:56:32.801292"
  },
  {
    "script_id": "script_05d2f1c0_8f2b3996",
    "file_path": "scripts/python/comprehensive_yolo_stress_test.py",
    "file_name": "comprehensive_yolo_stress_test.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "Testing and Validation",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "test_package_management",
      "test_directory_operations",
      "test_memory_system_operations",
      "test_operation",
      "test_performance",
      "test_code_generation",
      "test_n8n_workflow_operations",
      "test_edge_cases",
      "test_error_handling",
      "generate_stress_test_report",
      "test_git_operations",
      "test_method",
      "run_all_stress_tests",
      "test_crew_system_operations",
      "test_file_creation",
      "test_configuration_operations"
    ],
    "dependencies": [
      "json",
      "datetime",
      "logging",
      "Path",
      "time",
      "sys",
      "subprocess",
      "pathlib",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./comprehensive_yolo_stress_test.py",
      "Deploy: ./comprehensive_yolo_stress_test.py --env production",
      "Monitor: ./comprehensive_yolo_stress_test.py --interval 30",
      "Test: ./comprehensive_yolo_stress_test.py --verbose",
      "API: ./comprehensive_yolo_stress_test.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.176705",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Comprehensive YOLO Mode Stress Test ================================== This script performs comprehensive stress testing of YOLO Mode integration",
    "embedding_text": "comprehensive_yolo_stress_test.py data_processing monitoring testing deployment database_operations file_operations api_integration synchronization test_package_management test_directory_operations test_memory_system_operations test_operation test_performance test_code_generation test_n8n_workflow_operations test_edge_cases test_error_handling generate_stress_test_report test_git_operations test_method run_all_stress_tests test_crew_system_operations test_file_creation test_configuration_operations from scripts.utilities.shared_functions import * \"\"\" Comprehensive YOLO Mode Stress Test ================================== This script performs comprehensive stress testing of YOLO Mode integration",
    "created_at": "2025-09-08T22:56:32.801293"
  },
  {
    "script_id": "script_711a47cd_7d0a4830",
    "file_path": "scripts/python/observation_lounge_yolo_mode_debrief.py",
    "file_name": "observation_lounge_yolo_mode_debrief.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "_generate_recommendations",
      "conduct_yolo_mode_debrief",
      "_store_debrief_session",
      "_get_crew_insight",
      "generate_debrief_report",
      "_generate_consensus"
    ],
    "dependencies": [
      "json",
      "datetime",
      "logging",
      "Path",
      "pathlib"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./observation_lounge_yolo_mode_debrief.py",
      "Deploy: ./observation_lounge_yolo_mode_debrief.py --env production",
      "Monitor: ./observation_lounge_yolo_mode_debrief.py --interval 30",
      "Test: ./observation_lounge_yolo_mode_debrief.py --verbose",
      "API: ./observation_lounge_yolo_mode_debrief.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.176839",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Observation Lounge - YOLO Mode Activation Debrief ================================================ This script convenes the Alex AI crew in the Obs...",
    "embedding_text": "observation_lounge_yolo_mode_debrief.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization _generate_recommendations conduct_yolo_mode_debrief _store_debrief_session _get_crew_insight generate_debrief_report _generate_consensus from scripts.utilities.shared_functions import * \"\"\" Observation Lounge - YOLO Mode Activation Debrief ================================================ This script convenes the Alex AI crew in the Obs...",
    "created_at": "2025-09-08T22:56:32.801294"
  },
  {
    "script_id": "script_a2b0eb45_48925093",
    "file_path": "scripts/python/knowledge_gap_research_plan.py",
    "file_name": "knowledge_gap_research_plan.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "create_research_plan"
    ],
    "dependencies": [
      "json",
      "Dict",
      "datetime",
      "typing"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced",
      "Single-purpose script - could be extended with additional functions"
    ],
    "usage_examples": [
      "Execute: ./knowledge_gap_research_plan.py",
      "Deploy: ./knowledge_gap_research_plan.py --env production",
      "Monitor: ./knowledge_gap_research_plan.py --interval 30",
      "Test: ./knowledge_gap_research_plan.py --verbose",
      "API: ./knowledge_gap_research_plan.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.176963",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Knowledge Gap Research Plan - Strategic Research Framework Address critical knowledge gaps for AI-driven business development \"\"\"",
    "embedding_text": "knowledge_gap_research_plan.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization create_research_plan from scripts.utilities.shared_functions import * \"\"\" Knowledge Gap Research Plan - Strategic Research Framework Address critical knowledge gaps for AI-driven business development \"\"\"",
    "created_at": "2025-09-08T22:56:32.801295"
  },
  {
    "script_id": "script_96f7df64_cfaff36c",
    "file_path": "scripts/python/mcp_memory_optimization_system.py",
    "file_name": "mcp_memory_optimization_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "save_optimized_memories_to_supabase",
      "generate_embedding",
      "consolidate_similar_memories",
      "find_similar_memories",
      "_consolidate_content",
      "create_memory_clusters",
      "optimize_memory_storage",
      "generate_optimization_report",
      "load_memories_from_supabase",
      "_hash_based_embedding",
      "calculate_importance_score",
      "cosine_similarity",
      "_create_content_summary"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "typing",
      "datetime",
      "hashlib",
      "logging",
      "numpy",
      "Dict",
      "dataclass",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./mcp_memory_optimization_system.py",
      "Deploy: ./mcp_memory_optimization_system.py --env production",
      "Test: ./mcp_memory_optimization_system.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.177209",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" MCP Memory Optimization System ============================= A comprehensive memory management system that uses vector embeddings and similarity an...",
    "embedding_text": "mcp_memory_optimization_system.py data_processing testing automation deployment database_operations file_operations synchronization save_optimized_memories_to_supabase generate_embedding consolidate_similar_memories find_similar_memories _consolidate_content create_memory_clusters optimize_memory_storage generate_optimization_report load_memories_from_supabase _hash_based_embedding calculate_importance_score cosine_similarity _create_content_summary from scripts.utilities.shared_functions import * \"\"\" MCP Memory Optimization System ============================= A comprehensive memory management system that uses vector embeddings and similarity an...",
    "created_at": "2025-09-08T22:56:32.801297"
  },
  {
    "script_id": "script_b13189da_f4f85112",
    "file_path": "scripts/python/research_phase_execution_plan.py",
    "file_name": "research_phase_execution_plan.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "synchronization"
    ],
    "functions": [
      "__init__",
      "generate_execution_plan",
      "_generate_risk_mitigation",
      "_generate_overall_deliverables",
      "_generate_next_steps",
      "_generate_success_metrics",
      "_generate_success_criteria",
      "_generate_phase_milestones",
      "_generate_phase_tasks"
    ],
    "dependencies": [
      "json",
      "Dict",
      "datetime",
      "typing"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./research_phase_execution_plan.py",
      "Deploy: ./research_phase_execution_plan.py --env production",
      "Monitor: ./research_phase_execution_plan.py --interval 30",
      "Test: ./research_phase_execution_plan.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.177374",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Research Phase Execution Plan - Comprehensive Implementation Strategy Complete execution plan for research phase with all systems integrated \"\"\"",
    "embedding_text": "research_phase_execution_plan.py data_processing monitoring testing deployment database_operations file_operations security synchronization __init__ generate_execution_plan _generate_risk_mitigation _generate_overall_deliverables _generate_next_steps _generate_success_metrics _generate_success_criteria _generate_phase_milestones _generate_phase_tasks from scripts.utilities.shared_functions import * \"\"\" Research Phase Execution Plan - Comprehensive Implementation Strategy Complete execution plan for research phase with all systems integrated \"\"\"",
    "created_at": "2025-09-08T22:56:32.801298"
  },
  {
    "script_id": "script_a43d5d9b_92221693",
    "file_path": "scripts/python/repository_optimization_analysis.py",
    "file_name": "repository_optimization_analysis.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "_categorize_file",
      "run_complete_optimization",
      "_lt_la_forge_analysis",
      "create_optimization_plan",
      "_get_directory_reason",
      "analyze_large_files",
      "convene_observation_lounge",
      "_dr_crusher_analysis",
      "_counselor_troi_analysis",
      "_commander_data_analysis",
      "execute_optimization_plan",
      "_captain_picard_analysis"
    ],
    "dependencies": [
      "json",
      "EnhancedUnifiedRouter",
      "ObservationLoungeCoordinator",
      "enhanced_unified_router",
      "typing",
      "datetime",
      "Dict",
      "sys",
      "crew_coordinator",
      "Alex",
      "subprocess",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./repository_optimization_analysis.py",
      "Deploy: ./repository_optimization_analysis.py --env production",
      "Monitor: ./repository_optimization_analysis.py --interval 30",
      "Test: ./repository_optimization_analysis.py --verbose",
      "API: ./repository_optimization_analysis.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.177513",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Repository Optimization Analysis System Convenes the Observation Lounge crew to analyze and optimize repository structure \"\"\"",
    "embedding_text": "repository_optimization_analysis.py data_processing monitoring testing deployment database_operations file_operations api_integration synchronization _categorize_file run_complete_optimization _lt_la_forge_analysis create_optimization_plan _get_directory_reason analyze_large_files convene_observation_lounge _dr_crusher_analysis _counselor_troi_analysis _commander_data_analysis execute_optimization_plan _captain_picard_analysis from scripts.utilities.shared_functions import * \"\"\" Repository Optimization Analysis System Convenes the Observation Lounge crew to analyze and optimize repository structure \"\"\"",
    "created_at": "2025-09-08T22:56:32.801299"
  },
  {
    "script_id": "script_a6e4ff27_41657c3e",
    "file_path": "scripts/python/business_operations_legal_system.py",
    "file_name": "business_operations_legal_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "generate_llc_setup_plan",
      "generate_business_model_analysis",
      "generate_payment_integration_plan",
      "main",
      "generate_comprehensive_business_plan"
    ],
    "dependencies": [
      "json",
      "typing",
      "random",
      "datetime",
      "Dict"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./business_operations_legal_system.py",
      "Deploy: ./business_operations_legal_system.py --env production",
      "Monitor: ./business_operations_legal_system.py --interval 30",
      "Test: ./business_operations_legal_system.py --verbose",
      "API: ./business_operations_legal_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.177656",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Business Operations Legal System - LLC Setup & Payment Integration Legal business operations with Stripe integration and compliance framework \"\"\"",
    "embedding_text": "business_operations_legal_system.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization generate_llc_setup_plan generate_business_model_analysis generate_payment_integration_plan main generate_comprehensive_business_plan from scripts.utilities.shared_functions import * \"\"\" Business Operations Legal System - LLC Setup & Payment Integration Legal business operations with Stripe integration and compliance framework \"\"\"",
    "created_at": "2025-09-08T22:56:32.801300"
  },
  {
    "script_id": "script_bcc37cac_1de191c3",
    "file_path": "scripts/python/advanced_ai_agent_development_system.py",
    "file_name": "advanced_ai_agent_development_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "database_operations",
      "file_operations",
      "security",
      "synchronization"
    ],
    "functions": [
      "initialize_enhanced_prompts",
      "develop_self_improving_capabilities",
      "develop_capabilities",
      "create_advanced_agents",
      "orchestrate_advanced_workflow",
      "execute_advanced_task",
      "create_advanced_agent_system",
      "learn_from_interactions"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "enhanced_ai_prompts_system",
      "Dict",
      "EnhancedAIPromptsSystem"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./advanced_ai_agent_development_system.py",
      "Monitor: ./advanced_ai_agent_development_system.py --interval 30",
      "Test: ./advanced_ai_agent_development_system.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.177791",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Advanced AI Agent Development System - Next Generation AI Agents Building advanced AI agents using enhanced prompts and live system integration \"\"\"",
    "embedding_text": "advanced_ai_agent_development_system.py data_processing monitoring testing automation database_operations file_operations security synchronization initialize_enhanced_prompts develop_self_improving_capabilities develop_capabilities create_advanced_agents orchestrate_advanced_workflow execute_advanced_task create_advanced_agent_system learn_from_interactions from scripts.utilities.shared_functions import * \"\"\" Advanced AI Agent Development System - Next Generation AI Agents Building advanced AI agents using enhanced prompts and live system integration \"\"\"",
    "created_at": "2025-09-08T22:56:32.801302"
  },
  {
    "script_id": "script_2d4b1e30_3a19eb88",
    "file_path": "scripts/python/simple_turborepo_research_system.py",
    "file_name": "simple_turborepo_research_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "conduct_crew_research",
      "scrape_turborepo_website",
      "main",
      "_initialize_crew",
      "generate_research_report",
      "_load_turborepo_knowledge",
      "scrape_turborepo_documentation",
      "save_research_data",
      "analyze_for_crew_member"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "re",
      "typing",
      "datetime",
      "logging",
      "Dict",
      "BeautifulSoup",
      "urllib",
      "dataclass",
      "aiohttp",
      "asyncio",
      "bs4"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./simple_turborepo_research_system.py",
      "Deploy: ./simple_turborepo_research_system.py --env production",
      "Monitor: ./simple_turborepo_research_system.py --interval 30",
      "Test: ./simple_turborepo_research_system.py --verbose",
      "API: ./simple_turborepo_research_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.178046",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Simple Turborepo Research System for Alex AI Monorepo Optimization ================================================================ This system coo...",
    "embedding_text": "simple_turborepo_research_system.py data_processing monitoring testing automation deployment file_operations security api_integration synchronization conduct_crew_research scrape_turborepo_website main _initialize_crew generate_research_report _load_turborepo_knowledge scrape_turborepo_documentation save_research_data analyze_for_crew_member from scripts.utilities.shared_functions import * \"\"\" Simple Turborepo Research System for Alex AI Monorepo Optimization ================================================================ This system coo...",
    "created_at": "2025-09-08T22:56:32.801303"
  },
  {
    "script_id": "script_4ff91b1f_ea2dde6e",
    "file_path": "scripts/python/agile_sprint_dashboard_system.py",
    "file_name": "agile_sprint_dashboard_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "create_sprint",
      "_assign_crew_to_tasks",
      "generate_multi_project_dashboard",
      "_generate_sprint_tasks",
      "update_sprint_progress",
      "generate_sprint_dashboard"
    ],
    "dependencies": [
      "json",
      "typing",
      "random",
      "datetime",
      "Dict"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./agile_sprint_dashboard_system.py",
      "Monitor: ./agile_sprint_dashboard_system.py --interval 30",
      "Test: ./agile_sprint_dashboard_system.py --verbose",
      "API: ./agile_sprint_dashboard_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.178206",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Agile Sprint Dashboard System - Project-Driven Development Sprint-based dashboard for managing multiple AI projects with Alex AI knowledge integrat...",
    "embedding_text": "agile_sprint_dashboard_system.py data_processing monitoring testing automation database_operations file_operations security api_integration synchronization create_sprint _assign_crew_to_tasks generate_multi_project_dashboard _generate_sprint_tasks update_sprint_progress generate_sprint_dashboard from scripts.utilities.shared_functions import * \"\"\" Agile Sprint Dashboard System - Project-Driven Development Sprint-based dashboard for managing multiple AI projects with Alex AI knowledge integrat...",
    "created_at": "2025-09-08T22:56:32.801304"
  },
  {
    "script_id": "script_6c17505d_15787953",
    "file_path": "scripts/python/crew_business_readiness_consensus.py",
    "file_name": "crew_business_readiness_consensus.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "simulate_crew_consensus"
    ],
    "dependencies": [
      "json",
      "Dict",
      "datetime",
      "typing"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced",
      "Single-purpose script - could be extended with additional functions"
    ],
    "usage_examples": [
      "Execute: ./crew_business_readiness_consensus.py",
      "Deploy: ./crew_business_readiness_consensus.py --env production",
      "Monitor: ./crew_business_readiness_consensus.py --interval 30",
      "Test: ./crew_business_readiness_consensus.py --verbose",
      "API: ./crew_business_readiness_consensus.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.178473",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Crew Business Readiness Consensus - Final Recommendation Crew consensus on readiness for AI-driven business development \"\"\"",
    "embedding_text": "crew_business_readiness_consensus.py data_processing monitoring testing deployment file_operations security api_integration simulate_crew_consensus from scripts.utilities.shared_functions import * \"\"\" Crew Business Readiness Consensus - Final Recommendation Crew consensus on readiness for AI-driven business development \"\"\"",
    "created_at": "2025-09-08T22:56:32.801305"
  },
  {
    "script_id": "script_50c538d8_0fccf5b5",
    "file_path": "scripts/python/crew_coordinator.py",
    "file_name": "crew_coordinator.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "_generate_recommendations",
      "coordinate_observation_lounge",
      "_extract_key_themes",
      "_identify_consensus",
      "_identify_divergence",
      "_select_crew_members",
      "_synthesize_crew_insights",
      "_generate_next_actions",
      "_conduct_crew_session",
      "_handle_youtube_analysis_request",
      "_get_crew_member_insight"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "youtube_scraper_crew_integration",
      "sys",
      "YouTubeScraperCrewIntegration",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./crew_coordinator.py",
      "Monitor: ./crew_coordinator.py --interval 30",
      "Test: ./crew_coordinator.py --verbose",
      "API: ./crew_coordinator.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.178580",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Observation Lounge Crew Coordinator for Alex AI Handles crew coordination and decision-making sessions \"\"\"",
    "embedding_text": "crew_coordinator.py data_processing monitoring testing automation file_operations security api_integration _generate_recommendations coordinate_observation_lounge _extract_key_themes _identify_consensus _identify_divergence _select_crew_members _synthesize_crew_insights _generate_next_actions _conduct_crew_session _handle_youtube_analysis_request _get_crew_member_insight from scripts.utilities.shared_functions import * \"\"\" Observation Lounge Crew Coordinator for Alex AI Handles crew coordination and decision-making sessions \"\"\"",
    "created_at": "2025-09-08T22:56:32.801307"
  },
  {
    "script_id": "script_33abdaa9_0d94dc6b",
    "file_path": "scripts/python/phase3_alex_ai_integration.py",
    "file_name": "phase3_alex_ai_integration.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "test_integrations",
      "setup_automated_testing",
      "execute_phase3",
      "setup_n8n_workflows",
      "configure_deployment_pipelines",
      "generate_phase3_report",
      "configure_mcp_tools_sharing",
      "integrate_crew_coordination",
      "create_monitoring_alerting",
      "implement_memory_optimization"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "logging",
      "Path",
      "Dict",
      "subprocess",
      "pathlib",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./phase3_alex_ai_integration.py",
      "Deploy: ./phase3_alex_ai_integration.py --env production",
      "Monitor: ./phase3_alex_ai_integration.py --interval 30",
      "Test: ./phase3_alex_ai_integration.py --verbose",
      "API: ./phase3_alex_ai_integration.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.178763",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Phase 3: Alex AI Integration with Turborepo ========================================== This system executes Phase 3 of the Turborepo implementation...",
    "embedding_text": "phase3_alex_ai_integration.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization test_integrations setup_automated_testing execute_phase3 setup_n8n_workflows configure_deployment_pipelines generate_phase3_report configure_mcp_tools_sharing integrate_crew_coordination create_monitoring_alerting implement_memory_optimization from scripts.utilities.shared_functions import * \"\"\" Phase 3: Alex AI Integration with Turborepo ========================================== This system executes Phase 3 of the Turborepo implementation...",
    "created_at": "2025-09-08T22:56:32.801308"
  },
  {
    "script_id": "script_db6e3e4e_ebc6681b",
    "file_path": "scripts/python/alex_ai_yolo_mode_memory_integration.py",
    "file_name": "alex_ai_yolo_mode_memory_integration.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "create_supabase_memory_update",
      "create_babysitting_warning_engine",
      "analyze_prompt_for_babysitting",
      "run_memory_integration",
      "save_memory_integration",
      "create_yolo_mode_memory"
    ],
    "dependencies": [
      "json",
      "re",
      "typing",
      "datetime",
      "logging",
      "Dict",
      "Path",
      "pathlib",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./alex_ai_yolo_mode_memory_integration.py",
      "Deploy: ./alex_ai_yolo_mode_memory_integration.py --env production",
      "Monitor: ./alex_ai_yolo_mode_memory_integration.py --interval 30",
      "Test: ./alex_ai_yolo_mode_memory_integration.py --verbose",
      "API: ./alex_ai_yolo_mode_memory_integration.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.178925",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Alex AI YOLO Mode Memory Integration =================================== Integrates YOLO Mode limitations understanding into Alex AI memory system",
    "embedding_text": "alex_ai_yolo_mode_memory_integration.py data_processing monitoring testing automation deployment database_operations file_operations api_integration synchronization create_supabase_memory_update create_babysitting_warning_engine analyze_prompt_for_babysitting run_memory_integration save_memory_integration create_yolo_mode_memory from scripts.utilities.shared_functions import * \"\"\" Alex AI YOLO Mode Memory Integration =================================== Integrates YOLO Mode limitations understanding into Alex AI memory system",
    "created_at": "2025-09-08T22:56:32.801310"
  },
  {
    "script_id": "script_832807a2_41fc3c3c",
    "file_path": "scripts/python/mcp_integration_system.py",
    "file_name": "mcp_integration_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "store_memory",
      "get_memory_statistics",
      "correlate_memories",
      "consolidate_memories",
      "import_memories",
      "get_memory_by_id",
      "trigger_workflow",
      "_determine_correlation_type",
      "_text_search_memories",
      "search_memories",
      "main",
      "handle_mcp_request",
      "export_memories",
      "_load_project_memories",
      "_convert_to_csv",
      "optimize_memories",
      "_matches_criteria",
      "get_workflow_status"
    ],
    "dependencies": [
      "json",
      "dataclasses",
      "mcp_memory_optimization_system",
      "MCPMemoryOptimizationSystem",
      "typing",
      "datetime",
      "logging",
      "numpy",
      "Dict",
      "asyncio",
      "dataclass",
      "aiohttp",
      "os",
      "memory"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./mcp_integration_system.py",
      "Deploy: ./mcp_integration_system.py --env production",
      "Monitor: ./mcp_integration_system.py --interval 30",
      "Test: ./mcp_integration_system.py --verbose",
      "API: ./mcp_integration_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.179094",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" MCP Integration System ===================== A comprehensive Model Context Protocol (MCP) integration system that connects",
    "embedding_text": "mcp_integration_system.py data_processing monitoring testing automation deployment database_operations api_integration synchronization store_memory get_memory_statistics correlate_memories consolidate_memories import_memories get_memory_by_id trigger_workflow _determine_correlation_type _text_search_memories search_memories main handle_mcp_request export_memories _load_project_memories _convert_to_csv optimize_memories _matches_criteria get_workflow_status from scripts.utilities.shared_functions import * \"\"\" MCP Integration System ===================== A comprehensive Model Context Protocol (MCP) integration system that connects",
    "created_at": "2025-09-08T22:56:32.801312"
  },
  {
    "script_id": "script_d10907c9_917666dd",
    "file_path": "scripts/python/supabase_data_import_script.py",
    "file_name": "supabase_data_import_script.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security"
    ],
    "functions": [
      "transform_agile_projects_data",
      "transform_market_research_data",
      "transform_execution_plans_data",
      "load_data_file",
      "transform_business_models_data",
      "generate_import_data",
      "transform_knowledge_base_data",
      "generate_supabase_import_script",
      "transform_business_operations_data"
    ],
    "dependencies": [
      "json",
      "all",
      "data",
      "typing",
      "script",
      "datetime",
      "and",
      "summary",
      "Dict",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./supabase_data_import_script.py",
      "Deploy: ./supabase_data_import_script.py --env production",
      "Monitor: ./supabase_data_import_script.py --interval 30",
      "Test: ./supabase_data_import_script.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.181500",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Supabase Data Import Script - Import All Research Findings Script to import all research findings, business models, and execution plans into Supaba...",
    "embedding_text": "supabase_data_import_script.py data_processing monitoring testing automation deployment database_operations file_operations security transform_agile_projects_data transform_market_research_data transform_execution_plans_data load_data_file transform_business_models_data generate_import_data transform_knowledge_base_data generate_supabase_import_script transform_business_operations_data from scripts.utilities.shared_functions import * \"\"\" Supabase Data Import Script - Import All Research Findings Script to import all research findings, business models, and execution plans into Supaba...",
    "created_at": "2025-09-08T22:56:32.801313"
  },
  {
    "script_id": "script_33f2b99c_082ff140",
    "file_path": "scripts/python/observation_lounge_memory_consensus.py",
    "file_name": "observation_lounge_memory_consensus.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "run_observation_lounge_session",
      "get_crew_memories",
      "generate_consensus",
      "print_observation_lounge_report",
      "simulate_crew_member_reflection",
      "get_system_wide_memories"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./observation_lounge_memory_consensus.py",
      "Monitor: ./observation_lounge_memory_consensus.py --interval 30",
      "API: ./observation_lounge_memory_consensus.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.181695",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Observation Lounge Memory Consensus Session Each crew member shares their learned memories and reaches communal consensus \"\"\"",
    "embedding_text": "observation_lounge_memory_consensus.py data_processing monitoring file_operations security api_integration run_observation_lounge_session get_crew_memories generate_consensus print_observation_lounge_report simulate_crew_member_reflection get_system_wide_memories from scripts.utilities.shared_functions import * \"\"\" Observation Lounge Memory Consensus Session Each crew member shares their learned memories and reaches communal consensus \"\"\"",
    "created_at": "2025-09-08T22:56:32.801314"
  },
  {
    "script_id": "script_17cdbabf_e4f27706",
    "file_path": "scripts/python/email_research_system.py",
    "file_name": "email_research_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "automation",
      "database_operations",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "run_comprehensive_research",
      "_research_contact_emails",
      "_research_hr_emails",
      "_research_application_emails",
      "generate_email_recommendations",
      "_research_hiring_manager_emails",
      "generate_email_database",
      "save_results",
      "_generate_outreach_strategy",
      "research_company_emails"
    ],
    "dependencies": [
      "json",
      "re",
      "typing",
      "datetime",
      "Dict",
      "BeautifulSoup",
      "requests",
      "bs4"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./email_research_system.py",
      "Test: ./email_research_system.py --verbose",
      "API: ./email_research_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.181931",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Email Research System for HR and Hiring Authority Contacts Deep research to find specific email addresses for direct resume submission \"\"\"",
    "embedding_text": "email_research_system.py testing automation database_operations file_operations security api_integration run_comprehensive_research _research_contact_emails _research_hr_emails _research_application_emails generate_email_recommendations _research_hiring_manager_emails generate_email_database save_results _generate_outreach_strategy research_company_emails from scripts.utilities.shared_functions import * \"\"\" Email Research System for HR and Hiring Authority Contacts Deep research to find specific email addresses for direct resume submission \"\"\"",
    "created_at": "2025-09-08T22:56:32.801315"
  },
  {
    "script_id": "script_b8acdb18_23e24f6c",
    "file_path": "scripts/python/fix_credential_security.py",
    "file_name": "fix_credential_security.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "Security",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "create_crew_memory_about_fix",
      "create_anthropic_key_prompt",
      "check_current_credentials",
      "create_secure_credential_loader",
      "test_credential_access"
    ],
    "dependencies": [
      "subprocess",
      "datetime",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./fix_credential_security.py",
      "Monitor: ./fix_credential_security.py --interval 30",
      "Test: ./fix_credential_security.py --verbose",
      "API: ./fix_credential_security.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.182036",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Alex AI Credential Security Fix Implements crew recommendations for comprehensive credential management \"\"\"",
    "embedding_text": "fix_credential_security.py data_processing monitoring testing file_operations security api_integration create_crew_memory_about_fix create_anthropic_key_prompt check_current_credentials create_secure_credential_loader test_credential_access from scripts.utilities.shared_functions import * \"\"\" Alex AI Credential Security Fix Implements crew recommendations for comprehensive credential management \"\"\"",
    "created_at": "2025-09-08T22:56:32.801317"
  },
  {
    "script_id": "script_33842869_bf7af478",
    "file_path": "scripts/python/progressive_git_push_system.py",
    "file_name": "progressive_git_push_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "create_push_step",
      "run_progressive_push",
      "execute_push_step",
      "print_progressive_report",
      "create_alex_ai_progressive_steps"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "time",
      "Dict",
      "sys",
      "subprocess",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./progressive_git_push_system.py",
      "Deploy: ./progressive_git_push_system.py --env production",
      "Monitor: ./progressive_git_push_system.py --interval 30",
      "Test: ./progressive_git_push_system.py --verbose",
      "API: ./progressive_git_push_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.182157",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Progressive Git Push System Step-by-step git push system for building comprehensive Alex AI system \"\"\"",
    "embedding_text": "progressive_git_push_system.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization create_push_step run_progressive_push execute_push_step print_progressive_report create_alex_ai_progressive_steps from scripts.utilities.shared_functions import * \"\"\" Progressive Git Push System Step-by-step git push system for building comprehensive Alex AI system \"\"\"",
    "created_at": "2025-09-08T22:56:32.801318"
  },
  {
    "script_id": "script_a2ef2e25_7d3612e3",
    "file_path": "scripts/python/yolo_mode_issue_investigation.py",
    "file_name": "yolo_mode_issue_investigation.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "investigate_error_handling_issue",
      "generate_investigation_report",
      "run_investigation",
      "investigate_package_management_issue"
    ],
    "dependencies": [
      "json",
      "datetime",
      "logging",
      "sys",
      "subprocess",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./yolo_mode_issue_investigation.py",
      "Deploy: ./yolo_mode_issue_investigation.py --env production",
      "Monitor: ./yolo_mode_issue_investigation.py --interval 30",
      "Test: ./yolo_mode_issue_investigation.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.182275",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" YOLO Mode Issue Investigation ============================ This script investigates the specific issues found during stress testing:",
    "embedding_text": "yolo_mode_issue_investigation.py data_processing monitoring testing deployment database_operations file_operations synchronization investigate_error_handling_issue generate_investigation_report run_investigation investigate_package_management_issue from scripts.utilities.shared_functions import * \"\"\" YOLO Mode Issue Investigation ============================ This script investigates the specific issues found during stress testing:",
    "created_at": "2025-09-08T22:56:32.801319"
  },
  {
    "script_id": "script_4e9371e9_404be7fa",
    "file_path": "scripts/python/mcp_library_computer_system.py",
    "file_name": "mcp_library_computer_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "query_mcp_library",
      "run_knowledge_distribution_cycle",
      "update_crew_specialization",
      "create_crew_knowledge_memory",
      "print_distribution_report"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./mcp_library_computer_system.py",
      "Monitor: ./mcp_library_computer_system.py --interval 30",
      "API: ./mcp_library_computer_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.182521",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" MCP Library Computer System Star Trek-inspired knowledge distribution system using MCP n8n workflows Acts as the ship's library computer to update ...",
    "embedding_text": "mcp_library_computer_system.py data_processing monitoring database_operations file_operations security api_integration synchronization query_mcp_library run_knowledge_distribution_cycle update_crew_specialization create_crew_knowledge_memory print_distribution_report from scripts.utilities.shared_functions import * \"\"\" MCP Library Computer System Star Trek-inspired knowledge distribution system using MCP n8n workflows Acts as the ship's library computer to update ...",
    "created_at": "2025-09-08T22:56:32.801320"
  },
  {
    "script_id": "script_8fbc6d1a_4deeee87",
    "file_path": "scripts/python/phase1_turborepo_setup.py",
    "file_name": "phase1_turborepo_setup.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "Environment Setup",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "migrate_existing_apps",
      "configure_basic_tasks",
      "setup_shared_packages",
      "execute_phase1",
      "generate_phase1_report",
      "setup_workspace_structure",
      "create_turbo_config",
      "test_turborepo_functionality",
      "install_turborepo"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "logging",
      "Path",
      "Dict",
      "subprocess",
      "pathlib",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./phase1_turborepo_setup.py",
      "Deploy: ./phase1_turborepo_setup.py --env production",
      "Monitor: ./phase1_turborepo_setup.py --interval 30",
      "Test: ./phase1_turborepo_setup.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.182752",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Phase 1: Turborepo Foundation Setup ================================== This system executes Phase 1 of the Turborepo implementation plan:",
    "embedding_text": "phase1_turborepo_setup.py data_processing monitoring testing deployment database_operations file_operations synchronization migrate_existing_apps configure_basic_tasks setup_shared_packages execute_phase1 generate_phase1_report setup_workspace_structure create_turbo_config test_turborepo_functionality install_turborepo from scripts.utilities.shared_functions import * \"\"\" Phase 1: Turborepo Foundation Setup ================================== This system executes Phase 1 of the Turborepo implementation plan:",
    "created_at": "2025-09-08T22:56:32.801322"
  },
  {
    "script_id": "script_8cb3daf0_8e2dc47d",
    "file_path": "scripts/python/proper_yolo_mode_configuration.py",
    "file_name": "proper_yolo_mode_configuration.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "save_configuration",
      "create_cursor_rules_file",
      "create_proper_yolo_config",
      "generate_configuration_report",
      "run_proper_configuration"
    ],
    "dependencies": [
      "json",
      "datetime",
      "logging",
      "Path",
      "pathlib",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./proper_yolo_mode_configuration.py",
      "Deploy: ./proper_yolo_mode_configuration.py --env production",
      "Monitor: ./proper_yolo_mode_configuration.py --interval 30",
      "Test: ./proper_yolo_mode_configuration.py --verbose",
      "API: ./proper_yolo_mode_configuration.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.183073",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Proper YOLO Mode Configuration ============================= This script configures YOLO Mode properly based on research findings",
    "embedding_text": "proper_yolo_mode_configuration.py data_processing monitoring testing automation deployment database_operations file_operations api_integration synchronization save_configuration create_cursor_rules_file create_proper_yolo_config generate_configuration_report run_proper_configuration from scripts.utilities.shared_functions import * \"\"\" Proper YOLO Mode Configuration ============================= This script configures YOLO Mode properly based on research findings",
    "created_at": "2025-09-08T22:56:32.801323"
  },
  {
    "script_id": "script_8d4c394d_1d2e4190",
    "file_path": "scripts/python/intelligent_monorepo_cleanup.py",
    "file_name": "intelligent_monorepo_cleanup.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "Maintenance",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "synchronization"
    ],
    "functions": [
      "consolidate_similar_scripts",
      "safe_remove_file",
      "generate_cleanup_report",
      "remove_duplicate_files",
      "run_intelligent_cleanup",
      "safe_remove_directory",
      "archive_milestone_packages"
    ],
    "dependencies": [
      "json",
      "tarfile",
      "shutil",
      "typing",
      "datetime",
      "hashlib",
      "Dict",
      "difflib",
      "sys",
      "Path",
      "pathlib",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Contains hardcoded values - could be parameterized"
    ],
    "usage_examples": [
      "Execute: ./intelligent_monorepo_cleanup.py",
      "Monitor: ./intelligent_monorepo_cleanup.py --interval 30",
      "Test: ./intelligent_monorepo_cleanup.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.183291",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Intelligent Monorepo Cleanup System ================================== Advanced cleanup system that intelligently handles duplicate files,",
    "embedding_text": "intelligent_monorepo_cleanup.py data_processing monitoring testing database_operations file_operations synchronization consolidate_similar_scripts safe_remove_file generate_cleanup_report remove_duplicate_files run_intelligent_cleanup safe_remove_directory archive_milestone_packages from scripts.utilities.shared_functions import * \"\"\" Intelligent Monorepo Cleanup System ================================== Advanced cleanup system that intelligently handles duplicate files,",
    "created_at": "2025-09-08T22:56:32.801324"
  },
  {
    "script_id": "script_08b792ae_30eb70ca",
    "file_path": "scripts/python/company_research_system.py",
    "file_name": "company_research_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "api_integration",
      "file_operations",
      "data_processing",
      "database_operations"
    ],
    "functions": [
      "run_research",
      "_extract_company_description",
      "_extract_leadership_info",
      "_extract_job_openings",
      "_extract_hiring_team",
      "generate_contact_database",
      "scrape_company_info",
      "_scrape_careers_page",
      "_scrape_main_website",
      "_scrape_linkedin_info",
      "_extract_application_process",
      "generate_mermaid_org_chart",
      "_extract_contact_info"
    ],
    "dependencies": [
      "json",
      "re",
      "typing",
      "datetime",
      "BeautifulSoup",
      "Dict",
      "time",
      "requests",
      "bs4"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension"
    ],
    "usage_examples": [
      "Execute: ./company_research_system.py",
      "API: ./company_research_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.183433",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Company Research System for Brady Georgen Job Search Deep learning and web scraping for organizational structures and contact leads \"\"\"",
    "embedding_text": "company_research_system.py api_integration file_operations data_processing database_operations run_research _extract_company_description _extract_leadership_info _extract_job_openings _extract_hiring_team generate_contact_database scrape_company_info _scrape_careers_page _scrape_main_website _scrape_linkedin_info _extract_application_process generate_mermaid_org_chart _extract_contact_info from scripts.utilities.shared_functions import * \"\"\" Company Research System for Brady Georgen Job Search Deep learning and web scraping for organizational structures and contact leads \"\"\"",
    "created_at": "2025-09-08T22:56:32.801325"
  },
  {
    "script_id": "script_aa10535d_7d85d869",
    "file_path": "scripts/python/alex-ai-universal-deployment-system.py",
    "file_name": "alex-ai-universal-deployment-system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "Deployment and Setup",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "create_deployment_manifest",
      "create_deployment_summary",
      "execute_universal_deployment",
      "simulate_cross_project_deployment",
      "validate_alex_ai_core",
      "validate_universal_package"
    ],
    "dependencies": [
      "json",
      "shutil",
      "typing",
      "datetime",
      "Dict",
      "subprocess",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./alex-ai-universal-deployment-system.py",
      "Deploy: ./alex-ai-universal-deployment-system.py --env production",
      "Monitor: ./alex-ai-universal-deployment-system.py --interval 30",
      "Test: ./alex-ai-universal-deployment-system.py --verbose",
      "API: ./alex-ai-universal-deployment-system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.183590",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Alex AI Universal Deployment System - Deploy Across All Alex AI Projects Universal deployment system for enhanced AI prompts and advanced agent dev...",
    "embedding_text": "alex-ai-universal-deployment-system.py data_processing monitoring testing deployment database_operations file_operations security api_integration synchronization create_deployment_manifest create_deployment_summary execute_universal_deployment simulate_cross_project_deployment validate_alex_ai_core validate_universal_package from scripts.utilities.shared_functions import * \"\"\" Alex AI Universal Deployment System - Deploy Across All Alex AI Projects Universal deployment system for enhanced AI prompts and advanced agent dev...",
    "created_at": "2025-09-08T22:56:32.801327"
  },
  {
    "script_id": "script_1b7e5a37_bb4d6765",
    "file_path": "scripts/python/alex_ai_comprehensive_assessment.py",
    "file_name": "alex_ai_comprehensive_assessment.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "testing",
      "file_operations",
      "data_processing",
      "monitoring"
    ],
    "functions": [
      "run_comprehensive_assessment",
      "_generate_recommendations",
      "_assess_overall_health",
      "print_comprehensive_report",
      "_generate_next_steps"
    ],
    "dependencies": [
      "json",
      "typing",
      "CrewPersonalHistoryAnalysis",
      "datetime",
      "Dict",
      "AlexAIMemorySharingAssessment",
      "alex_ai_memory_sharing_assessment",
      "crew_personal_history_analysis",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./alex_ai_comprehensive_assessment.py",
      "Monitor: ./alex_ai_comprehensive_assessment.py --interval 30",
      "Test: ./alex_ai_comprehensive_assessment.py --verbose"
    ],
    "last_modified": "2025-09-08T22:19:56.183710",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Alex AI Comprehensive Assessment Combines memory sharing and crew personal history analysis \"\"\"",
    "embedding_text": "alex_ai_comprehensive_assessment.py testing file_operations data_processing monitoring run_comprehensive_assessment _generate_recommendations _assess_overall_health print_comprehensive_report _generate_next_steps from scripts.utilities.shared_functions import * \"\"\" Alex AI Comprehensive Assessment Combines memory sharing and crew personal history analysis \"\"\"",
    "created_at": "2025-09-08T22:56:32.801328"
  },
  {
    "script_id": "script_898d54ed_f05db43a",
    "file_path": "scripts/python/business_readiness_assessment.py",
    "file_name": "business_readiness_assessment.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "simulate_business_readiness_assessment"
    ],
    "dependencies": [
      "json",
      "Dict",
      "datetime",
      "typing"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Limited error handling - could be enhanced",
      "Single-purpose script - could be extended with additional functions"
    ],
    "usage_examples": [
      "Execute: ./business_readiness_assessment.py",
      "Deploy: ./business_readiness_assessment.py --env production",
      "Monitor: ./business_readiness_assessment.py --interval 30",
      "Test: ./business_readiness_assessment.py --verbose",
      "API: ./business_readiness_assessment.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.183901",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Business Readiness Assessment - Crew Strategic Analysis Convene the crew to assess readiness for AI-driven business development \"\"\"",
    "embedding_text": "business_readiness_assessment.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization simulate_business_readiness_assessment from scripts.utilities.shared_functions import * \"\"\" Business Readiness Assessment - Crew Strategic Analysis Convene the crew to assess readiness for AI-driven business development \"\"\"",
    "created_at": "2025-09-08T22:56:32.801329"
  },
  {
    "script_id": "script_988a51c1_75d8cc6f",
    "file_path": "scripts/python/demo_youtube_scraper_system.py",
    "file_name": "demo_youtube_scraper_system.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "file_operations",
      "api_integration"
    ],
    "functions": [
      "run_complete_demo",
      "demo_crew_member_listing",
      "demo_individual_crew_analysis",
      "interactive_demo",
      "interactive_batch_analysis",
      "interactive_single_analysis",
      "demo_analysis_history",
      "demo_crew_coordination_analysis",
      "demo_batch_analysis_perspectives"
    ],
    "dependencies": [
      "json",
      "ObservationLoungeCoordinator",
      "typing",
      "datetime",
      "Dict",
      "youtube_scraper_crew_integration",
      "sys",
      "crew_coordinator",
      "os",
      "YouTubeScraperCrewIntegration"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./demo_youtube_scraper_system.py",
      "Deploy: ./demo_youtube_scraper_system.py --env production",
      "Monitor: ./demo_youtube_scraper_system.py --interval 30",
      "Test: ./demo_youtube_scraper_system.py --verbose",
      "API: ./demo_youtube_scraper_system.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.184044",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" YouTube Scraper System Demo Demonstrates the complete universal crew access YouTube scraping system \"\"\"",
    "embedding_text": "demo_youtube_scraper_system.py data_processing monitoring testing automation deployment file_operations api_integration run_complete_demo demo_crew_member_listing demo_individual_crew_analysis interactive_demo interactive_batch_analysis interactive_single_analysis demo_analysis_history demo_crew_coordination_analysis demo_batch_analysis_perspectives from scripts.utilities.shared_functions import * \"\"\" YouTube Scraper System Demo Demonstrates the complete universal crew access YouTube scraping system \"\"\"",
    "created_at": "2025-09-08T22:56:32.801330"
  },
  {
    "script_id": "script_b7dbc07e_4779f6ae",
    "file_path": "scripts/python/clean_secrets.py",
    "file_name": "clean_secrets.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "Maintenance",
    "functionality": [
      "testing",
      "file_operations",
      "api_integration",
      "monitoring"
    ],
    "functions": [
      "find_files_with_secrets",
      "clean_file",
      "clean_all_secrets"
    ],
    "dependencies": [
      "List",
      "os",
      "re",
      "typing"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./clean_secrets.py",
      "Monitor: ./clean_secrets.py --interval 30",
      "Test: ./clean_secrets.py --verbose",
      "API: ./clean_secrets.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.184157",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Secret Cleanup Script Removes API keys and tokens from files to make them GitHub-safe \"\"\"",
    "embedding_text": "clean_secrets.py testing file_operations api_integration monitoring find_files_with_secrets clean_file clean_all_secrets from scripts.utilities.shared_functions import * \"\"\" Secret Cleanup Script Removes API keys and tokens from files to make them GitHub-safe \"\"\"",
    "created_at": "2025-09-08T22:56:32.801332"
  },
  {
    "script_id": "script_36ab5934_789bf44b",
    "file_path": "scripts/python/store_crew_memories_supabase.py",
    "file_name": "store_crew_memories_supabase.py",
    "file_type": "py",
    "category": "python",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "database_operations",
      "file_operations",
      "security",
      "api_integration"
    ],
    "functions": [
      "store_crew_memories",
      "create_memory_summary"
    ],
    "dependencies": [
      "json",
      "typing",
      "datetime",
      "Dict",
      "os",
      "requests"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./store_crew_memories_supabase.py",
      "Monitor: ./store_crew_memories_supabase.py --interval 30",
      "Test: ./store_crew_memories_supabase.py --verbose",
      "API: ./store_crew_memories_supabase.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.184280",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Store Crew Memories in Supabase Upload learned insights to shared memory system \"\"\"",
    "embedding_text": "store_crew_memories_supabase.py data_processing monitoring testing database_operations file_operations security api_integration store_crew_memories create_memory_summary from scripts.utilities.shared_functions import * \"\"\" Store Crew Memories in Supabase Upload learned insights to shared memory system \"\"\"",
    "created_at": "2025-09-08T22:56:32.801333"
  },
  {
    "script_id": "script_c3b2c361_bfb5aeac",
    "file_path": "scripts/utilities/shared_functions.py",
    "file_name": "shared_functions.py",
    "file_type": "py",
    "category": "utilities",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "find_similar_memories",
      "__init__",
      "log_step",
      "main",
      "store_crew_memories",
      "calculate_importance_score",
      "test_performance",
      "_consolidate_content",
      "generate_integration_report",
      "consolidate_similar_memories",
      "save_memory_to_file",
      "_store_in_mcp_system",
      "add_memory",
      "log",
      "save_results",
      "save_research_data",
      "organize_remaining_files",
      "_create_content_summary",
      "create_crew_specific_memories",
      "load_analysis",
      "configure_local_caching",
      "test_error_handling",
      "_initialize_crew",
      "create_backup",
      "create_memory_summary",
      "run_command",
      "generate_optimization_report",
      "run_update",
      "store_memories"
    ],
    "dependencies": [
      "datetime",
      "logging",
      "os",
      "sys"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./shared_functions.py",
      "Deploy: ./shared_functions.py --env production",
      "Monitor: ./shared_functions.py --interval 30",
      "Test: ./shared_functions.py --verbose",
      "API: ./shared_functions.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.185298",
    "content_summary": "from scripts.utilities.shared_functions import * \"\"\" Shared Utility Functions ======================== Common functions used across multiple scripts",
    "embedding_text": "shared_functions.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization find_similar_memories __init__ log_step main store_crew_memories calculate_importance_score test_performance _consolidate_content generate_integration_report consolidate_similar_memories save_memory_to_file _store_in_mcp_system add_memory log save_results save_research_data organize_remaining_files _create_content_summary create_crew_specific_memories load_analysis configure_local_caching test_error_handling _initialize_crew create_backup create_memory_summary run_command generate_optimization_report run_update store_memories from scripts.utilities.shared_functions import * \"\"\" Shared Utility Functions ======================== Common functions used across multiple scripts",
    "created_at": "2025-09-08T22:56:32.801334"
  },
  {
    "script_id": "script_e764e8b9_f27b4d71",
    "file_path": "scripts/testing/e2e_testing/consolidated_e2e_testing.py",
    "file_name": "consolidated_e2e_testing.py",
    "file_type": "py",
    "category": "testing",
    "subcategory": "e2e_testing",
    "purpose": "Testing and Validation",
    "functionality": [
      "testing",
      "synchronization"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 10,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_e2e_testing.py",
      "Test: ./consolidated_e2e_testing.py --verbose"
    ],
    "last_modified": "2025-09-08T22:03:38.387265",
    "content_summary": "/**  * Consolidated Script  * ===================  * This script consolidates multiple related scripts for better maintainability  */",
    "embedding_text": "consolidated_e2e_testing.py testing synchronization  /**  * Consolidated Script  * ===================  * This script consolidates multiple related scripts for better maintainability  */",
    "created_at": "2025-09-08T22:56:32.801335"
  },
  {
    "script_id": "script_126f6598_91091973",
    "file_path": "scripts/deployment/n8n_deployment/consolidated_n8n_deployment.py",
    "file_name": "consolidated_n8n_deployment.py",
    "file_type": "py",
    "category": "deployment",
    "subcategory": "n8n_deployment",
    "purpose": "Deployment and Setup",
    "functionality": [
      "api_integration",
      "deployment"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 4,
    "maintenance_priority": "High",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_n8n_deployment.py",
      "Deploy: ./consolidated_n8n_deployment.py --env production",
      "API: ./consolidated_n8n_deployment.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:03:38.386028",
    "content_summary": "set -e SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m'",
    "embedding_text": "consolidated_n8n_deployment.py api_integration deployment  set -e SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m'",
    "created_at": "2025-09-08T22:56:32.801337"
  },
  {
    "script_id": "script_5d5f7c61_66f32cdc",
    "file_path": "scripts/deployment/milestone_management/consolidated_milestone_management.py",
    "file_name": "consolidated_milestone_management.py",
    "file_type": "py",
    "category": "deployment",
    "subcategory": "milestone_management",
    "purpose": "Version Control",
    "functionality": [
      "synchronization",
      "security"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 3,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_milestone_management.py"
    ],
    "last_modified": "2025-09-08T22:03:38.385821",
    "content_summary": "set -e SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m'",
    "embedding_text": "consolidated_milestone_management.py synchronization security  set -e SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m'",
    "created_at": "2025-09-08T22:56:32.801338"
  },
  {
    "script_id": "script_fdd3cdcc_77b7dbd6",
    "file_path": "scripts/deployment/supabase_setup/consolidated_supabase_setup.py",
    "file_name": "consolidated_supabase_setup.py",
    "file_type": "py",
    "category": "deployment",
    "subcategory": "supabase_setup",
    "purpose": "Environment Setup",
    "functionality": [
      "deployment"
    ],
    "functions": [
      "supabase_data_import_script",
      "main",
      "enhanced_ai_prompts_with_supabase_integration",
      "supabase_research_integration_system"
    ],
    "dependencies": [
      "json",
      "datetime",
      "logging",
      "sys",
      "os"
    ],
    "complexity_score": 6,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_supabase_setup.py",
      "Deploy: ./consolidated_supabase_setup.py --env production"
    ],
    "last_modified": "2025-09-08T22:03:38.385503",
    "content_summary": "\"\"\" Consolidated Script ================== This script consolidates multiple related scripts for better maintainability \"\"\"",
    "embedding_text": "consolidated_supabase_setup.py deployment supabase_data_import_script main enhanced_ai_prompts_with_supabase_integration supabase_research_integration_system \"\"\" Consolidated Script ================== This script consolidates multiple related scripts for better maintainability \"\"\"",
    "created_at": "2025-09-08T22:56:32.801339"
  },
  {
    "script_id": "script_bdc25bcf_0a944a55",
    "file_path": "scripts/deployment/general/consolidated_general.py",
    "file_name": "consolidated_general.py",
    "file_type": "py",
    "category": "deployment",
    "subcategory": "general",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "monitoring",
      "testing",
      "automation",
      "deployment",
      "database_operations",
      "file_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "consolidated_enhanced_unified_router",
      "business_readiness_assessment",
      "enhanced_unified_router",
      "main",
      "consolidated_mcp_integration_system",
      "crew_coordination_update_system",
      "turborepo_research_system",
      "consolidated_advanced_ai_agent_development_system",
      "yolo_mode_issue_investigation",
      "phase3_alex_ai_integration",
      "cursor_ai_behavior_analysis",
      "consolidated_crew_coordination_update_system",
      "consolidated_demo_youtube_scraper_system",
      "consolidated_greg_channel_intelligence_analysis",
      "consolidated_alex_ai_credential_manager",
      "mcp_integration_system",
      "alex_ai_comprehensive_assessment",
      "proper_yolo_mode_configuration",
      "consolidated_observation_lounge_crew_debrief",
      "crew_business_readiness_consensus",
      "enhanced_ai_prompts_system",
      "clean_secrets",
      "mcp_memory_optimization_system",
      "alex_ai_yolo_initialization",
      "email_research_system",
      "optimized_web_crawler_system",
      "progressive_git_push_system",
      "script_memory_system",
      "intelligent_monorepo_cleanup",
      "alex_ai_memory_sharing_assessment",
      "crew_yolo_mode_memory_sync",
      "observation_lounge_memory_consensus",
      "alex_ai_yolo_mode_memory_integration",
      "alex_ai_credential_manager",
      "add_quote_handling_memory_simple",
      "consolidated_shell_prompt_safety_system",
      "consolidated_progressive_git_push_system",
      "youtube_channel_intelligence_system",
      "consolidated_cursor_ai_shell_integration",
      "alex_ai_job_search_integration",
      "consolidated_shell_safety_guide",
      "consolidated_crew_coordinator",
      "alex_ai_webhook_server",
      "alex_ai_yolo_mode_integration_system",
      "consolidated_mcp_library_computer_system",
      "comprehensive_market_research_system",
      "consolidated_mcp_memory_optimization_system",
      "alex_ai_universal_deployment_system",
      "consolidated_update_zshrc_with_placeholder",
      "turborepo_implementation_plan",
      "consolidated_cursor_ai_shell_helper",
      "add_architecture_memory",
      "consolidated_youtube_scraper_crew_integration",
      "demo_youtube_scraper_system",
      "research_phase_execution_plan",
      "consolidated_youtube_channel_intelligence_system",
      "consolidated_fix_credential_security",
      "cursor_ai_integration_memory_update",
      "simple_turborepo_research_system",
      "add_quote_handling_memory",
      "consolidated_enhanced_ai_prompts_deployment_system",
      "phase1_turborepo_setup",
      "alex_ai_job_search_system",
      "intelligent_script_discovery",
      "consolidated_crew_learning_assessment",
      "consolidated_observation_lounge_memory_consensus",
      "enhanced_ai_prompts_deployment_system",
      "consolidated_alexai_init",
      "simple_youtube_crew_memory_demo",
      "crew_coordinator",
      "consolidated_load_alex_ai_credentials",
      "yolo_mode_crew_memory_update",
      "consolidated_get_and_update_claude_key",
      "consolidated_enhanced_ai_prompts_system",
      "observation_lounge_crew_debrief",
      "phase2_turborepo_optimization",
      "alex_ai_crew_mermaid_models",
      "observation_lounge_yolo_mode_debrief",
      "mcp_library_computer_system",
      "repository_optimization_analysis",
      "business_operations_legal_system",
      "consolidated_alex_ai_comprehensive_assessment",
      "advanced_ai_agent_development_system",
      "script_analyzer",
      "knowledge_gap_research_plan",
      "agile_sprint_dashboard_system",
      "youtube_crew_memory_integration",
      "crew_learning_assessment",
      "consolidated_alex_ai_memory_sharing_assessment",
      "youtube_scraper_crew_integration",
      "consolidated_crew_personal_history_analysis",
      "fix_credential_security",
      "final_monorepo_cleanup"
    ],
    "dependencies": [
      "json",
      "datetime",
      "logging",
      "sys",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_general.py",
      "Deploy: ./consolidated_general.py --env production",
      "Monitor: ./consolidated_general.py --interval 30",
      "Test: ./consolidated_general.py --verbose",
      "API: ./consolidated_general.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:35:10.668771",
    "content_summary": "\"\"\" Consolidated Script ================== This script consolidates multiple related scripts for better maintainability \"\"\"",
    "embedding_text": "consolidated_general.py data_processing monitoring testing automation deployment database_operations file_operations security api_integration synchronization consolidated_enhanced_unified_router business_readiness_assessment enhanced_unified_router main consolidated_mcp_integration_system crew_coordination_update_system turborepo_research_system consolidated_advanced_ai_agent_development_system yolo_mode_issue_investigation phase3_alex_ai_integration cursor_ai_behavior_analysis consolidated_crew_coordination_update_system consolidated_demo_youtube_scraper_system consolidated_greg_channel_intelligence_analysis consolidated_alex_ai_credential_manager mcp_integration_system alex_ai_comprehensive_assessment proper_yolo_mode_configuration consolidated_observation_lounge_crew_debrief crew_business_readiness_consensus enhanced_ai_prompts_system clean_secrets mcp_memory_optimization_system alex_ai_yolo_initialization email_research_system optimized_web_crawler_system progressive_git_push_system script_memory_system intelligent_monorepo_cleanup alex_ai_memory_sharing_assessment crew_yolo_mode_memory_sync observation_lounge_memory_consensus alex_ai_yolo_mode_memory_integration alex_ai_credential_manager add_quote_handling_memory_simple consolidated_shell_prompt_safety_system consolidated_progressive_git_push_system youtube_channel_intelligence_system consolidated_cursor_ai_shell_integration alex_ai_job_search_integration consolidated_shell_safety_guide consolidated_crew_coordinator alex_ai_webhook_server alex_ai_yolo_mode_integration_system consolidated_mcp_library_computer_system comprehensive_market_research_system consolidated_mcp_memory_optimization_system alex_ai_universal_deployment_system consolidated_update_zshrc_with_placeholder turborepo_implementation_plan consolidated_cursor_ai_shell_helper add_architecture_memory consolidated_youtube_scraper_crew_integration demo_youtube_scraper_system research_phase_execution_plan consolidated_youtube_channel_intelligence_system consolidated_fix_credential_security cursor_ai_integration_memory_update simple_turborepo_research_system add_quote_handling_memory consolidated_enhanced_ai_prompts_deployment_system phase1_turborepo_setup alex_ai_job_search_system intelligent_script_discovery consolidated_crew_learning_assessment consolidated_observation_lounge_memory_consensus enhanced_ai_prompts_deployment_system consolidated_alexai_init simple_youtube_crew_memory_demo crew_coordinator consolidated_load_alex_ai_credentials yolo_mode_crew_memory_update consolidated_get_and_update_claude_key consolidated_enhanced_ai_prompts_system observation_lounge_crew_debrief phase2_turborepo_optimization alex_ai_crew_mermaid_models observation_lounge_yolo_mode_debrief mcp_library_computer_system repository_optimization_analysis business_operations_legal_system consolidated_alex_ai_comprehensive_assessment advanced_ai_agent_development_system script_analyzer knowledge_gap_research_plan agile_sprint_dashboard_system youtube_crew_memory_integration crew_learning_assessment consolidated_alex_ai_memory_sharing_assessment youtube_scraper_crew_integration consolidated_crew_personal_history_analysis fix_credential_security final_monorepo_cleanup \"\"\" Consolidated Script ================== This script consolidates multiple related scripts for better maintainability \"\"\"",
    "created_at": "2025-09-08T22:56:32.801340"
  },
  {
    "script_id": "script_83ec31f8_231403ab",
    "file_path": "scripts/deployment/api_integration/consolidated_api_integration.py",
    "file_name": "consolidated_api_integration.py",
    "file_type": "py",
    "category": "deployment",
    "subcategory": "api_integration",
    "purpose": "General Utility",
    "functionality": [
      "data_processing",
      "testing",
      "deployment",
      "database_operations",
      "security",
      "api_integration",
      "synchronization"
    ],
    "functions": [
      "consolidated_fix_zshrc_api_key",
      "main",
      "consolidated_claude_api_key_guide",
      "company_research_system"
    ],
    "dependencies": [
      "json",
      "datetime",
      "logging",
      "sys",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_api_integration.py",
      "Deploy: ./consolidated_api_integration.py --env production",
      "Test: ./consolidated_api_integration.py --verbose",
      "API: ./consolidated_api_integration.py --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:35:10.669081",
    "content_summary": "set -e SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m'",
    "embedding_text": "consolidated_api_integration.py data_processing testing deployment database_operations security api_integration synchronization consolidated_fix_zshrc_api_key main consolidated_claude_api_key_guide company_research_system set -e SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m'",
    "created_at": "2025-09-08T22:56:32.801342"
  },
  {
    "script_id": "script_9ec6f32e_d32d3897",
    "file_path": "scripts/deployment/unit_testing/consolidated_unit_testing.py",
    "file_name": "consolidated_unit_testing.py",
    "file_type": "py",
    "category": "deployment",
    "subcategory": "unit_testing",
    "purpose": "Testing and Validation",
    "functionality": [
      "testing",
      "monitoring",
      "deployment"
    ],
    "functions": [
      "enhanced_prompts_test_suite",
      "comprehensive_yolo_stress_test",
      "consolidated_test_youtube_scraper_integration",
      "test_channel_intelligence_system",
      "consolidated_enhanced_prompts_test_suite",
      "consolidated_robust_test",
      "consolidated_test_alex_ai_system",
      "test_youtube_scraper_integration",
      "consolidated_test_progress",
      "consolidated_test_mcp_system",
      "consolidated_test_basic",
      "main",
      "consolidated_test_status",
      "test_alex_ai_system",
      "consolidated_test_channel_intelligence_system",
      "test_mcp_system"
    ],
    "dependencies": [
      "json",
      "datetime",
      "logging",
      "sys",
      "os"
    ],
    "complexity_score": 10,
    "maintenance_priority": "Low",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_unit_testing.py",
      "Deploy: ./consolidated_unit_testing.py --env production",
      "Monitor: ./consolidated_unit_testing.py --interval 30",
      "Test: ./consolidated_unit_testing.py --verbose"
    ],
    "last_modified": "2025-09-08T22:35:10.669346",
    "content_summary": "\"\"\" Consolidated Script ================== This script consolidates multiple related scripts for better maintainability \"\"\"",
    "embedding_text": "consolidated_unit_testing.py testing monitoring deployment enhanced_prompts_test_suite comprehensive_yolo_stress_test consolidated_test_youtube_scraper_integration test_channel_intelligence_system consolidated_enhanced_prompts_test_suite consolidated_robust_test consolidated_test_alex_ai_system test_youtube_scraper_integration consolidated_test_progress consolidated_test_mcp_system consolidated_test_basic main consolidated_test_status test_alex_ai_system consolidated_test_channel_intelligence_system test_mcp_system \"\"\" Consolidated Script ================== This script consolidates multiple related scripts for better maintainability \"\"\"",
    "created_at": "2025-09-08T22:56:32.801343"
  },
  {
    "script_id": "script_0b87c63c_54d91eb7",
    "file_path": "scripts/deployment/sync_operations/consolidated_sync_operations.py",
    "file_name": "consolidated_sync_operations.py",
    "file_type": "py",
    "category": "deployment",
    "subcategory": "sync_operations",
    "purpose": "Synchronization",
    "functionality": [
      "synchronization",
      "monitoring",
      "deployment"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 4,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [
      "Has TODO comments - potential for extension",
      "Limited error handling - could be enhanced"
    ],
    "usage_examples": [
      "Execute: ./consolidated_sync_operations.py",
      "Deploy: ./consolidated_sync_operations.py --env production",
      "Monitor: ./consolidated_sync_operations.py --interval 30"
    ],
    "last_modified": "2025-09-08T22:03:38.383767",
    "content_summary": "set -e SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m'",
    "embedding_text": "consolidated_sync_operations.py synchronization monitoring deployment  set -e SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\" RED='\\033[0;31m' GREEN='\\033[0;32m' YELLOW='\\033[1;33m'",
    "created_at": "2025-09-08T22:56:32.801344"
  },
  {
    "script_id": "script_c98e81a9_1a315f46",
    "file_path": "scripts/templates/safe-output/milestone.sh",
    "file_name": "milestone.sh",
    "file_type": "sh",
    "category": "templates",
    "subcategory": "safe-output",
    "purpose": "Version Control",
    "functionality": [],
    "functions": [],
    "dependencies": [],
    "complexity_score": 1,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./milestone.sh"
    ],
    "last_modified": "2025-09-08T22:19:56.130117",
    "content_summary": "    local description=\"$2\"     printf \"\ud83c\udf89 MILESTONE: %s\\n\" \"$title\"     printf \"==================================\\n\"     printf \"\\n\"     printf \"\u2705 %s\\n\" \"$description\"",
    "embedding_text": "milestone.sh       local description=\"$2\"     printf \"\ud83c\udf89 MILESTONE: %s\\n\" \"$title\"     printf \"==================================\\n\"     printf \"\\n\"     printf \"\u2705 %s\\n\" \"$description\"",
    "created_at": "2025-09-08T22:56:32.801345"
  },
  {
    "script_id": "script_9c03006c_2a8fb992",
    "file_path": "scripts/templates/safe-output/progress.sh",
    "file_name": "progress.sh",
    "file_type": "sh",
    "category": "templates",
    "subcategory": "safe-output",
    "purpose": "General Utility",
    "functionality": [
      "database_operations",
      "monitoring",
      "deployment"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 2,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./progress.sh",
      "Deploy: ./progress.sh --env production",
      "Monitor: ./progress.sh --interval 30"
    ],
    "last_modified": "2025-09-08T22:19:56.131406",
    "content_summary": "    local status=\"$2\"     case \"$status\" in         \"completed\") printf \"\u2705 %s - COMPLETED\\n\" \"$step\" ;;         \"in_progress\") printf \"\ud83d\udd04 %s - IN PROGRESS\\n\" \"$step\" ;;         \"pending\") printf \"\u23f3 %s ...",
    "embedding_text": "progress.sh database_operations monitoring deployment      local status=\"$2\"     case \"$status\" in         \"completed\") printf \"\u2705 %s - COMPLETED\\n\" \"$step\" ;;         \"in_progress\") printf \"\ud83d\udd04 %s - IN PROGRESS\\n\" \"$step\" ;;         \"pending\") printf \"\u23f3 %s ...",
    "created_at": "2025-09-08T22:56:32.801348"
  },
  {
    "script_id": "script_4ef3dbcb_e3544fcf",
    "file_path": "scripts/templates/safe-output/list.sh",
    "file_name": "list.sh",
    "file_type": "sh",
    "category": "templates",
    "subcategory": "safe-output",
    "purpose": "General Utility",
    "functionality": [
      "api_integration",
      "database_operations"
    ],
    "functions": [],
    "dependencies": [],
    "complexity_score": 2,
    "maintenance_priority": "Medium",
    "consolidation_group": "Standalone",
    "similar_scripts": [],
    "extension_opportunities": [],
    "usage_examples": [
      "Execute: ./list.sh",
      "API: ./list.sh --endpoint https://api.example.com"
    ],
    "last_modified": "2025-09-08T22:19:56.133237",
    "content_summary": "    shift     local items=(\"$@\")     printf \"\ud83d\udccb %s\\n\" \"$title\"     printf \"========================\\n\"     printf \"\\n\"",
    "embedding_text": "list.sh api_integration database_operations      shift     local items=(\"$@\")     printf \"\ud83d\udccb %s\\n\" \"$title\"     printf \"========================\\n\"     printf \"\\n\"",
    "created_at": "2025-09-08T22:56:32.801349"
  }
]