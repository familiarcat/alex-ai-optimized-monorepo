{
  "duplicate_functions": {
    "log_info": [
      {
        "name": "log_info",
        "file_path": "scripts/n8n-cicd-sync.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_info",
        "file_path": "scripts/analyze-conflicts.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_info",
        "file_path": "scripts/security-validation.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_info",
        "file_path": "scripts/test-workflows.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_info",
        "file_path": "scripts/analyze-production-changes.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_info",
        "file_path": "scripts/setup-bidirectional-sync.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_info",
        "file_path": "scripts/test-intelligent-discovery.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_info",
        "file_path": "scripts/setup-n8n-bidirectional-sync.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_info",
        "file_path": "scripts/sync-dashboard.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_info",
        "file_path": "scripts/n8n-change-monitor.sh",
        "parameters": [],
        "lines": 4,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_info",
        "file_path": "scripts/automate-bidirectional-setup.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_info",
        "file_path": "scripts/automate-bidirectional-setup.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "log_success": [
      {
        "name": "log_success",
        "file_path": "scripts/n8n-cicd-sync.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_success",
        "file_path": "scripts/analyze-conflicts.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_success",
        "file_path": "scripts/security-validation.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_success",
        "file_path": "scripts/test-workflows.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_success",
        "file_path": "scripts/analyze-production-changes.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_success",
        "file_path": "scripts/setup-bidirectional-sync.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_success",
        "file_path": "scripts/test-intelligent-discovery.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_success",
        "file_path": "scripts/setup-n8n-bidirectional-sync.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_success",
        "file_path": "scripts/sync-dashboard.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_success",
        "file_path": "scripts/n8n-change-monitor.sh",
        "parameters": [],
        "lines": 4,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_success",
        "file_path": "scripts/automate-bidirectional-setup.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_success",
        "file_path": "scripts/automate-bidirectional-setup.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "log_warning": [
      {
        "name": "log_warning",
        "file_path": "scripts/n8n-cicd-sync.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_warning",
        "file_path": "scripts/analyze-conflicts.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_warning",
        "file_path": "scripts/security-validation.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_warning",
        "file_path": "scripts/test-workflows.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_warning",
        "file_path": "scripts/analyze-production-changes.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_warning",
        "file_path": "scripts/setup-bidirectional-sync.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_warning",
        "file_path": "scripts/test-intelligent-discovery.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_warning",
        "file_path": "scripts/setup-n8n-bidirectional-sync.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_warning",
        "file_path": "scripts/sync-dashboard.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_warning",
        "file_path": "scripts/n8n-change-monitor.sh",
        "parameters": [],
        "lines": 4,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_warning",
        "file_path": "scripts/automate-bidirectional-setup.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "log_error": [
      {
        "name": "log_error",
        "file_path": "scripts/n8n-cicd-sync.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_error",
        "file_path": "scripts/analyze-conflicts.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_error",
        "file_path": "scripts/security-validation.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_error",
        "file_path": "scripts/test-workflows.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_error",
        "file_path": "scripts/analyze-production-changes.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_error",
        "file_path": "scripts/setup-bidirectional-sync.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_error",
        "file_path": "scripts/test-intelligent-discovery.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_error",
        "file_path": "scripts/setup-n8n-bidirectional-sync.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_error",
        "file_path": "scripts/sync-dashboard.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_error",
        "file_path": "scripts/n8n-change-monitor.sh",
        "parameters": [],
        "lines": 4,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_error",
        "file_path": "scripts/automate-bidirectional-setup.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "check_prerequisites": [
      {
        "name": "check_prerequisites",
        "file_path": "scripts/n8n-cicd-sync.sh",
        "parameters": [],
        "lines": 20,
        "complexity": 4,
        "calls": [],
        "variables": []
      },
      {
        "name": "check_prerequisites",
        "file_path": "scripts/setup-bidirectional-sync.sh",
        "parameters": [],
        "lines": 36,
        "complexity": 8,
        "calls": [],
        "variables": [
          "tools"
        ]
      },
      {
        "name": "check_prerequisites",
        "file_path": "scripts/setup-n8n-bidirectional-sync.sh",
        "parameters": [],
        "lines": 25,
        "complexity": 6,
        "calls": [],
        "variables": []
      },
      {
        "name": "check_prerequisites",
        "file_path": "scripts/n8n-change-monitor.sh",
        "parameters": [],
        "lines": 28,
        "complexity": 5,
        "calls": [],
        "variables": []
      },
      {
        "name": "check_prerequisites",
        "file_path": "scripts/automate-bidirectional-setup.sh",
        "parameters": [],
        "lines": 29,
        "complexity": 8,
        "calls": [
          "branch"
        ],
        "variables": [
          "tools",
          "current_branch"
        ]
      }
    ],
    "test_n8n_connection": [
      {
        "name": "test_n8n_connection",
        "file_path": "scripts/n8n-cicd-sync.sh",
        "parameters": [],
        "lines": 13,
        "complexity": 2,
        "calls": [
          "N8N"
        ],
        "variables": [
          "response",
          "http_code"
        ]
      },
      {
        "name": "test_n8n_connection",
        "file_path": "scripts/n8n-change-monitor.sh",
        "parameters": [],
        "lines": 13,
        "complexity": 2,
        "calls": [
          "N8N"
        ],
        "variables": [
          "response",
          "http_code"
        ]
      },
      {
        "name": "test_n8n_connection",
        "file_path": "scripts/deploy-complete-n8n-infrastructure.sh",
        "parameters": [],
        "lines": 12,
        "complexity": 2,
        "calls": [],
        "variables": [
          "response"
        ]
      }
    ],
    "main": [
      {
        "name": "main",
        "file_path": "scripts/n8n-cicd-sync.sh",
        "parameters": [],
        "lines": 48,
        "complexity": 6,
        "calls": [
          "else",
          "else"
        ],
        "variables": [
          "processed_count",
          "failed_count",
          "workflow_name"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/intelligent-script-discovery.py",
        "parameters": [],
        "lines": 44,
        "complexity": 7,
        "calls": [
          "ArgumentParser",
          "add_argument",
          "add_argument",
          "add_argument",
          "add_argument",
          "add_argument",
          "parse_args",
          "IntelligentScriptDiscovery",
          "print",
          "discover_script",
          "print",
          "print",
          "print",
          "print",
          "print",
          "save_recommendation",
          "print",
          "print",
          "create_script_from_recommendation",
          "print",
          "print"
        ],
        "variables": [
          "parser",
          "args",
          "discovery",
          "recommendation"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/setup-supabase-with-credentials.sh",
        "parameters": [],
        "lines": 30,
        "complexity": 2,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/script-consolidation-plan.py",
        "parameters": [],
        "lines": 35,
        "complexity": 4,
        "calls": [
          "print",
          "print",
          "ScriptConsolidationPlan",
          "create_consolidation_plan",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "input",
          "print",
          "print",
          "open",
          "dump",
          "lower",
          "execute_consolidation",
          "print",
          "print",
          "len",
          "len"
        ],
        "variables": [
          "consolidator",
          "plan",
          "response"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/milestone-push.sh",
        "parameters": [],
        "lines": 13,
        "complexity": 3,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/milestone-push-system.sh",
        "parameters": [],
        "lines": 34,
        "complexity": 2,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/deploy-n8n-with-credentials.sh",
        "parameters": [],
        "lines": 33,
        "complexity": 3,
        "calls": [],
        "variables": [
          "workflow_id"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/script-memory-system.py",
        "parameters": [],
        "lines": 17,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "ScriptMemorySystem",
          "print",
          "search_similar_scripts",
          "print",
          "print",
          "len",
          "get",
          "get"
        ],
        "variables": [
          "memory_system",
          "query",
          "results"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/analyze-conflicts.sh",
        "parameters": [],
        "lines": 21,
        "complexity": 3,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/add-quote-handling-memory.py",
        "parameters": [],
        "lines": 29,
        "complexity": 4,
        "calls": [
          "print",
          "print",
          "AlexAIMemoryAdder",
          "add_memory",
          "print",
          "print",
          "items",
          "print",
          "print",
          "get",
          "print",
          "print",
          "print",
          "get",
          "len",
          "upper"
        ],
        "variables": [
          "memory_adder",
          "results",
          "success_count",
          "status"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/security-validation.sh",
        "parameters": [],
        "lines": 48,
        "complexity": 4,
        "calls": [],
        "variables": [
          "total_checks",
          "passed_checks",
          "failed_checks",
          "checks"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/validate-consolidated-structure.py",
        "parameters": [],
        "lines": 38,
        "complexity": 6,
        "calls": [
          "print",
          "print",
          "StructureValidator",
          "validate_structure",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "generate_validation_report",
          "print",
          "print",
          "print",
          "open",
          "write",
          "print",
          "print",
          "print",
          "len",
          "len",
          "len",
          "len"
        ],
        "variables": [
          "validator",
          "results",
          "report",
          "status"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/quick-production-test.sh",
        "parameters": [],
        "lines": 31,
        "complexity": 2,
        "calls": [
          "test"
        ],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/security-audit.sh",
        "parameters": [],
        "lines": 9,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/n8n-bidirectional-sync.py",
        "parameters": [],
        "lines": 22,
        "complexity": 3,
        "calls": [
          "print",
          "print",
          "N8NBidirectionalSync",
          "run_sync",
          "getenv",
          "print",
          "exit",
          "print",
          "print",
          "print",
          "exit"
        ],
        "variables": [
          "sync_system",
          "result"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/test-workflows.sh",
        "parameters": [],
        "lines": 43,
        "complexity": 5,
        "calls": [],
        "variables": [
          "total_workflows",
          "passed_workflows",
          "failed_workflows",
          "workflow_name"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/n8n-sync-monitor.py",
        "parameters": [],
        "lines": 15,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "N8NSyncMonitor",
          "run_monitor",
          "getenv",
          "print",
          "exit"
        ],
        "variables": [
          "monitor"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/update-script-references.py",
        "parameters": [],
        "lines": 30,
        "complexity": 5,
        "calls": [
          "print",
          "print",
          "ScriptReferenceUpdater",
          "update_all_references",
          "create_script_index",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "len",
          "print",
          "len",
          "len"
        ],
        "variables": [
          "updater"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/production-readiness-assessment.sh",
        "parameters": [],
        "lines": 38,
        "complexity": 3,
        "calls": [],
        "variables": [
          "readiness_score"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/validate-api-keys.sh",
        "parameters": [],
        "lines": 20,
        "complexity": 3,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/add-architecture-memory.py",
        "parameters": [],
        "lines": 29,
        "complexity": 4,
        "calls": [
          "print",
          "print",
          "AlexAIArchitectureMemoryAdder",
          "add_memory",
          "print",
          "print",
          "items",
          "print",
          "print",
          "get",
          "print",
          "print",
          "print",
          "get",
          "len",
          "upper"
        ],
        "variables": [
          "memory_adder",
          "results",
          "success_count",
          "status"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/analyze-production-changes.sh",
        "parameters": [],
        "lines": 14,
        "complexity": 2,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 5,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 5,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 5,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/script-analyzer.py",
        "parameters": [],
        "lines": 39,
        "complexity": 6,
        "calls": [
          "print",
          "print",
          "ScriptAnalyzer",
          "print",
          "generate_analysis_report",
          "save_analysis",
          "save_memory",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "len",
          "len",
          "len"
        ],
        "variables": [
          "analyzer",
          "analysis"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/setup-bidirectional-sync.sh",
        "parameters": [],
        "lines": 28,
        "complexity": 2,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/master-safe-execute.sh",
        "parameters": [],
        "lines": 5,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/test-intelligent-discovery.sh",
        "parameters": [],
        "lines": 8,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/setup-hourly-scraping.sh",
        "parameters": [],
        "lines": 73,
        "complexity": 4,
        "calls": [
          "job",
          "timer",
          "based",
          "choice"
        ],
        "variables": [
          "action",
          "secret",
          "action",
          "secret",
          "action",
          "secret"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/setup-n8n-bidirectional-sync.sh",
        "parameters": [],
        "lines": 27,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/sync-dashboard.sh",
        "parameters": [],
        "lines": 17,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/secure-credential-manager.sh",
        "parameters": [],
        "lines": 33,
        "complexity": 3,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/n8n-change-monitor.sh",
        "parameters": [],
        "lines": 20,
        "complexity": 2,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/shell-prompt-safety-system.sh",
        "parameters": [],
        "lines": 27,
        "complexity": 2,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/production-shell-engine.sh",
        "parameters": [],
        "lines": 7,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/production-shell-engine.sh",
        "parameters": [],
        "lines": 7,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/intelligent-script-purge.py",
        "parameters": [],
        "lines": 53,
        "complexity": 7,
        "calls": [
          "print",
          "print",
          "IntelligentScriptPurge",
          "analyze_scripts_for_purging",
          "len",
          "len",
          "len",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "open",
          "dump",
          "input",
          "print",
          "print",
          "print",
          "lower",
          "execute_purge",
          "print",
          "len",
          "len",
          "len",
          "len",
          "len",
          "print",
          "print"
        ],
        "variables": [
          "purger",
          "purge_plan",
          "total_purge",
          "total_keep",
          "total_consolidate",
          "response"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/deep-code-analyzer.py",
        "parameters": [],
        "lines": 41,
        "complexity": 1,
        "calls": [
          "print",
          "print",
          "DeepCodeAnalyzer",
          "print",
          "analyze_all_scripts",
          "print",
          "print",
          "find_duplicate_functions",
          "find_redundant_scripts",
          "print",
          "print",
          "generate_consolidation_recommendations",
          "print",
          "print",
          "print",
          "print",
          "print",
          "save_analysis",
          "save_recommendations",
          "print",
          "print",
          "print",
          "print",
          "len",
          "len",
          "len",
          "len",
          "len",
          "len"
        ],
        "variables": [
          "analyzer",
          "analyses",
          "duplicate_functions",
          "redundant_scripts",
          "recommendations"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/validate-strings.sh",
        "parameters": [],
        "lines": 14,
        "complexity": 3,
        "calls": [],
        "variables": [
          "total_issues",
          "total_issues"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/add-quote-handling-memory-simple.py",
        "parameters": [],
        "lines": 33,
        "complexity": 7,
        "calls": [
          "print",
          "print",
          "AlexAIMemoryAdder",
          "add_memory",
          "print",
          "print",
          "items",
          "print",
          "print",
          "get",
          "print",
          "print",
          "print",
          "items",
          "print",
          "get",
          "len",
          "get",
          "get",
          "print",
          "upper",
          "get"
        ],
        "variables": [
          "memory_adder",
          "results",
          "success_count",
          "status"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/production-testing-suite.sh",
        "parameters": [],
        "lines": 33,
        "complexity": 3,
        "calls": [
          "test"
        ],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/automate-bidirectional-setup.sh",
        "parameters": [],
        "lines": 9,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/automate-bidirectional-setup.sh",
        "parameters": [],
        "lines": 9,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/deploy-complete-n8n-infrastructure.sh",
        "parameters": [],
        "lines": 33,
        "complexity": 5,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/string-manipulation-fix.sh",
        "parameters": [],
        "lines": 14,
        "complexity": 3,
        "calls": [],
        "variables": [
          "total_issues",
          "total_issues"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/string-manipulation-fix.sh",
        "parameters": [],
        "lines": 14,
        "complexity": 3,
        "calls": [],
        "variables": [
          "total_issues",
          "total_issues"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/generated/test-basic.sh",
        "parameters": [],
        "lines": 7,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/python/youtube_scraper_crew_integration.py",
        "parameters": [],
        "lines": 19,
        "complexity": 3,
        "calls": [
          "YouTubeScraperCrewIntegration",
          "request_youtube_analysis",
          "print",
          "len",
          "print",
          "print",
          "YouTubeScraperCrewIntegration",
          "list_crew_members",
          "items",
          "exit",
          "dumps",
          "print",
          "len"
        ],
        "variables": [
          "crew_member_id",
          "video_url",
          "analysis_focus",
          "scraper",
          "result",
          "scraper",
          "crew_list"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/final_monorepo_cleanup.py",
        "parameters": [],
        "lines": 28,
        "complexity": 4,
        "calls": [
          "FinalMonorepoCleanup",
          "run_final_cleanup",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "items",
          "print",
          "len",
          "len"
        ],
        "variables": [
          "cleanup",
          "results",
          "by_type",
          "project_type"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/turborepo_implementation_plan.py",
        "parameters": [],
        "lines": 25,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "TurborepoImplementationPlan",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "generate_implementation_plan",
          "print",
          "save_implementation_data",
          "print",
          "print",
          "print",
          "print",
          "len",
          "len",
          "len",
          "len"
        ],
        "variables": [
          "implementation_plan",
          "plan_file",
          "data_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/alex_ai_yolo_mode_integration_system.py",
        "parameters": [],
        "lines": 41,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "AlexAIYOLOModeIntegrationSystem",
          "run_comprehensive_integration",
          "get",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print"
        ],
        "variables": [
          "integration",
          "result"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/comprehensive_market_research_system.py",
        "parameters": [],
        "lines": 80,
        "complexity": 8,
        "calls": [
          "print",
          "print",
          "print",
          "MarketResearchSystem",
          "print",
          "keys",
          "print",
          "print",
          "print",
          "print",
          "print",
          "generate_market_research_report",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "open",
          "dump",
          "int",
          "len",
          "timestamp",
          "title",
          "title",
          "len",
          "len",
          "len",
          "len",
          "now"
        ],
        "variables": [
          "research_system",
          "report",
          "output_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/phase2_turborepo_optimization.py",
        "parameters": [],
        "lines": 26,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "Phase2TurborepoOptimization",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "execute_phase2",
          "print",
          "print",
          "print",
          "print",
          "print"
        ],
        "variables": [
          "optimization_system"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/crew_coordination_update_system.py",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [
          "simulate_crew_coordination_update"
        ],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/python/youtube_crew_memory_integration.py",
        "parameters": [],
        "lines": 25,
        "complexity": 5,
        "calls": [
          "print",
          "print",
          "YouTubeCrewMemoryIntegration",
          "print",
          "items",
          "print",
          "run_demo_analysis",
          "print",
          "print",
          "print",
          "get",
          "print",
          "print",
          "print",
          "print",
          "exists",
          "get",
          "get"
        ],
        "variables": [
          "integration",
          "result",
          "status"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/test_mcp_system.py",
        "parameters": [],
        "lines": 120,
        "complexity": 8,
        "calls": [
          "print",
          "print",
          "SimpleMCPMemoryOptimizer",
          "print",
          "print",
          "items",
          "print",
          "optimize_memory_storage",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "generate_optimization_report",
          "strftime",
          "print",
          "print",
          "print",
          "MemoryVector",
          "print",
          "print",
          "open",
          "write",
          "find_similar_memories",
          "print",
          "print",
          "print",
          "now",
          "list",
          "generate_embedding",
          "now",
          "now",
          "len",
          "len",
          "values",
          "print",
          "len",
          "join"
        ],
        "variables": [
          "optimizer",
          "sample_memories",
          "results",
          "report",
          "timestamp",
          "report_file",
          "memory",
          "sample_memory",
          "similar_memories",
          "similar_memory"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/enhanced_ai_prompts_system.py",
        "parameters": [],
        "lines": 64,
        "complexity": 5,
        "calls": [
          "print",
          "print",
          "print",
          "EnhancedAIPromptsSystem",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "keys",
          "print",
          "print",
          "create_integration_guide",
          "print",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "items",
          "print",
          "print",
          "items",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "open",
          "dump",
          "int",
          "timestamp",
          "now"
        ],
        "variables": [
          "prompts_system",
          "integration_guide",
          "output_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/alex_ai_credential_manager.py",
        "parameters": [],
        "lines": 6,
        "complexity": 1,
        "calls": [
          "AlexAICredentialManager",
          "run_comprehensive_setup"
        ],
        "variables": [
          "manager",
          "results"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/alex_ai_yolo_initialization.py",
        "parameters": [],
        "lines": 27,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "AlexAIYOLOInitialization",
          "run_complete_initialization",
          "get",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print"
        ],
        "variables": [
          "initialization",
          "result"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/alex_ai_memory_sharing_assessment.py",
        "parameters": [],
        "lines": 21,
        "complexity": 2,
        "calls": [
          "AlexAIMemorySharingAssessment",
          "run_comprehensive_assessment",
          "print_assessment_report",
          "strftime",
          "print",
          "print",
          "open",
          "dump",
          "now",
          "get"
        ],
        "variables": [
          "assessor",
          "assessment",
          "timestamp",
          "filename"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/alex_ai_crew_mermaid_models.py",
        "parameters": [],
        "lines": 42,
        "complexity": 1,
        "calls": [
          "AlexAICrewMermaidModels",
          "run_comprehensive_analysis",
          "print",
          "print",
          "open",
          "dump",
          "len"
        ],
        "variables": [
          "sample_company_data",
          "alex_ai_crew",
          "results"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/enhanced_unified_router.py",
        "parameters": [],
        "lines": 23,
        "complexity": 2,
        "calls": [
          "loads",
          "EnhancedUnifiedRouter",
          "route_request",
          "print",
          "read",
          "dumps",
          "print",
          "exit",
          "str",
          "dumps"
        ],
        "variables": [
          "input_data",
          "router",
          "result",
          "error_result"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/crew_learning_assessment.py",
        "parameters": [],
        "lines": 14,
        "complexity": 1,
        "calls": [
          "CrewLearningAssessment",
          "assess_crew_learning",
          "print",
          "print",
          "print",
          "open",
          "write"
        ],
        "variables": [
          "assessment",
          "report"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/optimized_web_crawler_system.py",
        "parameters": [],
        "lines": 97,
        "complexity": 8,
        "calls": [
          "print",
          "print",
          "print",
          "OptimizedWebCrawler",
          "print",
          "items",
          "print",
          "print",
          "items",
          "print",
          "print",
          "print",
          "print",
          "crawl_market_research",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "generate_supabase_schema",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "open",
          "dump",
          "open",
          "dump",
          "int",
          "int",
          "len",
          "len",
          "len",
          "timestamp",
          "timestamp",
          "title",
          "len",
          "title",
          "len",
          "title",
          "title",
          "len",
          "len",
          "now",
          "now"
        ],
        "variables": [
          "crawler",
          "target_markets",
          "crawl_results",
          "schema",
          "crawl_output",
          "schema_output"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/observation_lounge_crew_debrief.py",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [
          "simulate_observation_lounge_session"
        ],
        "variables": []
      },
      {
        "name": "main",
        "file_path": "scripts/python/enhanced_ai_prompts_deployment_system.py",
        "parameters": [],
        "lines": 12,
        "complexity": 1,
        "calls": [
          "EnhancedAIPromptsDeployment",
          "execute_all_next_steps",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "len",
          "len",
          "len",
          "get",
          "get",
          "get"
        ],
        "variables": [
          "deployment",
          "results"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/cursor_ai_behavior_analysis.py",
        "parameters": [],
        "lines": 26,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "CursorAIBehaviorAnalysis",
          "run_analysis",
          "get",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "get",
          "get",
          "get",
          "get"
        ],
        "variables": [
          "analysis",
          "result"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/alex_ai_job_search_system.py",
        "parameters": [],
        "lines": 11,
        "complexity": 1,
        "calls": [
          "AlexAIJobSearchSystem",
          "run_job_search_automation",
          "print",
          "print",
          "print",
          "print",
          "len",
          "len"
        ],
        "variables": [
          "job_search",
          "results"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/yolo_mode_crew_memory_update.py",
        "parameters": [],
        "lines": 23,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "YOLOModeCrewMemoryUpdate",
          "run_update",
          "get",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "get",
          "get",
          "get",
          "get",
          "get"
        ],
        "variables": [
          "update",
          "result"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/youtube_channel_intelligence_system.py",
        "parameters": [],
        "lines": 43,
        "complexity": 5,
        "calls": [
          "YouTubeChannelIntelligenceSystem",
          "print",
          "print",
          "print",
          "print",
          "len",
          "print",
          "print",
          "print",
          "print",
          "print",
          "exit",
          "int",
          "analyze_youtube_channel",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "len",
          "len",
          "print",
          "print",
          "print",
          "exit",
          "sum",
          "len",
          "len",
          "str",
          "len",
          "values"
        ],
        "variables": [
          "channel_url",
          "max_videos",
          "analysis_depth",
          "system",
          "analysis"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/crew_yolo_mode_memory_sync.py",
        "parameters": [],
        "lines": 35,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "CrewYOLOModeMemorySync",
          "run_crew_memory_sync",
          "get",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print"
        ],
        "variables": [
          "sync",
          "result"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/alex_ai_job_search_integration.py",
        "parameters": [],
        "lines": 6,
        "complexity": 1,
        "calls": [
          "AlexAIJobSearchIntegration",
          "run_integration"
        ],
        "variables": [
          "integration",
          "report"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/test_channel_intelligence_system.py",
        "parameters": [],
        "lines": 39,
        "complexity": 4,
        "calls": [
          "print",
          "print",
          "print",
          "ChannelIntelligenceTester",
          "run_all_tests",
          "print",
          "print",
          "print",
          "print",
          "open",
          "dump",
          "print",
          "exit",
          "print",
          "exit",
          "print",
          "int",
          "getenv",
          "timestamp",
          "now"
        ],
        "variables": [
          "required_env_vars",
          "missing_vars",
          "tester",
          "report",
          "report_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/cursor_ai_integration_memory_update.py",
        "parameters": [],
        "lines": 23,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "CursorAIIntegrationMemoryUpdate",
          "run_update",
          "get",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "get",
          "get",
          "get",
          "get",
          "get"
        ],
        "variables": [
          "update",
          "result"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/simple_youtube_crew_memory_demo.py",
        "parameters": [],
        "lines": 30,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "SimpleYouTubeCrewMemoryDemo",
          "print",
          "run_demo",
          "get",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "get",
          "get",
          "get",
          "get"
        ],
        "variables": [
          "demo",
          "result"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/comprehensive_yolo_stress_test.py",
        "parameters": [],
        "lines": 29,
        "complexity": 5,
        "calls": [
          "print",
          "print",
          "ComprehensiveYOLOStressTest",
          "run_all_stress_tests",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "len",
          "len",
          "print",
          "len",
          "print",
          "print",
          "len",
          "len",
          "len",
          "print",
          "print",
          "join"
        ],
        "variables": [
          "stress_test",
          "report_file",
          "total_tests",
          "success_rate"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/observation_lounge_yolo_mode_debrief.py",
        "parameters": [],
        "lines": 23,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "ObservationLoungeYOLOModeDebrief",
          "conduct_yolo_mode_debrief",
          "print",
          "print",
          "print",
          "print",
          "generate_debrief_report",
          "print",
          "print",
          "print",
          "print",
          "enumerate",
          "print",
          "len"
        ],
        "variables": [
          "debrief",
          "session",
          "report_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/knowledge_gap_research_plan.py",
        "parameters": [],
        "lines": 92,
        "complexity": 8,
        "calls": [
          "print",
          "print",
          "print",
          "create_research_plan",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "items",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "open",
          "dump",
          "int",
          "timestamp",
          "title",
          "join",
          "len",
          "title",
          "now",
          "replace",
          "replace"
        ],
        "variables": [
          "research_plan",
          "sprint_structure",
          "output_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/mcp_memory_optimization_system.py",
        "parameters": [],
        "lines": 73,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "MCPMemoryOptimizationSystem",
          "print",
          "print",
          "optimize_memory_storage",
          "generate_optimization_report",
          "print",
          "strftime",
          "print",
          "print",
          "MemoryVector",
          "open",
          "write",
          "now",
          "generate_embedding",
          "now",
          "now",
          "len"
        ],
        "variables": [
          "optimizer",
          "sample_memories",
          "results",
          "report",
          "timestamp",
          "report_file",
          "memory"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/research_phase_execution_plan.py",
        "parameters": [],
        "lines": 80,
        "complexity": 10,
        "calls": [
          "print",
          "print",
          "print",
          "ResearchPhaseExecutionPlan",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "generate_execution_plan",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "items",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "print",
          "items",
          "print",
          "open",
          "dump",
          "print",
          "print",
          "int",
          "len",
          "timestamp",
          "title",
          "title",
          "title",
          "len",
          "len",
          "len",
          "len",
          "title",
          "title",
          "title",
          "title",
          "now",
          "replace",
          "replace",
          "replace",
          "replace",
          "replace",
          "replace"
        ],
        "variables": [
          "execution_plan",
          "plan",
          "output_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/business_operations_legal_system.py",
        "parameters": [],
        "lines": 105,
        "complexity": 5,
        "calls": [
          "print",
          "print",
          "print",
          "BusinessOperationsLegalSystem",
          "print",
          "items",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "generate_comprehensive_business_plan",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "open",
          "dump",
          "int",
          "len",
          "len",
          "len",
          "len",
          "len",
          "len",
          "len",
          "len",
          "timestamp",
          "title",
          "title",
          "len",
          "title",
          "now",
          "replace"
        ],
        "variables": [
          "business_ops",
          "business_name",
          "target_markets",
          "business_plan",
          "llc_setup",
          "payment_integration",
          "business_model",
          "financial",
          "timeline",
          "output_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/advanced_ai_agent_development_system.py",
        "parameters": [],
        "lines": 33,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "print",
          "AdvancedAIAgentOrchestrator",
          "create_advanced_agent_system",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "open",
          "dump",
          "int",
          "len",
          "timestamp",
          "get",
          "now"
        ],
        "variables": [
          "orchestrator",
          "system_result",
          "config_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/simple_turborepo_research_system.py",
        "parameters": [],
        "lines": 24,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "SimpleTurborepoResearchSystem",
          "print",
          "items",
          "print",
          "conduct_crew_research",
          "print",
          "generate_research_report",
          "print",
          "save_research_data",
          "print",
          "print",
          "print",
          "print",
          "print",
          "len",
          "len"
        ],
        "variables": [
          "research_system",
          "report_file",
          "data_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/agile_sprint_dashboard_system.py",
        "parameters": [],
        "lines": 88,
        "complexity": 6,
        "calls": [
          "print",
          "print",
          "print",
          "AgileSprintDashboard",
          "print",
          "items",
          "print",
          "print",
          "items",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "generate_multi_project_dashboard",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "open",
          "dump",
          "int",
          "timestamp",
          "title",
          "now",
          "replace"
        ],
        "variables": [
          "dashboard",
          "config",
          "multi_dashboard",
          "metrics",
          "output_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/test_youtube_scraper_integration.py",
        "parameters": [],
        "lines": 39,
        "complexity": 5,
        "calls": [
          "print",
          "print",
          "print",
          "YouTubeScraperTester",
          "run_all_tests",
          "print",
          "print",
          "print",
          "exit",
          "open",
          "dump",
          "print",
          "exit",
          "print",
          "exit",
          "print",
          "int",
          "getenv",
          "timestamp",
          "now"
        ],
        "variables": [
          "required_env_vars",
          "missing_vars",
          "tester",
          "report",
          "report_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/crew_business_readiness_consensus.py",
        "parameters": [],
        "lines": 83,
        "complexity": 4,
        "calls": [
          "print",
          "print",
          "print",
          "simulate_crew_consensus",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "open",
          "dump",
          "int",
          "timestamp",
          "join",
          "now"
        ],
        "variables": [
          "consensus_results",
          "overall",
          "timeline",
          "risk",
          "success",
          "output_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/crew_coordinator.py",
        "parameters": [],
        "lines": 22,
        "complexity": 2,
        "calls": [
          "loads",
          "ObservationLoungeCoordinator",
          "coordinate_observation_lounge",
          "print",
          "read",
          "dumps",
          "print",
          "exit",
          "str",
          "isoformat",
          "dumps",
          "now"
        ],
        "variables": [
          "input_data",
          "coordinator",
          "result",
          "error_result"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/phase3_alex_ai_integration.py",
        "parameters": [],
        "lines": 25,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "Phase3AlexAIIntegration",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "execute_phase3",
          "print",
          "print",
          "print",
          "print"
        ],
        "variables": [
          "integration_system"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/alex_ai_yolo_mode_memory_integration.py",
        "parameters": [],
        "lines": 33,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "YOLOModeMemoryIntegration",
          "run_memory_integration",
          "get",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print"
        ],
        "variables": [
          "integration",
          "result"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/supabase_data_import_script.py",
        "parameters": [],
        "lines": 57,
        "complexity": 3,
        "calls": [
          "print",
          "print",
          "print",
          "SupabaseDataImporter",
          "print",
          "items",
          "print",
          "print",
          "generate_import_data",
          "sum",
          "print",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "generate_supabase_import_script",
          "int",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "timestamp",
          "open",
          "dump",
          "open",
          "write",
          "len",
          "values",
          "now",
          "title",
          "len",
          "title",
          "len"
        ],
        "variables": [
          "importer",
          "import_data",
          "total_records",
          "import_script",
          "timestamp",
          "import_data_file",
          "import_script_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/observation_lounge_memory_consensus.py",
        "parameters": [],
        "lines": 17,
        "complexity": 1,
        "calls": [
          "ObservationLoungeMemoryConsensus",
          "run_observation_lounge_session",
          "print_observation_lounge_report",
          "strftime",
          "print",
          "open",
          "dump",
          "now"
        ],
        "variables": [
          "session",
          "result",
          "timestamp",
          "filename"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/test_alex_ai_system.py",
        "parameters": [],
        "lines": 43,
        "complexity": 5,
        "calls": [
          "print",
          "print",
          "print",
          "print",
          "print",
          "sum",
          "len",
          "print",
          "print",
          "print",
          "print",
          "print",
          "test_func",
          "append",
          "print",
          "append"
        ],
        "variables": [
          "tests",
          "results",
          "passed",
          "total",
          "status",
          "success"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/email_research_system.py",
        "parameters": [],
        "lines": 22,
        "complexity": 1,
        "calls": [
          "EmailResearchSystem",
          "run_comprehensive_research",
          "generate_email_database",
          "save_results",
          "print",
          "print",
          "print",
          "open",
          "dump",
          "len"
        ],
        "variables": [
          "email_research",
          "results",
          "email_db"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/fix_credential_security.py",
        "parameters": [],
        "lines": 35,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "print",
          "check_current_credentials",
          "get",
          "create_anthropic_key_prompt",
          "print",
          "print",
          "create_secure_credential_loader",
          "test_credential_access",
          "create_crew_memory_about_fix",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "test_credential_access",
          "create_crew_memory_about_fix",
          "print"
        ],
        "variables": [
          "current_creds"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/progressive_git_push_system.py",
        "parameters": [],
        "lines": 22,
        "complexity": 1,
        "calls": [
          "ProgressiveGitPushSystem",
          "create_alex_ai_progressive_steps",
          "print_progressive_report",
          "print",
          "print",
          "print",
          "isoformat",
          "len",
          "now"
        ],
        "variables": [
          "pusher"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/yolo_mode_issue_investigation.py",
        "parameters": [],
        "lines": 19,
        "complexity": 1,
        "calls": [
          "print",
          "print",
          "YOLOModeIssueInvestigation",
          "run_investigation",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print"
        ],
        "variables": [
          "investigation",
          "report_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/mcp_library_computer_system.py",
        "parameters": [],
        "lines": 17,
        "complexity": 1,
        "calls": [
          "MCPLibraryComputerSystem",
          "run_knowledge_distribution_cycle",
          "print_distribution_report",
          "strftime",
          "print",
          "open",
          "dump",
          "now"
        ],
        "variables": [
          "library",
          "results",
          "timestamp",
          "filename"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/phase1_turborepo_setup.py",
        "parameters": [],
        "lines": 26,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "Phase1TurborepoSetup",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "execute_phase1",
          "print",
          "print",
          "print",
          "print",
          "print"
        ],
        "variables": [
          "setup_system"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/n8n_integration_test_system.py",
        "parameters": [],
        "lines": 12,
        "complexity": 2,
        "calls": [
          "N8NIntegrationTester",
          "run_comprehensive_test",
          "print",
          "print",
          "print"
        ],
        "variables": [
          "tester",
          "results"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/proper_yolo_mode_configuration.py",
        "parameters": [],
        "lines": 27,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "ProperYOLOModeConfiguration",
          "run_proper_configuration",
          "get",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print"
        ],
        "variables": [
          "config",
          "result"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/intelligent_monorepo_cleanup.py",
        "parameters": [],
        "lines": 28,
        "complexity": 3,
        "calls": [
          "IntelligentMonorepoCleanup",
          "run_intelligent_cleanup",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "len",
          "print",
          "print",
          "exists",
          "print",
          "len",
          "len"
        ],
        "variables": [
          "analysis_file",
          "cleanup",
          "results"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/company_research_system.py",
        "parameters": [],
        "lines": 22,
        "complexity": 1,
        "calls": [
          "CompanyResearchSystem",
          "run_research",
          "generate_contact_database",
          "save_results",
          "print",
          "print",
          "print",
          "open",
          "dump",
          "len",
          "sum",
          "len",
          "values"
        ],
        "variables": [
          "research_system",
          "results",
          "contact_db"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/alex-ai-universal-deployment-system.py",
        "parameters": [],
        "lines": 12,
        "complexity": 1,
        "calls": [
          "AlexAIUniversalDeployment",
          "execute_universal_deployment",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print"
        ],
        "variables": [
          "deployment",
          "results"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/alex_ai_comprehensive_assessment.py",
        "parameters": [],
        "lines": 17,
        "complexity": 1,
        "calls": [
          "AlexAIComprehensiveAssessment",
          "run_comprehensive_assessment",
          "print_comprehensive_report",
          "strftime",
          "print",
          "open",
          "dump",
          "now"
        ],
        "variables": [
          "assessor",
          "assessment",
          "timestamp",
          "filename"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/business_readiness_assessment.py",
        "parameters": [],
        "lines": 74,
        "complexity": 8,
        "calls": [
          "print",
          "print",
          "print",
          "simulate_business_readiness_assessment",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "items",
          "print",
          "print",
          "print",
          "items",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "open",
          "dump",
          "int",
          "timestamp",
          "title",
          "title",
          "join",
          "now",
          "replace",
          "replace"
        ],
        "variables": [
          "assessment_results",
          "overall",
          "output_file"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/demo_youtube_scraper_system.py",
        "parameters": [],
        "lines": 39,
        "complexity": 5,
        "calls": [
          "print",
          "print",
          "print",
          "YouTubeScraperSystemDemo",
          "print",
          "print",
          "print",
          "print",
          "strip",
          "print",
          "print",
          "print",
          "print",
          "run_complete_demo",
          "print",
          "input",
          "interactive_demo",
          "print",
          "run_complete_demo",
          "getenv"
        ],
        "variables": [
          "required_env_vars",
          "missing_vars",
          "demo",
          "choice"
        ]
      },
      {
        "name": "main",
        "file_path": "scripts/python/store_crew_memories_supabase.py",
        "parameters": [],
        "lines": 26,
        "complexity": 3,
        "calls": [
          "max",
          "print",
          "SupabaseMemoryStorage",
          "store_crew_memories",
          "create_memory_summary",
          "print",
          "print",
          "print",
          "listdir",
          "startswith",
          "endswith"
        ],
        "variables": [
          "memories_files",
          "latest_file",
          "storage",
          "result",
          "summary"
        ]
      }
    ],
    "print_status": [
      {
        "name": "print_status",
        "file_path": "scripts/greg-community-intelligence-dual-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_status",
        "file_path": "scripts/milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_status",
        "file_path": "scripts/security-audit.sh",
        "parameters": [],
        "lines": 15,
        "complexity": 2,
        "calls": [],
        "variables": [
          "status",
          "message"
        ]
      },
      {
        "name": "print_status",
        "file_path": "scripts/channel-intelligence-dual-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "print_success": [
      {
        "name": "print_success",
        "file_path": "scripts/greg-community-intelligence-dual-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_success",
        "file_path": "scripts/channel-intelligence-dual-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_success",
        "file_path": "scripts/alex-ai-universal-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_success",
        "file_path": "scripts/alex-ai-universal-git-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_success",
        "file_path": "scripts/enhanced-ai-prompts-dual-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "print_error": [
      {
        "name": "print_error",
        "file_path": "scripts/greg-community-intelligence-dual-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_error",
        "file_path": "scripts/milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_error",
        "file_path": "scripts/channel-intelligence-dual-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_error",
        "file_path": "scripts/alex-ai-universal-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_error",
        "file_path": "scripts/alex-ai-universal-git-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_error",
        "file_path": "scripts/enhanced-ai-prompts-dual-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "print_section": [
      {
        "name": "print_section",
        "file_path": "scripts/greg-community-intelligence-dual-milestone-push.sh",
        "parameters": [],
        "lines": 6,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_section",
        "file_path": "scripts/channel-intelligence-dual-milestone-push.sh",
        "parameters": [],
        "lines": 6,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "__init__": [
      {
        "name": "__init__",
        "file_path": "scripts/intelligent-script-discovery.py",
        "parameters": [
          "self",
          "scripts_dir"
        ],
        "lines": 4,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/script-consolidation-plan.py",
        "parameters": [
          "self",
          "analysis_file"
        ],
        "lines": 6,
        "complexity": 1,
        "calls": [
          "load_analysis"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/script-memory-system.py",
        "parameters": [
          "self",
          "supabase_url",
          "supabase_key"
        ],
        "lines": 10,
        "complexity": 3,
        "calls": [
          "SentenceTransformer",
          "getenv",
          "getenv"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/add-quote-handling-memory.py",
        "parameters": [
          "self"
        ],
        "lines": 92,
        "complexity": 1,
        "calls": [
          "isoformat",
          "now"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/validate-consolidated-structure.py",
        "parameters": [
          "self",
          "scripts_dir"
        ],
        "lines": 10,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/n8n-bidirectional-sync.py",
        "parameters": [
          "self"
        ],
        "lines": 13,
        "complexity": 1,
        "calls": [
          "getenv",
          "getenv",
          "makedirs",
          "makedirs",
          "load_sync_history"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/n8n-sync-monitor.py",
        "parameters": [
          "self"
        ],
        "lines": 5,
        "complexity": 1,
        "calls": [
          "getenv",
          "getenv",
          "int",
          "int",
          "getenv",
          "getenv"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/update-script-references.py",
        "parameters": [
          "self",
          "scripts_dir"
        ],
        "lines": 4,
        "complexity": 1,
        "calls": [
          "load_consolidation_mapping"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/add-architecture-memory.py",
        "parameters": [
          "self"
        ],
        "lines": 93,
        "complexity": 1,
        "calls": [
          "isoformat",
          "now"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/script-analyzer.py",
        "parameters": [
          "self",
          "scripts_dir"
        ],
        "lines": 6,
        "complexity": 1,
        "calls": [
          "define_categories"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/intelligent-script-purge.py",
        "parameters": [
          "self",
          "scripts_dir"
        ],
        "lines": 18,
        "complexity": 1,
        "calls": [
          "set",
          "set",
          "set",
          "set",
          "set"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/deep-code-analyzer.py",
        "parameters": [
          "self",
          "scripts_dir"
        ],
        "lines": 6,
        "complexity": 1,
        "calls": [
          "defaultdict"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/add-quote-handling-memory-simple.py",
        "parameters": [
          "self"
        ],
        "lines": 91,
        "complexity": 1,
        "calls": [
          "isoformat",
          "now"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/youtube_scraper_crew_integration.py",
        "parameters": [
          "self"
        ],
        "lines": 62,
        "complexity": 1,
        "calls": [
          "getenv",
          "getenv",
          "getenv"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/final_monorepo_cleanup.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 6,
        "complexity": 1,
        "calls": [
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/turborepo_implementation_plan.py",
        "parameters": [
          "self"
        ],
        "lines": 4,
        "complexity": 1,
        "calls": [
          "_define_implementation_phases",
          "_analyze_current_structure",
          "_create_turborepo_config"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/alex_ai_yolo_mode_integration_system.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 3,
        "complexity": 1,
        "calls": [
          "resolve",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/comprehensive_market_research_system.py",
        "parameters": [
          "self"
        ],
        "lines": 62,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/phase2_turborepo_optimization.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 5,
        "complexity": 1,
        "calls": [
          "resolve",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/youtube_crew_memory_integration.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 4,
        "complexity": 1,
        "calls": [
          "resolve",
          "_locate_youtube_scripts",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/test_mcp_system.py",
        "parameters": [
          "self"
        ],
        "lines": 5,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/enhanced_ai_prompts_system.py",
        "parameters": [
          "self"
        ],
        "lines": 28,
        "complexity": 1,
        "calls": [
          "_get_supabase_integration_prompt",
          "_get_n8n_workflow_prompt",
          "_get_claude_analysis_prompt",
          "_get_system_integration_prompt",
          "_get_market_research_prompt",
          "_get_business_validation_prompt"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/alex_ai_credential_manager.py",
        "parameters": [
          "self"
        ],
        "lines": 12,
        "complexity": 1,
        "calls": [
          "home",
          "home"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/alex_ai_yolo_initialization.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 4,
        "complexity": 1,
        "calls": [
          "resolve",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/alex_ai_memory_sharing_assessment.py",
        "parameters": [
          "self"
        ],
        "lines": 16,
        "complexity": 1,
        "calls": [
          "getenv",
          "getenv"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/alex_ai_crew_mermaid_models.py",
        "parameters": [
          "self"
        ],
        "lines": 16,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/enhanced_unified_router.py",
        "parameters": [
          "self"
        ],
        "lines": 32,
        "complexity": 2,
        "calls": [
          "getenv",
          "getenv",
          "getenv",
          "getenv"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/crew_learning_assessment.py",
        "parameters": [
          "self"
        ],
        "lines": 4,
        "complexity": 1,
        "calls": [
          "strftime",
          "now"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/optimized_web_crawler_system.py",
        "parameters": [
          "self"
        ],
        "lines": 51,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/enhanced_ai_prompts_deployment_system.py",
        "parameters": [
          "self"
        ],
        "lines": 29,
        "complexity": 1,
        "calls": [
          "isoformat",
          "now"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/cursor_ai_behavior_analysis.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 2,
        "complexity": 1,
        "calls": [
          "resolve",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/alex_ai_job_search_system.py",
        "parameters": [
          "self"
        ],
        "lines": 5,
        "complexity": 1,
        "calls": [
          "init_database",
          "load_job_opportunities",
          "load_org_structures"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/yolo_mode_crew_memory_update.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 2,
        "complexity": 1,
        "calls": [
          "resolve",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/youtube_channel_intelligence_system.py",
        "parameters": [
          "self"
        ],
        "lines": 67,
        "complexity": 1,
        "calls": [
          "YouTubeScraperCrewIntegration",
          "getenv",
          "getenv",
          "getenv"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/crew_yolo_mode_memory_sync.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 3,
        "complexity": 1,
        "calls": [
          "resolve",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/alex_ai_job_search_integration.py",
        "parameters": [
          "self"
        ],
        "lines": 5,
        "complexity": 1,
        "calls": [
          "join",
          "init_database"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/test_channel_intelligence_system.py",
        "parameters": [
          "self"
        ],
        "lines": 7,
        "complexity": 1,
        "calls": [
          "YouTubeChannelIntelligenceSystem"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/cursor_ai_integration_memory_update.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 2,
        "complexity": 1,
        "calls": [
          "resolve",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/simple_youtube_crew_memory_demo.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 3,
        "complexity": 1,
        "calls": [
          "resolve",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/comprehensive_yolo_stress_test.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 5,
        "complexity": 1,
        "calls": [
          "resolve",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/observation_lounge_yolo_mode_debrief.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 3,
        "complexity": 1,
        "calls": [
          "resolve",
          "_initialize_crew",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/mcp_memory_optimization_system.py",
        "parameters": [
          "self",
          "supabase_client",
          "openai_client"
        ],
        "lines": 9,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/research_phase_execution_plan.py",
        "parameters": [
          "self"
        ],
        "lines": 158,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/repository_optimization_analysis.py",
        "parameters": [
          "self"
        ],
        "lines": 4,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/business_operations_legal_system.py",
        "parameters": [
          "self"
        ],
        "lines": 108,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/advanced_ai_agent_development_system.py",
        "parameters": [
          "self",
          "agent_id",
          "specialization",
          "enhanced_prompts_system"
        ],
        "lines": 8,
        "complexity": 1,
        "calls": [
          "isoformat",
          "now"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/advanced_ai_agent_development_system.py",
        "parameters": [
          "self"
        ],
        "lines": 5,
        "complexity": 1,
        "calls": [
          "isoformat",
          "now"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/simple_turborepo_research_system.py",
        "parameters": [
          "self"
        ],
        "lines": 4,
        "complexity": 1,
        "calls": [
          "_initialize_crew",
          "_load_turborepo_knowledge"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/agile_sprint_dashboard_system.py",
        "parameters": [
          "self"
        ],
        "lines": 109,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/test_youtube_scraper_integration.py",
        "parameters": [
          "self"
        ],
        "lines": 8,
        "complexity": 1,
        "calls": [
          "YouTubeScraperCrewIntegration"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/crew_coordinator.py",
        "parameters": [
          "self"
        ],
        "lines": 63,
        "complexity": 2,
        "calls": [
          "getenv",
          "getenv",
          "getenv",
          "getenv",
          "getenv"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/phase3_alex_ai_integration.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 4,
        "complexity": 1,
        "calls": [
          "resolve",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/alex_ai_yolo_mode_memory_integration.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 3,
        "complexity": 1,
        "calls": [
          "resolve",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/mcp_integration_system.py",
        "parameters": [
          "self",
          "supabase_client",
          "openai_client",
          "n8n_base_url"
        ],
        "lines": 8,
        "complexity": 2,
        "calls": [
          "MCPMemoryOptimizationSystem"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/supabase_data_import_script.py",
        "parameters": [
          "self"
        ],
        "lines": 120,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/observation_lounge_memory_consensus.py",
        "parameters": [
          "self"
        ],
        "lines": 50,
        "complexity": 1,
        "calls": [
          "getenv",
          "getenv"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/email_research_system.py",
        "parameters": [
          "self"
        ],
        "lines": 76,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/turborepo_research_system.py",
        "parameters": [
          "self"
        ],
        "lines": 5,
        "complexity": 1,
        "calls": [
          "_initialize_crew"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/progressive_git_push_system.py",
        "parameters": [
          "self"
        ],
        "lines": 4,
        "complexity": 1,
        "calls": [
          "getcwd"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/yolo_mode_issue_investigation.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/mcp_library_computer_system.py",
        "parameters": [
          "self"
        ],
        "lines": 107,
        "complexity": 1,
        "calls": [
          "getenv",
          "getenv",
          "getenv",
          "getenv"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/phase1_turborepo_setup.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 4,
        "complexity": 1,
        "calls": [
          "resolve",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/n8n_integration_test_system.py",
        "parameters": [
          "self"
        ],
        "lines": 5,
        "complexity": 1,
        "calls": [
          "getenv",
          "getenv"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/proper_yolo_mode_configuration.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 2,
        "complexity": 1,
        "calls": [
          "resolve",
          "Path"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/intelligent_monorepo_cleanup.py",
        "parameters": [
          "self",
          "project_root"
        ],
        "lines": 5,
        "complexity": 1,
        "calls": [
          "Path",
          "set"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/company_research_system.py",
        "parameters": [
          "self"
        ],
        "lines": 86,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/alex-ai-universal-deployment-system.py",
        "parameters": [
          "self"
        ],
        "lines": 41,
        "complexity": 1,
        "calls": [
          "isoformat",
          "now"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/alex_ai_comprehensive_assessment.py",
        "parameters": [
          "self"
        ],
        "lines": 3,
        "complexity": 1,
        "calls": [
          "AlexAIMemorySharingAssessment",
          "CrewPersonalHistoryAnalysis"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/demo_youtube_scraper_system.py",
        "parameters": [
          "self"
        ],
        "lines": 10,
        "complexity": 1,
        "calls": [
          "YouTubeScraperCrewIntegration",
          "ObservationLoungeCoordinator"
        ],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/clean_secrets.py",
        "parameters": [
          "self"
        ],
        "lines": 24,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "__init__",
        "file_path": "scripts/python/store_crew_memories_supabase.py",
        "parameters": [
          "self"
        ],
        "lines": 8,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "load_analysis": [
      {
        "name": "load_analysis",
        "file_path": "scripts/intelligent-script-discovery.py",
        "parameters": [
          "self"
        ],
        "lines": 10,
        "complexity": 3,
        "calls": [
          "exists",
          "error",
          "open",
          "load"
        ],
        "variables": []
      },
      {
        "name": "load_analysis",
        "file_path": "scripts/script-consolidation-plan.py",
        "parameters": [
          "self"
        ],
        "lines": 8,
        "complexity": 2,
        "calls": [
          "open",
          "load",
          "error"
        ],
        "variables": []
      }
    ],
    "create_backup": [
      {
        "name": "create_backup",
        "file_path": "scripts/script-consolidation-plan.py",
        "parameters": [
          "self"
        ],
        "lines": 5,
        "complexity": 1,
        "calls": [
          "copytree",
          "info",
          "strftime",
          "now"
        ],
        "variables": [
          "backup_dir"
        ]
      },
      {
        "name": "create_backup",
        "file_path": "scripts/intelligent-script-purge.py",
        "parameters": [
          "self"
        ],
        "lines": 5,
        "complexity": 1,
        "calls": [
          "copytree",
          "info",
          "strftime",
          "now"
        ],
        "variables": [
          "backup_dir"
        ]
      },
      {
        "name": "create_backup",
        "file_path": "scripts/python/final_monorepo_cleanup.py",
        "parameters": [
          "self"
        ],
        "lines": 8,
        "complexity": 1,
        "calls": [
          "strftime",
          "mkdir",
          "log",
          "str",
          "now"
        ],
        "variables": [
          "timestamp"
        ]
      },
      {
        "name": "create_backup",
        "file_path": "scripts/python/intelligent_monorepo_cleanup.py",
        "parameters": [
          "self"
        ],
        "lines": 8,
        "complexity": 1,
        "calls": [
          "strftime",
          "mkdir",
          "log",
          "str",
          "now"
        ],
        "variables": [
          "timestamp"
        ]
      }
    ],
    "print_info": [
      {
        "name": "print_info",
        "file_path": "scripts/milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_info",
        "file_path": "scripts/alex-ai-universal-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_info",
        "file_path": "scripts/alex-ai-universal-git-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_info",
        "file_path": "scripts/enhanced-ai-prompts-dual-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "print_warning": [
      {
        "name": "print_warning",
        "file_path": "scripts/milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_warning",
        "file_path": "scripts/alex-ai-universal-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_warning",
        "file_path": "scripts/alex-ai-universal-git-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_warning",
        "file_path": "scripts/enhanced-ai-prompts-dual-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "safe_execute": [
      {
        "name": "safe_execute",
        "file_path": "scripts/safe-execute.sh",
        "parameters": [],
        "lines": 23,
        "complexity": 4,
        "calls": [],
        "variables": [
          "command",
          "description",
          "safe_command"
        ]
      },
      {
        "name": "safe_execute",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 12,
        "complexity": 2,
        "calls": [],
        "variables": [
          "command",
          "description"
        ]
      },
      {
        "name": "safe_execute",
        "file_path": "scripts/master-safe-execute.sh",
        "parameters": [],
        "lines": 12,
        "complexity": 2,
        "calls": [],
        "variables": [
          "command",
          "description"
        ]
      },
      {
        "name": "safe_execute",
        "file_path": "scripts/shell-prompt-safety-system.sh",
        "parameters": [],
        "lines": 23,
        "complexity": 5,
        "calls": [],
        "variables": [
          "command",
          "description",
          "safe_command"
        ]
      },
      {
        "name": "safe_execute",
        "file_path": "scripts/string-manipulation-fix.sh",
        "parameters": [],
        "lines": 23,
        "complexity": 4,
        "calls": [],
        "variables": [
          "command",
          "description",
          "safe_command"
        ]
      }
    ],
    "safe_status": [
      {
        "name": "safe_status",
        "file_path": "scripts/safe-execute.sh",
        "parameters": [],
        "lines": 7,
        "complexity": 1,
        "calls": [],
        "variables": [
          "component",
          "status",
          "icon"
        ]
      },
      {
        "name": "safe_status",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 6,
        "complexity": 1,
        "calls": [],
        "variables": [
          "component",
          "status",
          "icon"
        ]
      },
      {
        "name": "safe_status",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 6,
        "complexity": 1,
        "calls": [],
        "variables": [
          "component",
          "status",
          "icon"
        ]
      },
      {
        "name": "safe_status",
        "file_path": "scripts/master-safe-execute.sh",
        "parameters": [],
        "lines": 6,
        "complexity": 1,
        "calls": [],
        "variables": [
          "component",
          "status",
          "icon"
        ]
      },
      {
        "name": "safe_status",
        "file_path": "scripts/string-manipulation-fix.sh",
        "parameters": [],
        "lines": 7,
        "complexity": 1,
        "calls": [],
        "variables": [
          "component",
          "status",
          "icon"
        ]
      },
      {
        "name": "safe_status",
        "file_path": "scripts/string-manipulation-fix.sh",
        "parameters": [],
        "lines": 7,
        "complexity": 1,
        "calls": [],
        "variables": [
          "component",
          "status",
          "icon"
        ]
      }
    ],
    "safe_milestone": [
      {
        "name": "safe_milestone",
        "file_path": "scripts/safe-execute.sh",
        "parameters": [],
        "lines": 10,
        "complexity": 1,
        "calls": [],
        "variables": [
          "title",
          "description"
        ]
      },
      {
        "name": "safe_milestone",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 9,
        "complexity": 1,
        "calls": [],
        "variables": [
          "title",
          "description"
        ]
      },
      {
        "name": "safe_milestone",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 9,
        "complexity": 1,
        "calls": [],
        "variables": [
          "title",
          "description"
        ]
      },
      {
        "name": "safe_milestone",
        "file_path": "scripts/master-safe-execute.sh",
        "parameters": [],
        "lines": 9,
        "complexity": 1,
        "calls": [],
        "variables": [
          "title",
          "description"
        ]
      },
      {
        "name": "safe_milestone",
        "file_path": "scripts/string-manipulation-fix.sh",
        "parameters": [],
        "lines": 10,
        "complexity": 1,
        "calls": [],
        "variables": [
          "title",
          "description"
        ]
      },
      {
        "name": "safe_milestone",
        "file_path": "scripts/string-manipulation-fix.sh",
        "parameters": [],
        "lines": 10,
        "complexity": 1,
        "calls": [],
        "variables": [
          "title",
          "description"
        ]
      },
      {
        "name": "safe_milestone",
        "file_path": "scripts/templates/safe-output/milestone.sh",
        "parameters": [],
        "lines": 10,
        "complexity": 1,
        "calls": [],
        "variables": [
          "title",
          "description"
        ]
      }
    ],
    "safe_progress": [
      {
        "name": "safe_progress",
        "file_path": "scripts/safe-execute.sh",
        "parameters": [],
        "lines": 12,
        "complexity": 2,
        "calls": [],
        "variables": [
          "step",
          "status"
        ]
      },
      {
        "name": "safe_progress",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 11,
        "complexity": 2,
        "calls": [],
        "variables": [
          "step",
          "status"
        ]
      },
      {
        "name": "safe_progress",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 11,
        "complexity": 2,
        "calls": [],
        "variables": [
          "step",
          "status"
        ]
      },
      {
        "name": "safe_progress",
        "file_path": "scripts/master-safe-execute.sh",
        "parameters": [],
        "lines": 11,
        "complexity": 2,
        "calls": [],
        "variables": [
          "step",
          "status"
        ]
      },
      {
        "name": "safe_progress",
        "file_path": "scripts/string-manipulation-fix.sh",
        "parameters": [],
        "lines": 12,
        "complexity": 2,
        "calls": [],
        "variables": [
          "step",
          "status"
        ]
      },
      {
        "name": "safe_progress",
        "file_path": "scripts/string-manipulation-fix.sh",
        "parameters": [],
        "lines": 12,
        "complexity": 2,
        "calls": [],
        "variables": [
          "step",
          "status"
        ]
      },
      {
        "name": "safe_progress",
        "file_path": "scripts/templates/safe-output/progress.sh",
        "parameters": [],
        "lines": 12,
        "complexity": 2,
        "calls": [],
        "variables": [
          "step",
          "status"
        ]
      }
    ],
    "safe_list": [
      {
        "name": "safe_list",
        "file_path": "scripts/safe-execute.sh",
        "parameters": [],
        "lines": 15,
        "complexity": 2,
        "calls": [],
        "variables": [
          "title",
          "items"
        ]
      },
      {
        "name": "safe_list",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 12,
        "complexity": 2,
        "calls": [],
        "variables": [
          "title",
          "items"
        ]
      },
      {
        "name": "safe_list",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 12,
        "complexity": 2,
        "calls": [],
        "variables": [
          "title",
          "items"
        ]
      },
      {
        "name": "safe_list",
        "file_path": "scripts/master-safe-execute.sh",
        "parameters": [],
        "lines": 12,
        "complexity": 2,
        "calls": [],
        "variables": [
          "title",
          "items"
        ]
      },
      {
        "name": "safe_list",
        "file_path": "scripts/string-manipulation-fix.sh",
        "parameters": [],
        "lines": 15,
        "complexity": 2,
        "calls": [],
        "variables": [
          "title",
          "items"
        ]
      },
      {
        "name": "safe_list",
        "file_path": "scripts/string-manipulation-fix.sh",
        "parameters": [],
        "lines": 15,
        "complexity": 2,
        "calls": [],
        "variables": [
          "title",
          "items"
        ]
      },
      {
        "name": "safe_list",
        "file_path": "scripts/templates/safe-output/list.sh",
        "parameters": [],
        "lines": 15,
        "complexity": 2,
        "calls": [],
        "variables": [
          "title",
          "items"
        ]
      }
    ],
    "save_memory_to_file": [
      {
        "name": "save_memory_to_file",
        "file_path": "scripts/add-quote-handling-memory.py",
        "parameters": [
          "self"
        ],
        "lines": 24,
        "complexity": 2,
        "calls": [
          "strftime",
          "isoformat",
          "open",
          "dump",
          "now",
          "now",
          "str"
        ],
        "variables": [
          "timestamp",
          "filename",
          "memory_file"
        ]
      },
      {
        "name": "save_memory_to_file",
        "file_path": "scripts/add-architecture-memory.py",
        "parameters": [
          "self"
        ],
        "lines": 29,
        "complexity": 2,
        "calls": [
          "strftime",
          "isoformat",
          "open",
          "dump",
          "now",
          "now",
          "str"
        ],
        "variables": [
          "timestamp",
          "filename",
          "memory_file"
        ]
      },
      {
        "name": "save_memory_to_file",
        "file_path": "scripts/add-quote-handling-memory-simple.py",
        "parameters": [
          "self"
        ],
        "lines": 29,
        "complexity": 2,
        "calls": [
          "strftime",
          "isoformat",
          "open",
          "dump",
          "now",
          "now",
          "str"
        ],
        "variables": [
          "timestamp",
          "filename",
          "memory_file"
        ]
      }
    ],
    "add_memory": [
      {
        "name": "add_memory",
        "file_path": "scripts/add-quote-handling-memory.py",
        "parameters": [
          "self"
        ],
        "lines": 41,
        "complexity": 4,
        "calls": [
          "print",
          "print",
          "print",
          "add_memory_to_supabase",
          "get",
          "print",
          "add_memory_via_api",
          "get",
          "print",
          "save_memory_to_file",
          "get",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "get",
          "get",
          "get",
          "get"
        ],
        "variables": [
          "results",
          "supabase_result",
          "api_result",
          "file_result"
        ]
      },
      {
        "name": "add_memory",
        "file_path": "scripts/add-architecture-memory.py",
        "parameters": [
          "self"
        ],
        "lines": 38,
        "complexity": 3,
        "calls": [
          "print",
          "print",
          "print",
          "save_memory_to_file",
          "get",
          "print",
          "create_memory_summary",
          "print",
          "print",
          "print",
          "print",
          "print",
          "strftime",
          "print",
          "open",
          "write",
          "print",
          "now",
          "str",
          "get",
          "get",
          "str"
        ],
        "variables": [
          "results",
          "file_result",
          "summary",
          "timestamp",
          "summary_filename"
        ]
      },
      {
        "name": "add_memory",
        "file_path": "scripts/add-quote-handling-memory-simple.py",
        "parameters": [
          "self"
        ],
        "lines": 38,
        "complexity": 3,
        "calls": [
          "print",
          "print",
          "print",
          "save_memory_to_file",
          "get",
          "print",
          "create_memory_summary",
          "print",
          "print",
          "print",
          "print",
          "print",
          "strftime",
          "print",
          "open",
          "write",
          "print",
          "now",
          "str",
          "get",
          "get",
          "str"
        ],
        "variables": [
          "results",
          "file_result",
          "summary",
          "timestamp",
          "summary_filename"
        ]
      }
    ],
    "test_result": [
      {
        "name": "test_result",
        "file_path": "scripts/quick-production-test.sh",
        "parameters": [],
        "lines": 15,
        "complexity": 2,
        "calls": [],
        "variables": [
          "test_name",
          "result",
          "details",
          "TOTAL_TESTS",
          "PASSED_TESTS",
          "FAILED_TESTS"
        ]
      },
      {
        "name": "test_result",
        "file_path": "scripts/production-testing-suite.sh",
        "parameters": [],
        "lines": 15,
        "complexity": 2,
        "calls": [],
        "variables": [
          "test_name",
          "result",
          "details",
          "TOTAL_TESTS",
          "PASSED_TESTS",
          "FAILED_TESTS"
        ]
      }
    ],
    "test_shell_generation": [
      {
        "name": "test_shell_generation",
        "file_path": "scripts/quick-production-test.sh",
        "parameters": [],
        "lines": 26,
        "complexity": 3,
        "calls": [],
        "variables": [
          "test_dir",
          "test_script"
        ]
      },
      {
        "name": "test_shell_generation",
        "file_path": "scripts/production-testing-suite.sh",
        "parameters": [],
        "lines": 29,
        "complexity": 4,
        "calls": [],
        "variables": [
          "test_script"
        ]
      }
    ],
    "test_error_handling": [
      {
        "name": "test_error_handling",
        "file_path": "scripts/quick-production-test.sh",
        "parameters": [],
        "lines": 11,
        "complexity": 2,
        "calls": [],
        "variables": []
      },
      {
        "name": "test_error_handling",
        "file_path": "scripts/production-testing-suite.sh",
        "parameters": [],
        "lines": 19,
        "complexity": 3,
        "calls": [],
        "variables": []
      },
      {
        "name": "test_error_handling",
        "file_path": "scripts/python/comprehensive_yolo_stress_test.py",
        "parameters": [
          "self"
        ],
        "lines": 24,
        "complexity": 4,
        "calls": [
          "error",
          "open",
          "write",
          "open",
          "write"
        ],
        "variables": []
      }
    ],
    "test_performance": [
      {
        "name": "test_performance",
        "file_path": "scripts/quick-production-test.sh",
        "parameters": [],
        "lines": 27,
        "complexity": 3,
        "calls": [],
        "variables": [
          "start_time",
          "test_dir",
          "end_time",
          "duration"
        ]
      },
      {
        "name": "test_performance",
        "file_path": "scripts/production-testing-suite.sh",
        "parameters": [],
        "lines": 21,
        "complexity": 3,
        "calls": [],
        "variables": [
          "start_time",
          "end_time",
          "duration"
        ]
      },
      {
        "name": "test_performance",
        "file_path": "scripts/python/enhanced_prompts_test_suite.py",
        "parameters": [
          "self"
        ],
        "lines": 8,
        "complexity": 1,
        "calls": [
          "time",
          "generate_enhanced_prompt",
          "time",
          "assertLess"
        ],
        "variables": [
          "start_time",
          "prompt",
          "end_time",
          "generation_time"
        ]
      },
      {
        "name": "test_performance",
        "file_path": "scripts/python/comprehensive_yolo_stress_test.py",
        "parameters": [
          "self"
        ],
        "lines": 29,
        "complexity": 5,
        "calls": [
          "time",
          "range",
          "time",
          "info",
          "range",
          "error",
          "open",
          "write",
          "remove"
        ],
        "variables": [
          "start_time",
          "end_time",
          "duration",
          "test_file",
          "test_file"
        ]
      }
    ],
    "log": [
      {
        "name": "log",
        "file_path": "scripts/production-readiness-assessment.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log",
        "file_path": "scripts/validate-api-keys.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log",
        "file_path": "scripts/production-shell-engine.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log",
        "file_path": "scripts/production-shell-engine.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log",
        "file_path": "scripts/production-testing-suite.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log",
        "file_path": "scripts/generated/test-basic.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log",
        "file_path": "scripts/python/final_monorepo_cleanup.py",
        "parameters": [
          "self",
          "message"
        ],
        "lines": 6,
        "complexity": 1,
        "calls": [
          "strftime",
          "append",
          "print",
          "now"
        ],
        "variables": [
          "timestamp",
          "log_entry"
        ]
      },
      {
        "name": "log",
        "file_path": "scripts/python/intelligent_monorepo_cleanup.py",
        "parameters": [
          "self",
          "message"
        ],
        "lines": 6,
        "complexity": 1,
        "calls": [
          "strftime",
          "append",
          "print",
          "now"
        ],
        "variables": [
          "timestamp",
          "log_entry"
        ]
      }
    ],
    "print_header": [
      {
        "name": "print_header",
        "file_path": "scripts/alex-ai-universal-milestone-push.sh",
        "parameters": [],
        "lines": 5,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_header",
        "file_path": "scripts/alex-ai-universal-git-milestone-push.sh",
        "parameters": [],
        "lines": 5,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_header",
        "file_path": "scripts/enhanced-ai-prompts-dual-milestone-push.sh",
        "parameters": [],
        "lines": 5,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "print_step": [
      {
        "name": "print_step",
        "file_path": "scripts/alex-ai-universal-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_step",
        "file_path": "scripts/alex-ai-universal-git-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "print_step",
        "file_path": "scripts/enhanced-ai-prompts-dual-milestone-push.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "create_memory_summary": [
      {
        "name": "create_memory_summary",
        "file_path": "scripts/add-architecture-memory.py",
        "parameters": [
          "self"
        ],
        "lines": 35,
        "complexity": 1,
        "calls": [
          "isoformat",
          "now"
        ],
        "variables": []
      },
      {
        "name": "create_memory_summary",
        "file_path": "scripts/add-quote-handling-memory-simple.py",
        "parameters": [
          "self"
        ],
        "lines": 30,
        "complexity": 1,
        "calls": [
          "isoformat",
          "now"
        ],
        "variables": []
      },
      {
        "name": "create_memory_summary",
        "file_path": "scripts/python/store_crew_memories_supabase.py",
        "parameters": [
          "self",
          "memories_file"
        ],
        "lines": 38,
        "complexity": 2,
        "calls": [
          "print",
          "print",
          "print",
          "print",
          "print",
          "open",
          "load",
          "len",
          "isoformat",
          "open",
          "dump",
          "get",
          "get",
          "get",
          "now",
          "len",
          "len",
          "len",
          "strftime",
          "now"
        ],
        "variables": [
          "crew_member_counts",
          "memory_type_counts",
          "category_counts",
          "summary",
          "memories",
          "crew",
          "mem_type",
          "category"
        ]
      }
    ],
    "safe_echo": [
      {
        "name": "safe_echo",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "safe_echo",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "safe_echo",
        "file_path": "scripts/comprehensive-string-fix.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "safe_echo",
        "file_path": "scripts/master-safe-execute.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "log_step": [
      {
        "name": "log_step",
        "file_path": "scripts/setup-bidirectional-sync.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_step",
        "file_path": "scripts/automate-bidirectional-setup.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_step",
        "file_path": "scripts/python/phase2_turborepo_optimization.py",
        "parameters": [
          "self",
          "step",
          "status",
          "details"
        ],
        "lines": 17,
        "complexity": 3,
        "calls": [
          "append",
          "isoformat",
          "info",
          "error",
          "append",
          "info",
          "now"
        ],
        "variables": [
          "log_entry"
        ]
      },
      {
        "name": "log_step",
        "file_path": "scripts/python/phase3_alex_ai_integration.py",
        "parameters": [
          "self",
          "step",
          "status",
          "details"
        ],
        "lines": 17,
        "complexity": 3,
        "calls": [
          "append",
          "isoformat",
          "info",
          "error",
          "append",
          "info",
          "now"
        ],
        "variables": [
          "log_entry"
        ]
      },
      {
        "name": "log_step",
        "file_path": "scripts/python/phase1_turborepo_setup.py",
        "parameters": [
          "self",
          "step",
          "status",
          "details"
        ],
        "lines": 17,
        "complexity": 3,
        "calls": [
          "append",
          "isoformat",
          "info",
          "error",
          "append",
          "info",
          "now"
        ],
        "variables": [
          "log_entry"
        ]
      }
    ],
    "log_automation": [
      {
        "name": "log_automation",
        "file_path": "scripts/setup-bidirectional-sync.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "log_automation",
        "file_path": "scripts/automate-bidirectional-setup.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "configure_github_secrets": [
      {
        "name": "configure_github_secrets",
        "file_path": "scripts/setup-bidirectional-sync.sh",
        "parameters": [],
        "lines": 52,
        "complexity": 7,
        "calls": [],
        "variables": [
          "repo_url",
          "repo_name",
          "repo_owner",
          "secrets"
        ]
      },
      {
        "name": "configure_github_secrets",
        "file_path": "scripts/automate-bidirectional-setup.sh",
        "parameters": [],
        "lines": 52,
        "complexity": 7,
        "calls": [],
        "variables": [
          "repo_url",
          "repo_name",
          "repo_owner",
          "secrets"
        ]
      }
    ],
    "enable_scheduled_workflows": [
      {
        "name": "enable_scheduled_workflows",
        "file_path": "scripts/setup-bidirectional-sync.sh",
        "parameters": [],
        "lines": 40,
        "complexity": 8,
        "calls": [],
        "variables": [
          "workflow_file",
          "repo_url",
          "repo_name",
          "repo_owner",
          "workflow_runs"
        ]
      },
      {
        "name": "enable_scheduled_workflows",
        "file_path": "scripts/automate-bidirectional-setup.sh",
        "parameters": [],
        "lines": 50,
        "complexity": 10,
        "calls": [],
        "variables": [
          "workflow_file",
          "repo_url",
          "repo_name",
          "repo_owner",
          "workflows",
          "workflow_runs"
        ]
      }
    ],
    "generate_final_report": [
      {
        "name": "generate_final_report",
        "file_path": "scripts/setup-bidirectional-sync.sh",
        "parameters": [],
        "lines": 90,
        "complexity": 3,
        "calls": [],
        "variables": [
          "report_file",
          "sync_direction"
        ]
      },
      {
        "name": "generate_final_report",
        "file_path": "scripts/automate-bidirectional-setup.sh",
        "parameters": [],
        "lines": 90,
        "complexity": 3,
        "calls": [],
        "variables": [
          "report_file",
          "sync_direction"
        ]
      }
    ],
    "handle_error": [
      {
        "name": "handle_error",
        "file_path": "scripts/production-shell-engine.sh",
        "parameters": [],
        "lines": 6,
        "complexity": 1,
        "calls": [],
        "variables": [
          "exit_code",
          "line_number"
        ]
      },
      {
        "name": "handle_error",
        "file_path": "scripts/production-shell-engine.sh",
        "parameters": [],
        "lines": 6,
        "complexity": 1,
        "calls": [],
        "variables": [
          "exit_code",
          "line_number"
        ]
      },
      {
        "name": "handle_error",
        "file_path": "scripts/generated/test-basic.sh",
        "parameters": [],
        "lines": 6,
        "complexity": 1,
        "calls": [],
        "variables": [
          "exit_code",
          "line_number"
        ]
      }
    ],
    "safe_output": [
      {
        "name": "safe_output",
        "file_path": "scripts/production-shell-engine.sh",
        "parameters": [],
        "lines": 4,
        "complexity": 1,
        "calls": [],
        "variables": [
          "message"
        ]
      },
      {
        "name": "safe_output",
        "file_path": "scripts/string-manipulation-fix.sh",
        "parameters": [],
        "lines": 5,
        "complexity": 1,
        "calls": [],
        "variables": [
          "text"
        ]
      }
    ],
    "output": [
      {
        "name": "output",
        "file_path": "scripts/production-shell-engine.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "output",
        "file_path": "scripts/production-shell-engine.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "output",
        "file_path": "scripts/generated/test-status.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "output",
        "file_path": "scripts/generated/test-progress.sh",
        "parameters": [],
        "lines": 3,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "show_status": [
      {
        "name": "show_status",
        "file_path": "scripts/production-shell-engine.sh",
        "parameters": [],
        "lines": 15,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "show_status",
        "file_path": "scripts/generated/test-status.sh",
        "parameters": [],
        "lines": 15,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "update_progress": [
      {
        "name": "update_progress",
        "file_path": "scripts/production-shell-engine.sh",
        "parameters": [],
        "lines": 11,
        "complexity": 1,
        "calls": [],
        "variables": [
          "step",
          "description",
          "PROGRESS",
          "percentage"
        ]
      },
      {
        "name": "update_progress",
        "file_path": "scripts/generated/test-progress.sh",
        "parameters": [],
        "lines": 11,
        "complexity": 1,
        "calls": [],
        "variables": [
          "step",
          "description",
          "PROGRESS",
          "percentage"
        ]
      }
    ],
    "run_progress": [
      {
        "name": "run_progress",
        "file_path": "scripts/production-shell-engine.sh",
        "parameters": [],
        "lines": 22,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "run_progress",
        "file_path": "scripts/generated/test-progress.sh",
        "parameters": [],
        "lines": 22,
        "complexity": 1,
        "calls": [],
        "variables": []
      }
    ],
    "logTest": [
      {
        "name": "logTest",
        "file_path": "scripts/simple-e2e-test.js",
        "parameters": [],
        "lines": 12,
        "complexity": 2,
        "calls": [
          "Date",
          "toISOString",
          "push",
          "if",
          "log",
          "log"
        ],
        "variables": [
          "result"
        ]
      },
      {
        "name": "logTest",
        "file_path": "scripts/improved-e2e-test.js",
        "parameters": [],
        "lines": 12,
        "complexity": 2,
        "calls": [
          "Date",
          "toISOString",
          "push",
          "if",
          "log",
          "log"
        ],
        "variables": [
          "result"
        ]
      },
      {
        "name": "logTest",
        "file_path": "scripts/puppeteer-e2e-test.js",
        "parameters": [],
        "lines": 12,
        "complexity": 2,
        "calls": [
          "Date",
          "toISOString",
          "push",
          "if",
          "log",
          "log"
        ],
        "variables": [
          "result"
        ]
      }
    ],
    "takeScreenshot": [
      {
        "name": "takeScreenshot",
        "file_path": "scripts/simple-e2e-test.js",
        "parameters": [],
        "lines": 10,
        "complexity": 2,
        "calls": [
          "if",
          "existsSync",
          "mkdirSync",
          "replace",
          "toLowerCase",
          "now",
          "join",
          "screenshot"
        ],
        "variables": [
          "filename",
          "filepath"
        ]
      },
      {
        "name": "takeScreenshot",
        "file_path": "scripts/improved-e2e-test.js",
        "parameters": [],
        "lines": 10,
        "complexity": 2,
        "calls": [
          "if",
          "existsSync",
          "mkdirSync",
          "replace",
          "toLowerCase",
          "now",
          "join",
          "screenshot"
        ],
        "variables": [
          "filename",
          "filepath"
        ]
      },
      {
        "name": "takeScreenshot",
        "file_path": "scripts/puppeteer-e2e-test.js",
        "parameters": [],
        "lines": 10,
        "complexity": 2,
        "calls": [
          "if",
          "existsSync",
          "mkdirSync",
          "replace",
          "toLowerCase",
          "now",
          "join",
          "screenshot"
        ],
        "variables": [
          "filename",
          "filepath"
        ]
      }
    ],
    "waitForElement": [
      {
        "name": "waitForElement",
        "file_path": "scripts/simple-e2e-test.js",
        "parameters": [],
        "lines": 8,
        "complexity": 1,
        "calls": [
          "waitForSelector",
          "catch"
        ],
        "variables": []
      },
      {
        "name": "waitForElement",
        "file_path": "scripts/puppeteer-e2e-test.js",
        "parameters": [],
        "lines": 8,
        "complexity": 1,
        "calls": [
          "waitForSelector",
          "catch"
        ],
        "variables": []
      }
    ],
    "testPageLoad": [
      {
        "name": "testPageLoad",
        "file_path": "scripts/simple-e2e-test.js",
        "parameters": [],
        "lines": 28,
        "complexity": 3,
        "calls": [
          "log",
          "goto",
          "waitForElement",
          "if",
          "logTest",
          "eval",
          "if",
          "includes",
          "logTest",
          "logTest",
          "takeScreenshot",
          "catch",
          "logTest"
        ],
        "variables": [
          "mainContentLoaded",
          "heading"
        ]
      },
      {
        "name": "testPageLoad",
        "file_path": "scripts/improved-e2e-test.js",
        "parameters": [],
        "lines": 33,
        "complexity": 3,
        "calls": [
          "log",
          "setRequestInterception",
          "on",
          "if",
          "url",
          "includes",
          "abort",
          "continue",
          "goto",
          "waitForSelector",
          "eval",
          "if",
          "includes",
          "logTest",
          "takeScreenshot",
          "logTest",
          "catch",
          "logTest"
        ],
        "variables": [
          "heading"
        ]
      },
      {
        "name": "testPageLoad",
        "file_path": "scripts/puppeteer-e2e-test.js",
        "parameters": [],
        "lines": 28,
        "complexity": 3,
        "calls": [
          "log",
          "goto",
          "waitForElement",
          "if",
          "logTest",
          "eval",
          "if",
          "includes",
          "logTest",
          "logTest",
          "takeScreenshot",
          "catch",
          "logTest"
        ],
        "variables": [
          "mainContentLoaded",
          "heading"
        ]
      }
    ],
    "testDashboardButtons": [
      {
        "name": "testDashboardButtons",
        "file_path": "scripts/simple-e2e-test.js",
        "parameters": [],
        "lines": 61,
        "complexity": 6,
        "calls": [
          "log",
          "for",
          "evaluate",
          "from",
          "querySelectorAll",
          "find",
          "includes",
          "if",
          "logTest",
          "evaluate",
          "from",
          "querySelectorAll",
          "find",
          "includes",
          "if",
          "click",
          "Promise",
          "setTimeout",
          "if",
          "logTest",
          "takeScreenshot",
          "replace",
          "toLowerCase",
          "evaluate",
          "from",
          "querySelectorAll",
          "find",
          "includes",
          "if",
          "click",
          "Promise",
          "setTimeout",
          "logTest",
          "catch",
          "logTest"
        ],
        "variables": [
          "dashboardButtons",
          "buttonName",
          "buttonFound",
          "buttons",
          "buttons",
          "button",
          "dashboardVisible",
          "buttons",
          "button"
        ]
      },
      {
        "name": "testDashboardButtons",
        "file_path": "scripts/improved-e2e-test.js",
        "parameters": [],
        "lines": 54,
        "complexity": 5,
        "calls": [
          "log",
          "for",
          "if",
          "evaluateHandle",
          "from",
          "querySelectorAll",
          "find",
          "includes",
          "if",
          "evaluate",
          "logTest",
          "click",
          "Promise",
          "setTimeout",
          "if",
          "logTest",
          "takeScreenshot",
          "replace",
          "toLowerCase",
          "click",
          "Promise",
          "setTimeout",
          "logTest",
          "catch",
          "logTest"
        ],
        "variables": [
          "dashboardButtons",
          "button",
          "buttonElement",
          "buttons",
          "dashboardVisible"
        ]
      },
      {
        "name": "testDashboardButtons",
        "file_path": "scripts/puppeteer-e2e-test.js",
        "parameters": [],
        "lines": 47,
        "complexity": 4,
        "calls": [
          "log",
          "text",
          "text",
          "text",
          "text",
          "text",
          "text",
          "text",
          "text",
          "text",
          "for",
          "x",
          "contains",
          "text",
          "if",
          "logTest",
          "click",
          "waitForTimeout",
          "if",
          "logTest",
          "takeScreenshot",
          "replace",
          "toLowerCase",
          "click",
          "waitForTimeout",
          "logTest",
          "catch",
          "logTest"
        ],
        "variables": [
          "dashboardButtons",
          "button",
          "buttonElement",
          "dashboardVisible"
        ]
      }
    ],
    "testJobCards": [
      {
        "name": "testJobCards",
        "file_path": "scripts/simple-e2e-test.js",
        "parameters": [],
        "lines": 60,
        "complexity": 6,
        "calls": [
          "log",
          "waitForElement",
          "if",
          "logTest",
          "if",
          "logTest",
          "logTest",
          "click",
          "Promise",
          "setTimeout",
          "evaluate",
          "contains",
          "contains",
          "if",
          "logTest",
          "logTest",
          "if",
          "evaluate",
          "if",
          "includes",
          "includes",
          "logTest",
          "logTest",
          "logTest",
          "takeScreenshot",
          "catch",
          "logTest"
        ],
        "variables": [
          "jobCardsLoaded",
          "jobCards",
          "firstJobCard",
          "isSelected",
          "applyButton",
          "buttonText"
        ]
      },
      {
        "name": "testJobCards",
        "file_path": "scripts/improved-e2e-test.js",
        "parameters": [],
        "lines": 54,
        "complexity": 5,
        "calls": [
          "log",
          "waitForSelector",
          "if",
          "logTest",
          "logTest",
          "click",
          "Promise",
          "setTimeout",
          "evaluate",
          "contains",
          "contains",
          "if",
          "logTest",
          "logTest",
          "if",
          "evaluate",
          "if",
          "includes",
          "includes",
          "logTest",
          "logTest",
          "logTest",
          "takeScreenshot",
          "catch",
          "logTest"
        ],
        "variables": [
          "jobCards",
          "firstJobCard",
          "isSelected",
          "applyButton",
          "buttonText"
        ]
      },
      {
        "name": "testJobCards",
        "file_path": "scripts/puppeteer-e2e-test.js",
        "parameters": [],
        "lines": 55,
        "complexity": 5,
        "calls": [
          "log",
          "waitForElement",
          "if",
          "logTest",
          "if",
          "logTest",
          "logTest",
          "click",
          "waitForTimeout",
          "selected",
          "evaluate",
          "contains",
          "contains",
          "if",
          "logTest",
          "logTest",
          "text",
          "text",
          "if",
          "logTest",
          "logTest",
          "takeScreenshot",
          "catch",
          "logTest"
        ],
        "variables": [
          "jobCardsLoaded",
          "jobCards",
          "firstJobCard",
          "isSelected",
          "applyButton"
        ]
      }
    ],
    "testFilterSidebar": [
      {
        "name": "testFilterSidebar",
        "file_path": "scripts/simple-e2e-test.js",
        "parameters": [],
        "lines": 42,
        "complexity": 4,
        "calls": [
          "log",
          "if",
          "logTest",
          "logTest",
          "if",
          "select",
          "Promise",
          "setTimeout",
          "logTest",
          "logTest",
          "if",
          "evaluate",
          "dispatchEvent",
          "Event",
          "Promise",
          "setTimeout",
          "logTest",
          "logTest",
          "takeScreenshot",
          "catch",
          "logTest"
        ],
        "variables": [
          "filterSidebar",
          "locationSelect",
          "scoreSlider"
        ]
      },
      {
        "name": "testFilterSidebar",
        "file_path": "scripts/puppeteer-e2e-test.js",
        "parameters": [],
        "lines": 42,
        "complexity": 4,
        "calls": [
          "log",
          "if",
          "logTest",
          "logTest",
          "if",
          "select",
          "waitForTimeout",
          "logTest",
          "logTest",
          "if",
          "evaluate",
          "dispatchEvent",
          "Event",
          "waitForTimeout",
          "logTest",
          "logTest",
          "takeScreenshot",
          "catch",
          "logTest"
        ],
        "variables": [
          "filterSidebar",
          "locationSelect",
          "scoreSlider"
        ]
      }
    ],
    "testResumeUpload": [
      {
        "name": "testResumeUpload",
        "file_path": "scripts/simple-e2e-test.js",
        "parameters": [],
        "lines": 38,
        "complexity": 3,
        "calls": [
          "log",
          "if",
          "logTest",
          "logTest",
          "join",
          "writeFileSync",
          "uploadFile",
          "Promise",
          "setTimeout",
          "if",
          "logTest",
          "logTest",
          "unlinkSync",
          "takeScreenshot",
          "catch",
          "logTest"
        ],
        "variables": [
          "resumeUpload",
          "dummyFile",
          "analysisIndicator"
        ]
      },
      {
        "name": "testResumeUpload",
        "file_path": "scripts/puppeteer-e2e-test.js",
        "parameters": [],
        "lines": 38,
        "complexity": 3,
        "calls": [
          "log",
          "if",
          "logTest",
          "logTest",
          "join",
          "writeFileSync",
          "uploadFile",
          "waitForTimeout",
          "if",
          "logTest",
          "logTest",
          "unlinkSync",
          "takeScreenshot",
          "catch",
          "logTest"
        ],
        "variables": [
          "resumeUpload",
          "dummyFile",
          "analysisIndicator"
        ]
      }
    ],
    "testResponsiveDesign": [
      {
        "name": "testResponsiveDesign",
        "file_path": "scripts/simple-e2e-test.js",
        "parameters": [],
        "lines": 30,
        "complexity": 3,
        "calls": [
          "log",
          "for",
          "setViewport",
          "Promise",
          "setTimeout",
          "if",
          "logTest",
          "takeScreenshot",
          "toLowerCase",
          "logTest",
          "catch",
          "logTest",
          "setViewport"
        ],
        "variables": [
          "viewports",
          "viewport",
          "mainContent"
        ]
      },
      {
        "name": "testResponsiveDesign",
        "file_path": "scripts/puppeteer-e2e-test.js",
        "parameters": [],
        "lines": 30,
        "complexity": 3,
        "calls": [
          "log",
          "for",
          "setViewport",
          "waitForTimeout",
          "if",
          "logTest",
          "takeScreenshot",
          "toLowerCase",
          "logTest",
          "catch",
          "logTest",
          "setViewport"
        ],
        "variables": [
          "viewports",
          "viewport",
          "mainContent"
        ]
      }
    ],
    "testAPIConnectivity": [
      {
        "name": "testAPIConnectivity",
        "file_path": "scripts/simple-e2e-test.js",
        "parameters": [],
        "lines": 63,
        "complexity": 4,
        "calls": [
          "log",
          "evaluate",
          "async",
          "fetch",
          "json",
          "catch",
          "if",
          "logTest",
          "logTest",
          "evaluate",
          "async",
          "fetch",
          "json",
          "catch",
          "if",
          "logTest",
          "logTest",
          "evaluate",
          "async",
          "fetch",
          "stringify",
          "json",
          "catch",
          "if",
          "logTest",
          "logTest",
          "catch",
          "logTest"
        ],
        "variables": [
          "healthResponse",
          "response",
          "jobsResponse",
          "response",
          "n8nResponse",
          "response"
        ]
      },
      {
        "name": "testAPIConnectivity",
        "file_path": "scripts/improved-e2e-test.js",
        "parameters": [],
        "lines": 40,
        "complexity": 3,
        "calls": [
          "log",
          "evaluate",
          "async",
          "fetch",
          "json",
          "catch",
          "if",
          "logTest",
          "logTest",
          "evaluate",
          "async",
          "fetch",
          "json",
          "catch",
          "if",
          "isArray",
          "logTest",
          "logTest",
          "catch",
          "logTest"
        ],
        "variables": [
          "healthResponse",
          "response",
          "mockDataResponse",
          "response"
        ]
      },
      {
        "name": "testAPIConnectivity",
        "file_path": "scripts/puppeteer-e2e-test.js",
        "parameters": [],
        "lines": 63,
        "complexity": 4,
        "calls": [
          "log",
          "evaluate",
          "async",
          "fetch",
          "json",
          "catch",
          "if",
          "logTest",
          "logTest",
          "evaluate",
          "async",
          "fetch",
          "json",
          "catch",
          "if",
          "logTest",
          "logTest",
          "evaluate",
          "async",
          "fetch",
          "stringify",
          "json",
          "catch",
          "if",
          "logTest",
          "logTest",
          "catch",
          "logTest"
        ],
        "variables": [
          "healthResponse",
          "response",
          "jobsResponse",
          "response",
          "n8nResponse",
          "response"
        ]
      }
    ],
    "runAllTests": [
      {
        "name": "runAllTests",
        "file_path": "scripts/simple-e2e-test.js",
        "parameters": [],
        "lines": 56,
        "complexity": 1,
        "calls": [
          "log",
          "log",
          "launch",
          "newPage",
          "setViewport",
          "on",
          "log",
          "on",
          "log",
          "url",
          "failure",
          "testPageLoad",
          "testDashboardButtons",
          "testJobCards",
          "testFilterSidebar",
          "testResumeUpload",
          "testStatsDashboard",
          "testApplicationTracker",
          "testDataSourceIndicator",
          "testResponsiveDesign",
          "testAPIConnectivity",
          "catch",
          "log",
          "close",
          "log",
          "log",
          "log",
          "log",
          "log",
          "log",
          "toFixed",
          "join",
          "now",
          "writeFileSync",
          "stringify",
          "log",
          "exit"
        ],
        "variables": [
          "browser",
          "page",
          "reportPath"
        ]
      },
      {
        "name": "runAllTests",
        "file_path": "scripts/improved-e2e-test.js",
        "parameters": [],
        "lines": 39,
        "complexity": 1,
        "calls": [
          "log",
          "log",
          "launch",
          "newPage",
          "setViewport",
          "testPageLoad",
          "testDashboardButtons",
          "testJobCards",
          "testAPIConnectivity",
          "catch",
          "log",
          "close",
          "log",
          "log",
          "log",
          "log",
          "log",
          "log",
          "toFixed",
          "join",
          "now",
          "writeFileSync",
          "stringify",
          "log",
          "exit"
        ],
        "variables": [
          "browser",
          "page",
          "reportPath"
        ]
      },
      {
        "name": "runAllTests",
        "file_path": "scripts/puppeteer-e2e-test.js",
        "parameters": [],
        "lines": 56,
        "complexity": 1,
        "calls": [
          "log",
          "log",
          "launch",
          "newPage",
          "setViewport",
          "on",
          "log",
          "on",
          "log",
          "url",
          "failure",
          "testPageLoad",
          "testDashboardButtons",
          "testJobCards",
          "testFilterSidebar",
          "testResumeUpload",
          "testStatsDashboard",
          "testApplicationTracker",
          "testDataSourceIndicator",
          "testResponsiveDesign",
          "testAPIConnectivity",
          "catch",
          "log",
          "close",
          "log",
          "log",
          "log",
          "log",
          "log",
          "log",
          "toFixed",
          "join",
          "now",
          "writeFileSync",
          "stringify",
          "log",
          "exit"
        ],
        "variables": [
          "browser",
          "page",
          "reportPath"
        ]
      }
    ],
    "validate_strings": [
      {
        "name": "validate_strings",
        "file_path": "scripts/validate-strings.sh",
        "parameters": [],
        "lines": 32,
        "complexity": 8,
        "calls": [],
        "variables": [
          "file",
          "issues",
          "issues",
          "issues",
          "issues"
        ]
      },
      {
        "name": "validate_strings",
        "file_path": "scripts/string-manipulation-fix.sh",
        "parameters": [],
        "lines": 32,
        "complexity": 8,
        "calls": [],
        "variables": [
          "file",
          "issues",
          "issues",
          "issues",
          "issues"
        ]
      }
    ],
    "organize_remaining_files": [
      {
        "name": "organize_remaining_files",
        "file_path": "scripts/python/final_monorepo_cleanup.py",
        "parameters": [
          "self"
        ],
        "lines": 17,
        "complexity": 2,
        "calls": [
          "items",
          "mkdir",
          "log"
        ],
        "variables": [
          "organized_dirs",
          "dir_path"
        ]
      },
      {
        "name": "organize_remaining_files",
        "file_path": "scripts/python/intelligent_monorepo_cleanup.py",
        "parameters": [
          "self"
        ],
        "lines": 17,
        "complexity": 2,
        "calls": [
          "items",
          "mkdir",
          "log"
        ],
        "variables": [
          "organized_dirs",
          "dir_path"
        ]
      }
    ],
    "run_command": [
      {
        "name": "run_command",
        "file_path": "scripts/python/phase2_turborepo_optimization.py",
        "parameters": [
          "self",
          "command",
          "cwd"
        ],
        "lines": 24,
        "complexity": 5,
        "calls": [
          "run",
          "str"
        ],
        "variables": [
          "result",
          "cwd"
        ]
      },
      {
        "name": "run_command",
        "file_path": "scripts/python/phase3_alex_ai_integration.py",
        "parameters": [
          "self",
          "command",
          "cwd"
        ],
        "lines": 24,
        "complexity": 5,
        "calls": [
          "run",
          "str"
        ],
        "variables": [
          "result",
          "cwd"
        ]
      },
      {
        "name": "run_command",
        "file_path": "scripts/python/phase1_turborepo_setup.py",
        "parameters": [
          "self",
          "command",
          "cwd"
        ],
        "lines": 24,
        "complexity": 5,
        "calls": [
          "run",
          "str"
        ],
        "variables": [
          "result",
          "cwd"
        ]
      }
    ],
    "store_crew_memories": [
      {
        "name": "store_crew_memories",
        "file_path": "scripts/python/youtube_crew_memory_integration.py",
        "parameters": [
          "self",
          "memories"
        ],
        "lines": 25,
        "complexity": 2,
        "calls": [
          "info",
          "extend",
          "strftime",
          "info",
          "_store_in_mcp_system",
          "open",
          "dump",
          "error",
          "len",
          "now"
        ],
        "variables": [
          "timestamp",
          "memory_file"
        ]
      },
      {
        "name": "store_crew_memories",
        "file_path": "scripts/python/simple_youtube_crew_memory_demo.py",
        "parameters": [
          "self",
          "memories"
        ],
        "lines": 25,
        "complexity": 2,
        "calls": [
          "info",
          "extend",
          "strftime",
          "info",
          "_store_in_mcp_system",
          "open",
          "dump",
          "error",
          "len",
          "now"
        ],
        "variables": [
          "timestamp",
          "memory_file"
        ]
      },
      {
        "name": "store_crew_memories",
        "file_path": "scripts/python/store_crew_memories_supabase.py",
        "parameters": [
          "self",
          "memories_file"
        ],
        "lines": 58,
        "complexity": 4,
        "calls": [
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "print",
          "open",
          "load",
          "post",
          "len",
          "isoformat",
          "print",
          "print",
          "print",
          "now"
        ],
        "variables": [
          "stored_count",
          "failed_count",
          "memories",
          "memory_data",
          "response"
        ]
      }
    ],
    "_store_in_mcp_system": [
      {
        "name": "_store_in_mcp_system",
        "file_path": "scripts/python/youtube_crew_memory_integration.py",
        "parameters": [
          "self",
          "memories"
        ],
        "lines": 25,
        "complexity": 5,
        "calls": [
          "exists",
          "warning",
          "run",
          "info",
          "warning",
          "str"
        ],
        "variables": [
          "mcp_script",
          "query",
          "result"
        ]
      },
      {
        "name": "_store_in_mcp_system",
        "file_path": "scripts/python/alex_ai_yolo_initialization.py",
        "parameters": [
          "self",
          "memory_entry"
        ],
        "lines": 23,
        "complexity": 4,
        "calls": [
          "exists",
          "run",
          "warning",
          "info",
          "warning",
          "str"
        ],
        "variables": [
          "mcp_script",
          "query",
          "result"
        ]
      },
      {
        "name": "_store_in_mcp_system",
        "file_path": "scripts/python/yolo_mode_crew_memory_update.py",
        "parameters": [
          "self",
          "memories"
        ],
        "lines": 26,
        "complexity": 5,
        "calls": [
          "exists",
          "warning",
          "run",
          "info",
          "warning",
          "str"
        ],
        "variables": [
          "mcp_script",
          "query",
          "result"
        ]
      },
      {
        "name": "_store_in_mcp_system",
        "file_path": "scripts/python/cursor_ai_integration_memory_update.py",
        "parameters": [
          "self",
          "memories"
        ],
        "lines": 26,
        "complexity": 5,
        "calls": [
          "exists",
          "warning",
          "run",
          "info",
          "warning",
          "str"
        ],
        "variables": [
          "mcp_script",
          "query",
          "result"
        ]
      },
      {
        "name": "_store_in_mcp_system",
        "file_path": "scripts/python/simple_youtube_crew_memory_demo.py",
        "parameters": [
          "self",
          "memories"
        ],
        "lines": 26,
        "complexity": 5,
        "calls": [
          "exists",
          "warning",
          "run",
          "info",
          "warning",
          "str"
        ],
        "variables": [
          "mcp_script",
          "query",
          "result"
        ]
      }
    ],
    "calculate_importance_score": [
      {
        "name": "calculate_importance_score",
        "file_path": "scripts/python/test_mcp_system.py",
        "parameters": [
          "self",
          "memory"
        ],
        "lines": 35,
        "complexity": 1,
        "calls": [
          "max",
          "min",
          "len",
          "min",
          "min",
          "get",
          "min",
          "now",
          "len"
        ],
        "variables": [
          "score",
          "recency_days",
          "recency_factor",
          "access_factor",
          "content_length",
          "length_factor",
          "tag_factor",
          "type_weights",
          "type_factor"
        ]
      },
      {
        "name": "calculate_importance_score",
        "file_path": "scripts/python/mcp_memory_optimization_system.py",
        "parameters": [
          "self",
          "memory"
        ],
        "lines": 35,
        "complexity": 1,
        "calls": [
          "max",
          "min",
          "len",
          "min",
          "min",
          "get",
          "min",
          "now",
          "len"
        ],
        "variables": [
          "score",
          "recency_days",
          "recency_factor",
          "access_factor",
          "content_length",
          "length_factor",
          "tag_factor",
          "type_weights",
          "type_factor"
        ]
      }
    ],
    "find_similar_memories": [
      {
        "name": "find_similar_memories",
        "file_path": "scripts/python/test_mcp_system.py",
        "parameters": [
          "self",
          "memory",
          "threshold"
        ],
        "lines": 18,
        "complexity": 5,
        "calls": [
          "items",
          "sort",
          "cosine_similarity",
          "append"
        ],
        "variables": [
          "similar_memories",
          "threshold",
          "similarity"
        ]
      },
      {
        "name": "find_similar_memories",
        "file_path": "scripts/python/mcp_memory_optimization_system.py",
        "parameters": [
          "self",
          "memory",
          "threshold"
        ],
        "lines": 18,
        "complexity": 5,
        "calls": [
          "items",
          "sort",
          "cosine_similarity",
          "append"
        ],
        "variables": [
          "similar_memories",
          "threshold",
          "similarity"
        ]
      }
    ],
    "consolidate_similar_memories": [
      {
        "name": "consolidate_similar_memories",
        "file_path": "scripts/python/test_mcp_system.py",
        "parameters": [
          "self",
          "memory_group"
        ],
        "lines": 43,
        "complexity": 5,
        "calls": [
          "max",
          "_consolidate_content",
          "sum",
          "MemoryVector",
          "len",
          "range",
          "len",
          "sum",
          "append",
          "max",
          "min",
          "max",
          "sum",
          "list",
          "set",
          "enumerate"
        ],
        "variables": [
          "base_memory",
          "consolidated_content",
          "weights",
          "total_weight",
          "consolidated_memory",
          "weighted_embedding",
          "weighted_embedding",
          "weighted_sum"
        ]
      },
      {
        "name": "consolidate_similar_memories",
        "file_path": "scripts/python/mcp_memory_optimization_system.py",
        "parameters": [
          "self",
          "memory_group"
        ],
        "lines": 43,
        "complexity": 5,
        "calls": [
          "max",
          "_consolidate_content",
          "sum",
          "MemoryVector",
          "len",
          "range",
          "len",
          "sum",
          "append",
          "max",
          "min",
          "max",
          "sum",
          "list",
          "set",
          "enumerate"
        ],
        "variables": [
          "base_memory",
          "consolidated_content",
          "weights",
          "total_weight",
          "consolidated_memory",
          "weighted_embedding",
          "weighted_embedding",
          "weighted_sum"
        ]
      }
    ],
    "_consolidate_content": [
      {
        "name": "_consolidate_content",
        "file_path": "scripts/python/test_mcp_system.py",
        "parameters": [
          "self",
          "memories"
        ],
        "lines": 21,
        "complexity": 5,
        "calls": [
          "items",
          "join",
          "append",
          "len",
          "append",
          "_create_content_summary",
          "append"
        ],
        "variables": [
          "type_groups",
          "consolidated_parts",
          "contents",
          "summary"
        ]
      },
      {
        "name": "_consolidate_content",
        "file_path": "scripts/python/mcp_memory_optimization_system.py",
        "parameters": [
          "self",
          "memories"
        ],
        "lines": 21,
        "complexity": 5,
        "calls": [
          "items",
          "join",
          "append",
          "len",
          "append",
          "_create_content_summary",
          "append"
        ],
        "variables": [
          "type_groups",
          "consolidated_parts",
          "contents",
          "summary"
        ]
      }
    ],
    "_create_content_summary": [
      {
        "name": "_create_content_summary",
        "file_path": "scripts/python/test_mcp_system.py",
        "parameters": [
          "self",
          "contents",
          "mem_type"
        ],
        "lines": 31,
        "complexity": 8,
        "calls": [
          "len",
          "join",
          "enumerate",
          "append",
          "append",
          "join",
          "join",
          "append",
          "append",
          "title",
          "enumerate"
        ],
        "variables": [
          "key_points",
          "implementations",
          "numbered_contents"
        ]
      },
      {
        "name": "_create_content_summary",
        "file_path": "scripts/python/mcp_memory_optimization_system.py",
        "parameters": [
          "self",
          "contents",
          "mem_type"
        ],
        "lines": 31,
        "complexity": 8,
        "calls": [
          "len",
          "join",
          "enumerate",
          "append",
          "append",
          "join",
          "join",
          "append",
          "append",
          "title",
          "enumerate"
        ],
        "variables": [
          "key_points",
          "implementations",
          "numbered_contents"
        ]
      }
    ],
    "generate_optimization_report": [
      {
        "name": "generate_optimization_report",
        "file_path": "scripts/python/test_mcp_system.py",
        "parameters": [
          "self",
          "results"
        ],
        "lines": 47,
        "complexity": 7,
        "calls": [
          "values",
          "items",
          "values",
          "items",
          "values",
          "items",
          "len",
          "get",
          "get",
          "get"
        ],
        "variables": [
          "report",
          "project_distribution",
          "crew_distribution",
          "type_distribution"
        ]
      },
      {
        "name": "generate_optimization_report",
        "file_path": "scripts/python/mcp_memory_optimization_system.py",
        "parameters": [
          "self",
          "results"
        ],
        "lines": 56,
        "complexity": 8,
        "calls": [
          "values",
          "items",
          "values",
          "items",
          "values",
          "items",
          "items",
          "len",
          "get",
          "get",
          "get",
          "len",
          "join",
          "join"
        ],
        "variables": [
          "report",
          "project_distribution",
          "crew_distribution",
          "type_distribution"
        ]
      },
      {
        "name": "generate_optimization_report",
        "file_path": "scripts/python/repository_optimization_analysis.py",
        "parameters": [
          "self",
          "analysis_data",
          "crew_insights",
          "optimization_plan",
          "execution_results"
        ],
        "lines": 56,
        "complexity": 5,
        "calls": [
          "items",
          "strftime",
          "len",
          "len",
          "len",
          "len",
          "len",
          "title",
          "now",
          "replace"
        ],
        "variables": [
          "report"
        ]
      }
    ],
    "create_crew_specific_memories": [
      {
        "name": "create_crew_specific_memories",
        "file_path": "scripts/python/yolo_mode_crew_memory_update.py",
        "parameters": [
          "self"
        ],
        "lines": 34,
        "complexity": 2,
        "calls": [
          "items",
          "append",
          "isoformat",
          "now"
        ],
        "variables": [
          "crew_memories",
          "crew_insights",
          "memory"
        ]
      },
      {
        "name": "create_crew_specific_memories",
        "file_path": "scripts/python/cursor_ai_integration_memory_update.py",
        "parameters": [
          "self"
        ],
        "lines": 33,
        "complexity": 2,
        "calls": [
          "items",
          "append",
          "isoformat",
          "now"
        ],
        "variables": [
          "crew_memories",
          "crew_insights",
          "memory"
        ]
      }
    ],
    "store_memories": [
      {
        "name": "store_memories",
        "file_path": "scripts/python/yolo_mode_crew_memory_update.py",
        "parameters": [
          "self",
          "memories"
        ],
        "lines": 20,
        "complexity": 2,
        "calls": [
          "strftime",
          "info",
          "_store_in_mcp_system",
          "open",
          "dump",
          "error",
          "now"
        ],
        "variables": [
          "timestamp",
          "memory_file"
        ]
      },
      {
        "name": "store_memories",
        "file_path": "scripts/python/cursor_ai_integration_memory_update.py",
        "parameters": [
          "self",
          "memories"
        ],
        "lines": 20,
        "complexity": 2,
        "calls": [
          "strftime",
          "info",
          "_store_in_mcp_system",
          "open",
          "dump",
          "error",
          "now"
        ],
        "variables": [
          "timestamp",
          "memory_file"
        ]
      }
    ],
    "generate_integration_report": [
      {
        "name": "generate_integration_report",
        "file_path": "scripts/python/yolo_mode_crew_memory_update.py",
        "parameters": [
          "self",
          "memories"
        ],
        "lines": 85,
        "complexity": 5,
        "calls": [
          "strftime",
          "info",
          "open",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "items",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "now",
          "get",
          "append",
          "write",
          "write",
          "enumerate",
          "write",
          "write",
          "write",
          "write",
          "write",
          "strftime",
          "len",
          "len",
          "now",
          "get",
          "get",
          "get",
          "get"
        ],
        "variables": [
          "timestamp",
          "report_file",
          "crew_memories",
          "crew"
        ]
      },
      {
        "name": "generate_integration_report",
        "file_path": "scripts/python/cursor_ai_integration_memory_update.py",
        "parameters": [
          "self",
          "memories"
        ],
        "lines": 82,
        "complexity": 5,
        "calls": [
          "strftime",
          "info",
          "open",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "items",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "write",
          "now",
          "get",
          "append",
          "write",
          "write",
          "enumerate",
          "write",
          "write",
          "write",
          "write",
          "write",
          "strftime",
          "len",
          "len",
          "now",
          "get",
          "get",
          "get",
          "get"
        ],
        "variables": [
          "timestamp",
          "report_file",
          "crew_memories",
          "crew"
        ]
      }
    ],
    "run_update": [
      {
        "name": "run_update",
        "file_path": "scripts/python/yolo_mode_crew_memory_update.py",
        "parameters": [
          "self"
        ],
        "lines": 30,
        "complexity": 2,
        "calls": [
          "info",
          "create_yolo_integration_memory",
          "create_crew_specific_memories",
          "store_memories",
          "generate_integration_report",
          "info",
          "error",
          "len",
          "len",
          "len"
        ],
        "variables": [
          "system_memory",
          "crew_memories",
          "all_memories",
          "report_file"
        ]
      },
      {
        "name": "run_update",
        "file_path": "scripts/python/cursor_ai_integration_memory_update.py",
        "parameters": [
          "self"
        ],
        "lines": 30,
        "complexity": 2,
        "calls": [
          "info",
          "create_cursor_ai_memory",
          "create_crew_specific_memories",
          "store_memories",
          "generate_integration_report",
          "info",
          "error",
          "len",
          "len",
          "len"
        ],
        "variables": [
          "system_memory",
          "crew_memories",
          "all_memories",
          "report_file"
        ]
      }
    ],
    "_initialize_crew": [
      {
        "name": "_initialize_crew",
        "file_path": "scripts/python/observation_lounge_yolo_mode_debrief.py",
        "parameters": [
          "self"
        ],
        "lines": 64,
        "complexity": 1,
        "calls": [],
        "variables": []
      },
      {
        "name": "_initialize_crew",
        "file_path": "scripts/python/simple_turborepo_research_system.py",
        "parameters": [
          "self"
        ],
        "lines": 58,
        "complexity": 1,
        "calls": [
          "CrewMember",
          "CrewMember",
          "CrewMember",
          "CrewMember",
          "CrewMember",
          "CrewMember",
          "CrewMember",
          "CrewMember",
          "CrewMember"
        ],
        "variables": []
      },
      {
        "name": "_initialize_crew",
        "file_path": "scripts/python/turborepo_research_system.py",
        "parameters": [
          "self"
        ],
        "lines": 58,
        "complexity": 1,
        "calls": [
          "CrewMember",
          "CrewMember",
          "CrewMember",
          "CrewMember",
          "CrewMember",
          "CrewMember",
          "CrewMember",
          "CrewMember",
          "CrewMember"
        ],
        "variables": []
      }
    ],
    "save_research_data": [
      {
        "name": "save_research_data",
        "file_path": "scripts/python/simple_turborepo_research_system.py",
        "parameters": [
          "self"
        ],
        "lines": 28,
        "complexity": 1,
        "calls": [
          "strftime",
          "info",
          "isoformat",
          "open",
          "dump",
          "now",
          "now",
          "items"
        ],
        "variables": [
          "timestamp",
          "data_filename",
          "research_data"
        ]
      },
      {
        "name": "save_research_data",
        "file_path": "scripts/python/turborepo_research_system.py",
        "parameters": [
          "self"
        ],
        "lines": 29,
        "complexity": 1,
        "calls": [
          "strftime",
          "info",
          "isoformat",
          "list",
          "list",
          "open",
          "dump",
          "now",
          "keys",
          "keys",
          "now",
          "items"
        ],
        "variables": [
          "timestamp",
          "data_filename",
          "research_data"
        ]
      }
    ],
    "save_results": [
      {
        "name": "save_results",
        "file_path": "scripts/python/email_research_system.py",
        "parameters": [
          "self",
          "filename"
        ],
        "lines": 5,
        "complexity": 1,
        "calls": [
          "print",
          "open",
          "dump"
        ],
        "variables": []
      },
      {
        "name": "save_results",
        "file_path": "scripts/python/company_research_system.py",
        "parameters": [
          "self",
          "filename"
        ],
        "lines": 5,
        "complexity": 1,
        "calls": [
          "print",
          "open",
          "dump"
        ],
        "variables": []
      }
    ]
  },
  "redundant_scripts": [
    [
      "scripts/greg-community-intelligence-dual-milestone-push.sh",
      "scripts/channel-intelligence-dual-milestone-push.sh"
    ],
    [
      "scripts/safe-execute.sh",
      "scripts/master-safe-execute.sh"
    ],
    [
      "scripts/add-quote-handling-memory.py",
      "scripts/add-architecture-memory.py",
      "scripts/add-quote-handling-memory-simple.py"
    ],
    [
      "scripts/alex-ai-universal-milestone-push.sh",
      "scripts/enhanced-ai-prompts-dual-milestone-push.sh"
    ],
    [
      "scripts/setup-bidirectional-sync.sh",
      "scripts/automate-bidirectional-setup.sh"
    ],
    [
      "scripts/setup-database.js",
      "scripts/setup-database-simple.js"
    ],
    [
      "scripts/simple-e2e-test.js",
      "scripts/improved-e2e-test.js",
      "scripts/puppeteer-e2e-test.js"
    ],
    [
      "scripts/python/test_mcp_system.py",
      "scripts/python/mcp_memory_optimization_system.py"
    ],
    [
      "scripts/python/yolo_mode_crew_memory_update.py",
      "scripts/python/cursor_ai_integration_memory_update.py"
    ],
    [
      "scripts/python/simple_turborepo_research_system.py",
      "scripts/python/turborepo_research_system.py"
    ]
  ],
  "consolidation_plan": {
    "function_consolidations": [
      {
        "function_name": "log_info",
        "keep_implementation": "scripts/n8n-change-monitor.sh",
        "remove_from": [
          "scripts/n8n-cicd-sync.sh",
          "scripts/analyze-conflicts.sh",
          "scripts/security-validation.sh",
          "scripts/test-workflows.sh",
          "scripts/analyze-production-changes.sh",
          "scripts/setup-bidirectional-sync.sh",
          "scripts/test-intelligent-discovery.sh",
          "scripts/setup-n8n-bidirectional-sync.sh",
          "scripts/sync-dashboard.sh",
          "scripts/automate-bidirectional-setup.sh",
          "scripts/automate-bidirectional-setup.sh"
        ],
        "reason": "Duplicate function found in 12 scripts"
      },
      {
        "function_name": "log_success",
        "keep_implementation": "scripts/n8n-change-monitor.sh",
        "remove_from": [
          "scripts/n8n-cicd-sync.sh",
          "scripts/analyze-conflicts.sh",
          "scripts/security-validation.sh",
          "scripts/test-workflows.sh",
          "scripts/analyze-production-changes.sh",
          "scripts/setup-bidirectional-sync.sh",
          "scripts/test-intelligent-discovery.sh",
          "scripts/setup-n8n-bidirectional-sync.sh",
          "scripts/sync-dashboard.sh",
          "scripts/automate-bidirectional-setup.sh",
          "scripts/automate-bidirectional-setup.sh"
        ],
        "reason": "Duplicate function found in 12 scripts"
      },
      {
        "function_name": "log_warning",
        "keep_implementation": "scripts/n8n-change-monitor.sh",
        "remove_from": [
          "scripts/n8n-cicd-sync.sh",
          "scripts/analyze-conflicts.sh",
          "scripts/security-validation.sh",
          "scripts/test-workflows.sh",
          "scripts/analyze-production-changes.sh",
          "scripts/setup-bidirectional-sync.sh",
          "scripts/test-intelligent-discovery.sh",
          "scripts/setup-n8n-bidirectional-sync.sh",
          "scripts/sync-dashboard.sh",
          "scripts/automate-bidirectional-setup.sh"
        ],
        "reason": "Duplicate function found in 11 scripts"
      },
      {
        "function_name": "log_error",
        "keep_implementation": "scripts/n8n-change-monitor.sh",
        "remove_from": [
          "scripts/n8n-cicd-sync.sh",
          "scripts/analyze-conflicts.sh",
          "scripts/security-validation.sh",
          "scripts/test-workflows.sh",
          "scripts/analyze-production-changes.sh",
          "scripts/setup-bidirectional-sync.sh",
          "scripts/test-intelligent-discovery.sh",
          "scripts/setup-n8n-bidirectional-sync.sh",
          "scripts/sync-dashboard.sh",
          "scripts/automate-bidirectional-setup.sh"
        ],
        "reason": "Duplicate function found in 11 scripts"
      },
      {
        "function_name": "check_prerequisites",
        "keep_implementation": "scripts/setup-bidirectional-sync.sh",
        "remove_from": [
          "scripts/n8n-cicd-sync.sh",
          "scripts/setup-n8n-bidirectional-sync.sh",
          "scripts/n8n-change-monitor.sh",
          "scripts/automate-bidirectional-setup.sh"
        ],
        "reason": "Duplicate function found in 5 scripts"
      },
      {
        "function_name": "test_n8n_connection",
        "keep_implementation": "scripts/n8n-cicd-sync.sh",
        "remove_from": [
          "scripts/n8n-change-monitor.sh",
          "scripts/deploy-complete-n8n-infrastructure.sh"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "main",
        "keep_implementation": "scripts/python/test_mcp_system.py",
        "remove_from": [
          "scripts/n8n-cicd-sync.sh",
          "scripts/intelligent-script-discovery.py",
          "scripts/setup-supabase-with-credentials.sh",
          "scripts/script-consolidation-plan.py",
          "scripts/milestone-push.sh",
          "scripts/milestone-push-system.sh",
          "scripts/deploy-n8n-with-credentials.sh",
          "scripts/script-memory-system.py",
          "scripts/analyze-conflicts.sh",
          "scripts/add-quote-handling-memory.py",
          "scripts/security-validation.sh",
          "scripts/validate-consolidated-structure.py",
          "scripts/quick-production-test.sh",
          "scripts/security-audit.sh",
          "scripts/n8n-bidirectional-sync.py",
          "scripts/test-workflows.sh",
          "scripts/n8n-sync-monitor.py",
          "scripts/update-script-references.py",
          "scripts/production-readiness-assessment.sh",
          "scripts/validate-api-keys.sh",
          "scripts/add-architecture-memory.py",
          "scripts/analyze-production-changes.sh",
          "scripts/comprehensive-string-fix.sh",
          "scripts/comprehensive-string-fix.sh",
          "scripts/comprehensive-string-fix.sh",
          "scripts/script-analyzer.py",
          "scripts/setup-bidirectional-sync.sh",
          "scripts/master-safe-execute.sh",
          "scripts/test-intelligent-discovery.sh",
          "scripts/setup-hourly-scraping.sh",
          "scripts/setup-n8n-bidirectional-sync.sh",
          "scripts/sync-dashboard.sh",
          "scripts/secure-credential-manager.sh",
          "scripts/n8n-change-monitor.sh",
          "scripts/shell-prompt-safety-system.sh",
          "scripts/production-shell-engine.sh",
          "scripts/production-shell-engine.sh",
          "scripts/intelligent-script-purge.py",
          "scripts/deep-code-analyzer.py",
          "scripts/validate-strings.sh",
          "scripts/add-quote-handling-memory-simple.py",
          "scripts/production-testing-suite.sh",
          "scripts/automate-bidirectional-setup.sh",
          "scripts/automate-bidirectional-setup.sh",
          "scripts/deploy-complete-n8n-infrastructure.sh",
          "scripts/string-manipulation-fix.sh",
          "scripts/string-manipulation-fix.sh",
          "scripts/generated/test-basic.sh",
          "scripts/python/youtube_scraper_crew_integration.py",
          "scripts/python/final_monorepo_cleanup.py",
          "scripts/python/turborepo_implementation_plan.py",
          "scripts/python/alex_ai_yolo_mode_integration_system.py",
          "scripts/python/comprehensive_market_research_system.py",
          "scripts/python/phase2_turborepo_optimization.py",
          "scripts/python/crew_coordination_update_system.py",
          "scripts/python/youtube_crew_memory_integration.py",
          "scripts/python/enhanced_ai_prompts_system.py",
          "scripts/python/alex_ai_credential_manager.py",
          "scripts/python/alex_ai_yolo_initialization.py",
          "scripts/python/alex_ai_memory_sharing_assessment.py",
          "scripts/python/alex_ai_crew_mermaid_models.py",
          "scripts/python/enhanced_unified_router.py",
          "scripts/python/crew_learning_assessment.py",
          "scripts/python/optimized_web_crawler_system.py",
          "scripts/python/observation_lounge_crew_debrief.py",
          "scripts/python/enhanced_ai_prompts_deployment_system.py",
          "scripts/python/cursor_ai_behavior_analysis.py",
          "scripts/python/alex_ai_job_search_system.py",
          "scripts/python/yolo_mode_crew_memory_update.py",
          "scripts/python/youtube_channel_intelligence_system.py",
          "scripts/python/crew_yolo_mode_memory_sync.py",
          "scripts/python/alex_ai_job_search_integration.py",
          "scripts/python/test_channel_intelligence_system.py",
          "scripts/python/cursor_ai_integration_memory_update.py",
          "scripts/python/simple_youtube_crew_memory_demo.py",
          "scripts/python/comprehensive_yolo_stress_test.py",
          "scripts/python/observation_lounge_yolo_mode_debrief.py",
          "scripts/python/knowledge_gap_research_plan.py",
          "scripts/python/mcp_memory_optimization_system.py",
          "scripts/python/research_phase_execution_plan.py",
          "scripts/python/business_operations_legal_system.py",
          "scripts/python/advanced_ai_agent_development_system.py",
          "scripts/python/simple_turborepo_research_system.py",
          "scripts/python/agile_sprint_dashboard_system.py",
          "scripts/python/test_youtube_scraper_integration.py",
          "scripts/python/crew_business_readiness_consensus.py",
          "scripts/python/crew_coordinator.py",
          "scripts/python/phase3_alex_ai_integration.py",
          "scripts/python/alex_ai_yolo_mode_memory_integration.py",
          "scripts/python/supabase_data_import_script.py",
          "scripts/python/observation_lounge_memory_consensus.py",
          "scripts/python/test_alex_ai_system.py",
          "scripts/python/email_research_system.py",
          "scripts/python/fix_credential_security.py",
          "scripts/python/progressive_git_push_system.py",
          "scripts/python/yolo_mode_issue_investigation.py",
          "scripts/python/mcp_library_computer_system.py",
          "scripts/python/phase1_turborepo_setup.py",
          "scripts/python/n8n_integration_test_system.py",
          "scripts/python/proper_yolo_mode_configuration.py",
          "scripts/python/intelligent_monorepo_cleanup.py",
          "scripts/python/company_research_system.py",
          "scripts/python/alex-ai-universal-deployment-system.py",
          "scripts/python/alex_ai_comprehensive_assessment.py",
          "scripts/python/business_readiness_assessment.py",
          "scripts/python/demo_youtube_scraper_system.py",
          "scripts/python/store_crew_memories_supabase.py"
        ],
        "reason": "Duplicate function found in 108 scripts"
      },
      {
        "function_name": "print_status",
        "keep_implementation": "scripts/security-audit.sh",
        "remove_from": [
          "scripts/greg-community-intelligence-dual-milestone-push.sh",
          "scripts/milestone-push.sh",
          "scripts/channel-intelligence-dual-milestone-push.sh"
        ],
        "reason": "Duplicate function found in 4 scripts"
      },
      {
        "function_name": "print_success",
        "keep_implementation": "scripts/greg-community-intelligence-dual-milestone-push.sh",
        "remove_from": [
          "scripts/channel-intelligence-dual-milestone-push.sh",
          "scripts/alex-ai-universal-milestone-push.sh",
          "scripts/alex-ai-universal-git-milestone-push.sh",
          "scripts/enhanced-ai-prompts-dual-milestone-push.sh"
        ],
        "reason": "Duplicate function found in 5 scripts"
      },
      {
        "function_name": "print_error",
        "keep_implementation": "scripts/greg-community-intelligence-dual-milestone-push.sh",
        "remove_from": [
          "scripts/milestone-push.sh",
          "scripts/channel-intelligence-dual-milestone-push.sh",
          "scripts/alex-ai-universal-milestone-push.sh",
          "scripts/alex-ai-universal-git-milestone-push.sh",
          "scripts/enhanced-ai-prompts-dual-milestone-push.sh"
        ],
        "reason": "Duplicate function found in 6 scripts"
      },
      {
        "function_name": "print_section",
        "keep_implementation": "scripts/greg-community-intelligence-dual-milestone-push.sh",
        "remove_from": [
          "scripts/channel-intelligence-dual-milestone-push.sh"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "__init__",
        "keep_implementation": "scripts/python/research_phase_execution_plan.py",
        "remove_from": [
          "scripts/intelligent-script-discovery.py",
          "scripts/script-consolidation-plan.py",
          "scripts/script-memory-system.py",
          "scripts/add-quote-handling-memory.py",
          "scripts/validate-consolidated-structure.py",
          "scripts/n8n-bidirectional-sync.py",
          "scripts/n8n-sync-monitor.py",
          "scripts/update-script-references.py",
          "scripts/add-architecture-memory.py",
          "scripts/script-analyzer.py",
          "scripts/intelligent-script-purge.py",
          "scripts/deep-code-analyzer.py",
          "scripts/add-quote-handling-memory-simple.py",
          "scripts/python/youtube_scraper_crew_integration.py",
          "scripts/python/final_monorepo_cleanup.py",
          "scripts/python/turborepo_implementation_plan.py",
          "scripts/python/alex_ai_yolo_mode_integration_system.py",
          "scripts/python/comprehensive_market_research_system.py",
          "scripts/python/phase2_turborepo_optimization.py",
          "scripts/python/youtube_crew_memory_integration.py",
          "scripts/python/test_mcp_system.py",
          "scripts/python/enhanced_ai_prompts_system.py",
          "scripts/python/alex_ai_credential_manager.py",
          "scripts/python/alex_ai_yolo_initialization.py",
          "scripts/python/alex_ai_memory_sharing_assessment.py",
          "scripts/python/alex_ai_crew_mermaid_models.py",
          "scripts/python/enhanced_unified_router.py",
          "scripts/python/crew_learning_assessment.py",
          "scripts/python/optimized_web_crawler_system.py",
          "scripts/python/enhanced_ai_prompts_deployment_system.py",
          "scripts/python/cursor_ai_behavior_analysis.py",
          "scripts/python/alex_ai_job_search_system.py",
          "scripts/python/yolo_mode_crew_memory_update.py",
          "scripts/python/youtube_channel_intelligence_system.py",
          "scripts/python/crew_yolo_mode_memory_sync.py",
          "scripts/python/alex_ai_job_search_integration.py",
          "scripts/python/test_channel_intelligence_system.py",
          "scripts/python/cursor_ai_integration_memory_update.py",
          "scripts/python/simple_youtube_crew_memory_demo.py",
          "scripts/python/comprehensive_yolo_stress_test.py",
          "scripts/python/observation_lounge_yolo_mode_debrief.py",
          "scripts/python/mcp_memory_optimization_system.py",
          "scripts/python/repository_optimization_analysis.py",
          "scripts/python/business_operations_legal_system.py",
          "scripts/python/advanced_ai_agent_development_system.py",
          "scripts/python/advanced_ai_agent_development_system.py",
          "scripts/python/simple_turborepo_research_system.py",
          "scripts/python/agile_sprint_dashboard_system.py",
          "scripts/python/test_youtube_scraper_integration.py",
          "scripts/python/crew_coordinator.py",
          "scripts/python/phase3_alex_ai_integration.py",
          "scripts/python/alex_ai_yolo_mode_memory_integration.py",
          "scripts/python/mcp_integration_system.py",
          "scripts/python/supabase_data_import_script.py",
          "scripts/python/observation_lounge_memory_consensus.py",
          "scripts/python/email_research_system.py",
          "scripts/python/turborepo_research_system.py",
          "scripts/python/progressive_git_push_system.py",
          "scripts/python/yolo_mode_issue_investigation.py",
          "scripts/python/mcp_library_computer_system.py",
          "scripts/python/phase1_turborepo_setup.py",
          "scripts/python/n8n_integration_test_system.py",
          "scripts/python/proper_yolo_mode_configuration.py",
          "scripts/python/intelligent_monorepo_cleanup.py",
          "scripts/python/company_research_system.py",
          "scripts/python/alex-ai-universal-deployment-system.py",
          "scripts/python/alex_ai_comprehensive_assessment.py",
          "scripts/python/demo_youtube_scraper_system.py",
          "scripts/python/clean_secrets.py",
          "scripts/python/store_crew_memories_supabase.py"
        ],
        "reason": "Duplicate function found in 71 scripts"
      },
      {
        "function_name": "load_analysis",
        "keep_implementation": "scripts/intelligent-script-discovery.py",
        "remove_from": [
          "scripts/script-consolidation-plan.py"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "create_backup",
        "keep_implementation": "scripts/python/final_monorepo_cleanup.py",
        "remove_from": [
          "scripts/script-consolidation-plan.py",
          "scripts/intelligent-script-purge.py",
          "scripts/python/intelligent_monorepo_cleanup.py"
        ],
        "reason": "Duplicate function found in 4 scripts"
      },
      {
        "function_name": "print_info",
        "keep_implementation": "scripts/milestone-push.sh",
        "remove_from": [
          "scripts/alex-ai-universal-milestone-push.sh",
          "scripts/alex-ai-universal-git-milestone-push.sh",
          "scripts/enhanced-ai-prompts-dual-milestone-push.sh"
        ],
        "reason": "Duplicate function found in 4 scripts"
      },
      {
        "function_name": "print_warning",
        "keep_implementation": "scripts/milestone-push.sh",
        "remove_from": [
          "scripts/alex-ai-universal-milestone-push.sh",
          "scripts/alex-ai-universal-git-milestone-push.sh",
          "scripts/enhanced-ai-prompts-dual-milestone-push.sh"
        ],
        "reason": "Duplicate function found in 4 scripts"
      },
      {
        "function_name": "safe_execute",
        "keep_implementation": "scripts/shell-prompt-safety-system.sh",
        "remove_from": [
          "scripts/safe-execute.sh",
          "scripts/comprehensive-string-fix.sh",
          "scripts/master-safe-execute.sh",
          "scripts/string-manipulation-fix.sh"
        ],
        "reason": "Duplicate function found in 5 scripts"
      },
      {
        "function_name": "safe_status",
        "keep_implementation": "scripts/safe-execute.sh",
        "remove_from": [
          "scripts/comprehensive-string-fix.sh",
          "scripts/comprehensive-string-fix.sh",
          "scripts/master-safe-execute.sh",
          "scripts/string-manipulation-fix.sh",
          "scripts/string-manipulation-fix.sh"
        ],
        "reason": "Duplicate function found in 6 scripts"
      },
      {
        "function_name": "safe_milestone",
        "keep_implementation": "scripts/safe-execute.sh",
        "remove_from": [
          "scripts/comprehensive-string-fix.sh",
          "scripts/comprehensive-string-fix.sh",
          "scripts/master-safe-execute.sh",
          "scripts/string-manipulation-fix.sh",
          "scripts/string-manipulation-fix.sh",
          "scripts/templates/safe-output/milestone.sh"
        ],
        "reason": "Duplicate function found in 7 scripts"
      },
      {
        "function_name": "safe_progress",
        "keep_implementation": "scripts/safe-execute.sh",
        "remove_from": [
          "scripts/comprehensive-string-fix.sh",
          "scripts/comprehensive-string-fix.sh",
          "scripts/master-safe-execute.sh",
          "scripts/string-manipulation-fix.sh",
          "scripts/string-manipulation-fix.sh",
          "scripts/templates/safe-output/progress.sh"
        ],
        "reason": "Duplicate function found in 7 scripts"
      },
      {
        "function_name": "safe_list",
        "keep_implementation": "scripts/safe-execute.sh",
        "remove_from": [
          "scripts/comprehensive-string-fix.sh",
          "scripts/comprehensive-string-fix.sh",
          "scripts/master-safe-execute.sh",
          "scripts/string-manipulation-fix.sh",
          "scripts/string-manipulation-fix.sh",
          "scripts/templates/safe-output/list.sh"
        ],
        "reason": "Duplicate function found in 7 scripts"
      },
      {
        "function_name": "save_memory_to_file",
        "keep_implementation": "scripts/add-architecture-memory.py",
        "remove_from": [
          "scripts/add-quote-handling-memory.py",
          "scripts/add-quote-handling-memory-simple.py"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "add_memory",
        "keep_implementation": "scripts/add-quote-handling-memory.py",
        "remove_from": [
          "scripts/add-architecture-memory.py",
          "scripts/add-quote-handling-memory-simple.py"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "test_result",
        "keep_implementation": "scripts/quick-production-test.sh",
        "remove_from": [
          "scripts/production-testing-suite.sh"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "test_shell_generation",
        "keep_implementation": "scripts/production-testing-suite.sh",
        "remove_from": [
          "scripts/quick-production-test.sh"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "test_error_handling",
        "keep_implementation": "scripts/python/comprehensive_yolo_stress_test.py",
        "remove_from": [
          "scripts/quick-production-test.sh",
          "scripts/production-testing-suite.sh"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "test_performance",
        "keep_implementation": "scripts/python/comprehensive_yolo_stress_test.py",
        "remove_from": [
          "scripts/quick-production-test.sh",
          "scripts/production-testing-suite.sh",
          "scripts/python/enhanced_prompts_test_suite.py"
        ],
        "reason": "Duplicate function found in 4 scripts"
      },
      {
        "function_name": "log",
        "keep_implementation": "scripts/python/final_monorepo_cleanup.py",
        "remove_from": [
          "scripts/production-readiness-assessment.sh",
          "scripts/validate-api-keys.sh",
          "scripts/production-shell-engine.sh",
          "scripts/production-shell-engine.sh",
          "scripts/production-testing-suite.sh",
          "scripts/generated/test-basic.sh",
          "scripts/python/intelligent_monorepo_cleanup.py"
        ],
        "reason": "Duplicate function found in 8 scripts"
      },
      {
        "function_name": "print_header",
        "keep_implementation": "scripts/alex-ai-universal-milestone-push.sh",
        "remove_from": [
          "scripts/alex-ai-universal-git-milestone-push.sh",
          "scripts/enhanced-ai-prompts-dual-milestone-push.sh"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "print_step",
        "keep_implementation": "scripts/alex-ai-universal-milestone-push.sh",
        "remove_from": [
          "scripts/alex-ai-universal-git-milestone-push.sh",
          "scripts/enhanced-ai-prompts-dual-milestone-push.sh"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "create_memory_summary",
        "keep_implementation": "scripts/python/store_crew_memories_supabase.py",
        "remove_from": [
          "scripts/add-architecture-memory.py",
          "scripts/add-quote-handling-memory-simple.py"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "safe_echo",
        "keep_implementation": "scripts/comprehensive-string-fix.sh",
        "remove_from": [
          "scripts/master-safe-execute.sh"
        ],
        "reason": "Duplicate function found in 4 scripts"
      },
      {
        "function_name": "log_step",
        "keep_implementation": "scripts/python/phase2_turborepo_optimization.py",
        "remove_from": [
          "scripts/setup-bidirectional-sync.sh",
          "scripts/automate-bidirectional-setup.sh",
          "scripts/python/phase3_alex_ai_integration.py",
          "scripts/python/phase1_turborepo_setup.py"
        ],
        "reason": "Duplicate function found in 5 scripts"
      },
      {
        "function_name": "log_automation",
        "keep_implementation": "scripts/setup-bidirectional-sync.sh",
        "remove_from": [
          "scripts/automate-bidirectional-setup.sh"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "configure_github_secrets",
        "keep_implementation": "scripts/setup-bidirectional-sync.sh",
        "remove_from": [
          "scripts/automate-bidirectional-setup.sh"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "enable_scheduled_workflows",
        "keep_implementation": "scripts/automate-bidirectional-setup.sh",
        "remove_from": [
          "scripts/setup-bidirectional-sync.sh"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "generate_final_report",
        "keep_implementation": "scripts/setup-bidirectional-sync.sh",
        "remove_from": [
          "scripts/automate-bidirectional-setup.sh"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "handle_error",
        "keep_implementation": "scripts/production-shell-engine.sh",
        "remove_from": [
          "scripts/generated/test-basic.sh"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "safe_output",
        "keep_implementation": "scripts/string-manipulation-fix.sh",
        "remove_from": [
          "scripts/production-shell-engine.sh"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "output",
        "keep_implementation": "scripts/production-shell-engine.sh",
        "remove_from": [
          "scripts/generated/test-status.sh",
          "scripts/generated/test-progress.sh"
        ],
        "reason": "Duplicate function found in 4 scripts"
      },
      {
        "function_name": "show_status",
        "keep_implementation": "scripts/production-shell-engine.sh",
        "remove_from": [
          "scripts/generated/test-status.sh"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "update_progress",
        "keep_implementation": "scripts/production-shell-engine.sh",
        "remove_from": [
          "scripts/generated/test-progress.sh"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "run_progress",
        "keep_implementation": "scripts/production-shell-engine.sh",
        "remove_from": [
          "scripts/generated/test-progress.sh"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "logTest",
        "keep_implementation": "scripts/simple-e2e-test.js",
        "remove_from": [
          "scripts/improved-e2e-test.js",
          "scripts/puppeteer-e2e-test.js"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "takeScreenshot",
        "keep_implementation": "scripts/simple-e2e-test.js",
        "remove_from": [
          "scripts/improved-e2e-test.js",
          "scripts/puppeteer-e2e-test.js"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "waitForElement",
        "keep_implementation": "scripts/simple-e2e-test.js",
        "remove_from": [
          "scripts/puppeteer-e2e-test.js"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "testPageLoad",
        "keep_implementation": "scripts/improved-e2e-test.js",
        "remove_from": [
          "scripts/simple-e2e-test.js",
          "scripts/puppeteer-e2e-test.js"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "testDashboardButtons",
        "keep_implementation": "scripts/simple-e2e-test.js",
        "remove_from": [
          "scripts/improved-e2e-test.js",
          "scripts/puppeteer-e2e-test.js"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "testJobCards",
        "keep_implementation": "scripts/simple-e2e-test.js",
        "remove_from": [
          "scripts/improved-e2e-test.js",
          "scripts/puppeteer-e2e-test.js"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "testFilterSidebar",
        "keep_implementation": "scripts/simple-e2e-test.js",
        "remove_from": [
          "scripts/puppeteer-e2e-test.js"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "testResumeUpload",
        "keep_implementation": "scripts/simple-e2e-test.js",
        "remove_from": [
          "scripts/puppeteer-e2e-test.js"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "testResponsiveDesign",
        "keep_implementation": "scripts/simple-e2e-test.js",
        "remove_from": [
          "scripts/puppeteer-e2e-test.js"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "testAPIConnectivity",
        "keep_implementation": "scripts/simple-e2e-test.js",
        "remove_from": [
          "scripts/improved-e2e-test.js",
          "scripts/puppeteer-e2e-test.js"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "runAllTests",
        "keep_implementation": "scripts/simple-e2e-test.js",
        "remove_from": [
          "scripts/improved-e2e-test.js",
          "scripts/puppeteer-e2e-test.js"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "validate_strings",
        "keep_implementation": "scripts/validate-strings.sh",
        "remove_from": [
          "scripts/string-manipulation-fix.sh"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "organize_remaining_files",
        "keep_implementation": "scripts/python/final_monorepo_cleanup.py",
        "remove_from": [
          "scripts/python/intelligent_monorepo_cleanup.py"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "run_command",
        "keep_implementation": "scripts/python/phase2_turborepo_optimization.py",
        "remove_from": [
          "scripts/python/phase3_alex_ai_integration.py",
          "scripts/python/phase1_turborepo_setup.py"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "store_crew_memories",
        "keep_implementation": "scripts/python/store_crew_memories_supabase.py",
        "remove_from": [
          "scripts/python/youtube_crew_memory_integration.py",
          "scripts/python/simple_youtube_crew_memory_demo.py"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "_store_in_mcp_system",
        "keep_implementation": "scripts/python/yolo_mode_crew_memory_update.py",
        "remove_from": [
          "scripts/python/youtube_crew_memory_integration.py",
          "scripts/python/alex_ai_yolo_initialization.py",
          "scripts/python/cursor_ai_integration_memory_update.py",
          "scripts/python/simple_youtube_crew_memory_demo.py"
        ],
        "reason": "Duplicate function found in 5 scripts"
      },
      {
        "function_name": "calculate_importance_score",
        "keep_implementation": "scripts/python/test_mcp_system.py",
        "remove_from": [
          "scripts/python/mcp_memory_optimization_system.py"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "find_similar_memories",
        "keep_implementation": "scripts/python/test_mcp_system.py",
        "remove_from": [
          "scripts/python/mcp_memory_optimization_system.py"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "consolidate_similar_memories",
        "keep_implementation": "scripts/python/test_mcp_system.py",
        "remove_from": [
          "scripts/python/mcp_memory_optimization_system.py"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "_consolidate_content",
        "keep_implementation": "scripts/python/test_mcp_system.py",
        "remove_from": [
          "scripts/python/mcp_memory_optimization_system.py"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "_create_content_summary",
        "keep_implementation": "scripts/python/test_mcp_system.py",
        "remove_from": [
          "scripts/python/mcp_memory_optimization_system.py"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "generate_optimization_report",
        "keep_implementation": "scripts/python/mcp_memory_optimization_system.py",
        "remove_from": [
          "scripts/python/test_mcp_system.py",
          "scripts/python/repository_optimization_analysis.py"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "create_crew_specific_memories",
        "keep_implementation": "scripts/python/yolo_mode_crew_memory_update.py",
        "remove_from": [
          "scripts/python/cursor_ai_integration_memory_update.py"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "store_memories",
        "keep_implementation": "scripts/python/yolo_mode_crew_memory_update.py",
        "remove_from": [
          "scripts/python/cursor_ai_integration_memory_update.py"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "generate_integration_report",
        "keep_implementation": "scripts/python/yolo_mode_crew_memory_update.py",
        "remove_from": [
          "scripts/python/cursor_ai_integration_memory_update.py"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "run_update",
        "keep_implementation": "scripts/python/yolo_mode_crew_memory_update.py",
        "remove_from": [
          "scripts/python/cursor_ai_integration_memory_update.py"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "_initialize_crew",
        "keep_implementation": "scripts/python/observation_lounge_yolo_mode_debrief.py",
        "remove_from": [
          "scripts/python/simple_turborepo_research_system.py",
          "scripts/python/turborepo_research_system.py"
        ],
        "reason": "Duplicate function found in 3 scripts"
      },
      {
        "function_name": "save_research_data",
        "keep_implementation": "scripts/python/turborepo_research_system.py",
        "remove_from": [
          "scripts/python/simple_turborepo_research_system.py"
        ],
        "reason": "Duplicate function found in 2 scripts"
      },
      {
        "function_name": "save_results",
        "keep_implementation": "scripts/python/email_research_system.py",
        "remove_from": [
          "scripts/python/company_research_system.py"
        ],
        "reason": "Duplicate function found in 2 scripts"
      }
    ],
    "script_consolidations": [
      {
        "keep_script": "scripts/channel-intelligence-dual-milestone-push.sh",
        "merge_from": [
          "scripts/greg-community-intelligence-dual-milestone-push.sh"
        ],
        "reason": "Redundant scripts with 2 similar implementations"
      },
      {
        "keep_script": "scripts/master-safe-execute.sh",
        "merge_from": [
          "scripts/safe-execute.sh"
        ],
        "reason": "Redundant scripts with 2 similar implementations"
      },
      {
        "keep_script": "scripts/add-quote-handling-memory.py",
        "merge_from": [
          "scripts/add-architecture-memory.py",
          "scripts/add-quote-handling-memory-simple.py"
        ],
        "reason": "Redundant scripts with 3 similar implementations"
      },
      {
        "keep_script": "scripts/alex-ai-universal-milestone-push.sh",
        "merge_from": [
          "scripts/enhanced-ai-prompts-dual-milestone-push.sh"
        ],
        "reason": "Redundant scripts with 2 similar implementations"
      },
      {
        "keep_script": "scripts/automate-bidirectional-setup.sh",
        "merge_from": [
          "scripts/setup-bidirectional-sync.sh"
        ],
        "reason": "Redundant scripts with 2 similar implementations"
      },
      {
        "keep_script": "scripts/setup-database-simple.js",
        "merge_from": [
          "scripts/setup-database.js"
        ],
        "reason": "Redundant scripts with 2 similar implementations"
      },
      {
        "keep_script": "scripts/simple-e2e-test.js",
        "merge_from": [
          "scripts/improved-e2e-test.js",
          "scripts/puppeteer-e2e-test.js"
        ],
        "reason": "Redundant scripts with 3 similar implementations"
      },
      {
        "keep_script": "scripts/python/mcp_memory_optimization_system.py",
        "merge_from": [
          "scripts/python/test_mcp_system.py"
        ],
        "reason": "Redundant scripts with 2 similar implementations"
      },
      {
        "keep_script": "scripts/python/cursor_ai_integration_memory_update.py",
        "merge_from": [
          "scripts/python/yolo_mode_crew_memory_update.py"
        ],
        "reason": "Redundant scripts with 2 similar implementations"
      },
      {
        "keep_script": "scripts/python/simple_turborepo_research_system.py",
        "merge_from": [
          "scripts/python/turborepo_research_system.py"
        ],
        "reason": "Redundant scripts with 2 similar implementations"
      }
    ],
    "merge_candidates": []
  },
  "estimated_savings": {
    "function_savings_lines": 8072,
    "script_savings_lines": 3217,
    "total_savings_lines": 11289,
    "duplicate_functions_count": 72,
    "redundant_scripts_count": 10
  }
}